/* A Bison parser, made by GNU Bison 3.0.4.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2015 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "3.0.4"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs


/* Copy the first part of user declarations.  */
#line 31 "sql_yacc.yy" /* yacc.c:339  */

/*
Note: YYTHD is passed as an argument to yyparse(), and subsequently to yylex().
*/
#define YYP (YYTHD->m_parser_state)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL (YYLIP->query_charset)
#define YYMEM_ROOT (YYTHD->mem_root)
#define YYCLIENT_NO_SCHEMA (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))

#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_query_block()

#include <sys/types.h>  // TODO: replace with cstdint

#include <algorithm>
#include <cerrno>
#include <climits>
#include <cstdlib>
#include <cstring>
#include <limits>
#include <memory>
#include <string>
#include <type_traits>
#include <utility>

#include "field_types.h"
#include "ft_global.h"
#include "lex_string.h"
#include "libbinlogevents/include/binlog_event.h"
#include "m_ctype.h"
#include "m_string.h"
#include "my_alloc.h"
#include "my_base.h"
#include "my_check_opt.h"
#include "my_dbug.h"
#include "my_inttypes.h"  // TODO: replace with cstdint
#include "my_sqlcommand.h"
#include "my_sys.h"
#include "my_thread_local.h"
#include "my_time.h"
#include "myisam.h"
#include "myisammrg.h"
#include "mysql/mysql_lex_string.h"
#include "mysql/plugin.h"
#include "mysql/udf_registration_types.h"
#include "mysql_com.h"
#include "mysql_time.h"
#include "mysqld_error.h"
#include "prealloced_array.h"
#include "sql/auth/auth_acls.h"
#include "sql/auth/auth_common.h"
#include "sql/binlog.h"                          // for MAX_LOG_UNIQUE_FN_EXT
#include "sql/create_field.h"
#include "sql/dd/types/abstract_table.h"         // TT_BASE_TABLE
#include "sql/dd/types/column.h"
#include "sql/derror.h"
#include "sql/event_parse_data.h"
#include "sql/field.h"
#include "sql/gis/srid.h"                    // gis::srid_t
#include "sql/handler.h"
#include "sql/item.h"
#include "sql/item_cmpfunc.h"
#include "sql/item_create.h"
#include "sql/item_func.h"
#include "sql/item_geofunc.h"
#include "sql/item_json_func.h"
#include "sql/item_regexp_func.h"
#include "sql/item_row.h"
#include "sql/item_strfunc.h"
#include "sql/item_subselect.h"
#include "sql/item_sum.h"
#include "sql/item_timefunc.h"
#include "sql/json_dom.h"
#include "sql/json_syntax_check.h"           // is_valid_json_syntax
#include "sql/key_spec.h"
#include "sql/keycaches.h"
#include "sql/lex_symbol.h"
#include "sql/lex_token.h"
#include "sql/lexer_yystype.h"
#include "sql/mdl.h"
#include "sql/mem_root_array.h"
#include "sql/mysqld.h"
#include "sql/options_mysqld.h"
#include "sql/parse_location.h"
#include "sql/parse_tree_helpers.h"
#include "sql/parse_tree_node_base.h"
#include "sql/parser_yystype.h"
#include "sql/partition_element.h"
#include "sql/partition_info.h"
#include "sql/protocol.h"
#include "sql/query_options.h"
#include "sql/resourcegroups/platform/thread_attrs_api.h"
#include "sql/resourcegroups/resource_group_basic_types.h"
#include "sql/rpl_filter.h"
#include "sql/rpl_replica.h"                       // Sql_cmd_change_repl_filter
#include "sql/set_var.h"
#include "sql/sp.h"
#include "sql/sp_head.h"
#include "sql/sp_instr.h"
#include "sql/sp_pcontext.h"
#include "sql/spatial.h"
#include "sql/sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql/sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql/sql_backup_lock.h"                   // Sql_cmd_lock_instance
#include "sql/sql_class.h"      /* Key_part_spec, enum_filetype */
#include "sql/sql_cmd_srs.h"
#include "sql/sql_connect.h"
#include "sql/sql_component.h"
#include "sql/sql_error.h"
#include "sql/sql_exchange.h"
#include "sql/sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql/sql_handler.h"                       // Sql_cmd_handler_*
#include "sql/sql_import.h"                        // Sql_cmd_import_table
#include "sql/sql_lex.h"
#include "sql/sql_list.h"
#include "sql/sql_parse.h"                        /* comp_*_creator */
#include "sql/sql_plugin.h"                      // plugin_is_ready
#include "sql/sql_profile.h"
#include "sql/sql_select.h"                      // Sql_cmd_select...
#include "sql/sql_servers.h"
#include "sql/sql_signal.h"
#include "sql/sql_table.h"                        /* primary_key_name */
#include "sql/sql_tablespace.h"                  // Sql_cmd_alter_tablespace
#include "sql/sql_trigger.h"                     // Sql_cmd_create_trigger
#include "sql/sql_udf.h"
#include "sql/system_variables.h"
#include "sql/table.h"
#include "sql/table_function.h"
#include "sql/thr_malloc.h"
#include "sql/trigger_def.h"
#include "sql/window_lex.h"
#include "sql/xa.h"
#include "sql_chars.h"
#include "sql_string.h"
#include "thr_lock.h"
#include "violite.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

/// The maximum number of histogram buckets.
static const int MAX_NUMBER_OF_HISTOGRAM_BUCKETS= 1024;

/// The default number of histogram buckets when the user does not specify it
/// explicitly. A value of 100 is chosen because the gain in accuracy above this
/// point seems to be generally low.
static const int DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS= 100;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F,G,H)           \
  {                                           \
    ulong val= *(H);                          \
    if (my_yyoverflow((B), (D), (F), &val))   \
    {                                         \
      yyerror(NULL, YYTHD, NULL, (const char*) (A));\
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(H)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT YYABORT

#define MYSQL_YYABORT_ERROR(...)              \
  do                                          \
  {                                           \
    my_error(__VA_ARGS__);                    \
    MYSQL_YYABORT;                            \
  } while(0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    YYTHD->syntax_error();              \
    MYSQL_YYABORT;                      \
  }

#define NEW_PTN new(YYMEM_ROOT)


/**
  Parse_tree_node::contextualize() function call wrapper
*/
#define CONTEXTUALIZE(x)                                \
  do                                                    \
  {                                                     \
    std::remove_reference<decltype(*x)>::type::context_t pc(YYTHD, Select); \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->contextualize(&pc)))    \
      MYSQL_YYABORT;                                                    \
  } while(0)


/**
  Item::itemize() function call wrapper
*/
#define ITEMIZE(x, y)                                                   \
  do                                                                    \
  {                                                                     \
    Parse_context pc(YYTHD, Select);                                    \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->itemize(&pc, (y))))     \
      MYSQL_YYABORT;                                                    \
  } while(0)

/**
  Parse_tree_root::make_cmd() wrapper to raise postponed error message on OOM

  @note x may be NULL because of OOM error.
*/
#define MAKE_CMD(x)                                    \
  do                                                   \
  {                                                    \
    if (YYTHD->is_error() || Lex->make_sql_cmd(x))     \
      MYSQL_YYABORT;                                   \
  } while(0)


#ifndef NDEBUG
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error or an out-of-memory
  condition occurs, then the parser function MYSQLparse()
  returns 1 to the caller.

  This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros..

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup.
  In semantic actions, please use syntax_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

static
void MYSQLerror(YYLTYPE *location, THD *thd, Parse_tree_root **, const char *s)
{
  if (strcmp(s, "syntax error") == 0) {
    thd->syntax_error_at(*location);
  } else if (strcmp(s, "memory exhausted") == 0) {
    my_error(ER_DA_OOM, MYF(0));
  } else {
    // Find omitted error messages in the generated file (sql_yacc.cc) and fix:
    assert(false);
    my_error(ER_UNKNOWN_ERROR, MYF(0));
  }
}


#ifndef NDEBUG
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(const LEX_STRING &name)
{
  if (find_native_function_builder(name) != nullptr)
    return true;

  if (is_lex_native_function(&name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

static void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_CSTR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

static bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

static void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static void init_index_hints(List<Index_hint> *hints, index_hint_type type,
                             index_clause_map clause)
{
  List_iterator<Index_hint> it(*hints);
  Index_hint *hint;
  while ((hint= it++))
  {
    hint->type= type;
    hint->clause= clause;
  }
}

bool my_yyoverflow(short **a, YYSTYPE **b, YYLTYPE **c, ulong *yystacksize);

#include "sql/parse_tree_column_attrs.h"
#include "sql/parse_tree_handler.h"
#include "sql/parse_tree_items.h"
#include "sql/parse_tree_nodes.h"
#include "sql/parse_tree_partitions.h"

void warn_about_deprecated_national(THD *thd)
{
  if (native_strcasecmp(national_charset_info->csname, "utf8") == 0)
    push_warning(thd, ER_DEPRECATED_NATIONAL);
}

void warn_about_deprecated_binary(THD *thd)
{
  push_deprecated_warn(thd, "BINARY as attribute of a type",
  "a CHARACTER SET clause with _bin collation");
}


#line 531 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:339  */

# ifndef YY_NULLPTR
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULLPTR nullptr
#  else
#   define YY_NULLPTR 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc.h".  */
#ifndef YY_MYSQL_MNT_JENKINS_WORKSPACE_PS8_0_AUTOBUILD_RELEASE_TEST_PERCONA_SERVER_SQL_SQL_YACC_H_INCLUDED
# define YY_MYSQL_MNT_JENKINS_WORKSPACE_PS8_0_AUTOBUILD_RELEASE_TEST_PERCONA_SERVER_SQL_SQL_YACC_H_INCLUDED
/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int MYSQLdebug;
#endif

/* Token type.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
  enum yytokentype
  {
    ABORT_SYM = 258,
    ACCESSIBLE_SYM = 259,
    ACCOUNT_SYM = 260,
    ACTION = 261,
    ADD = 262,
    ADDDATE_SYM = 263,
    AFTER_SYM = 264,
    AGAINST = 265,
    AGGREGATE_SYM = 266,
    ALGORITHM_SYM = 267,
    ALL = 268,
    ALTER = 269,
    ALWAYS_SYM = 270,
    OBSOLETE_TOKEN_271 = 271,
    ANALYZE_SYM = 272,
    AND_AND_SYM = 273,
    AND_SYM = 274,
    ANY_SYM = 275,
    AS = 276,
    ASC = 277,
    ASCII_SYM = 278,
    ASENSITIVE_SYM = 279,
    AT_SYM = 280,
    AUTOEXTEND_SIZE_SYM = 281,
    AUTO_INC = 282,
    AVG_ROW_LENGTH = 283,
    AVG_SYM = 284,
    BACKUP_SYM = 285,
    BEFORE_SYM = 286,
    BEGIN_SYM = 287,
    BETWEEN_SYM = 288,
    BIGINT_SYM = 289,
    BINARY_SYM = 290,
    BINLOG_SYM = 291,
    BIN_NUM = 292,
    BIT_AND_SYM = 293,
    BIT_OR_SYM = 294,
    BIT_SYM = 295,
    BIT_XOR_SYM = 296,
    BLOB_SYM = 297,
    BLOCK_SYM = 298,
    BOOLEAN_SYM = 299,
    BOOL_SYM = 300,
    BOTH = 301,
    BTREE_SYM = 302,
    BY = 303,
    BYTE_SYM = 304,
    CACHE_SYM = 305,
    CALL_SYM = 306,
    CASCADE = 307,
    CASCADED = 308,
    CASE_SYM = 309,
    CAST_SYM = 310,
    CATALOG_NAME_SYM = 311,
    CHAIN_SYM = 312,
    CHANGE = 313,
    CHANGED = 314,
    CHANNEL_SYM = 315,
    CHARSET = 316,
    CHAR_SYM = 317,
    CHECKSUM_SYM = 318,
    CHECK_SYM = 319,
    CIPHER_SYM = 320,
    CLASS_ORIGIN_SYM = 321,
    CLIENT_SYM = 322,
    CLOSE_SYM = 323,
    COALESCE = 324,
    CODE_SYM = 325,
    COLLATE_SYM = 326,
    COLLATION_SYM = 327,
    COLUMNS = 328,
    COLUMN_SYM = 329,
    COLUMN_FORMAT_SYM = 330,
    COLUMN_NAME_SYM = 331,
    COMMENT_SYM = 332,
    COMMITTED_SYM = 333,
    COMMIT_SYM = 334,
    COMPACT_SYM = 335,
    COMPLETION_SYM = 336,
    COMPRESSED_SYM = 337,
    COMPRESSION_SYM = 338,
    ENCRYPTION_SYM = 339,
    CONCURRENT = 340,
    CONDITION_SYM = 341,
    CONNECTION_SYM = 342,
    CONSISTENT_SYM = 343,
    CONSTRAINT = 344,
    CONSTRAINT_CATALOG_SYM = 345,
    CONSTRAINT_NAME_SYM = 346,
    CONSTRAINT_SCHEMA_SYM = 347,
    CONTAINS_SYM = 348,
    CONTEXT_SYM = 349,
    CONTINUE_SYM = 350,
    CONVERT_SYM = 351,
    COUNT_SYM = 352,
    CPU_SYM = 353,
    CREATE = 354,
    CROSS = 355,
    CUBE_SYM = 356,
    CURDATE = 357,
    CURRENT_SYM = 358,
    CURRENT_USER = 359,
    CURSOR_SYM = 360,
    CURSOR_NAME_SYM = 361,
    CURTIME = 362,
    DATABASE = 363,
    DATABASES = 364,
    DATAFILE_SYM = 365,
    DATA_SYM = 366,
    DATETIME_SYM = 367,
    DATE_ADD_INTERVAL = 368,
    DATE_SUB_INTERVAL = 369,
    DATE_SYM = 370,
    DAY_HOUR_SYM = 371,
    DAY_MICROSECOND_SYM = 372,
    DAY_MINUTE_SYM = 373,
    DAY_SECOND_SYM = 374,
    DAY_SYM = 375,
    DEALLOCATE_SYM = 376,
    DECIMAL_NUM = 377,
    DECIMAL_SYM = 378,
    DECLARE_SYM = 379,
    DEFAULT_SYM = 380,
    DEFAULT_AUTH_SYM = 381,
    DEFINER_SYM = 382,
    DELAYED_SYM = 383,
    DELAY_KEY_WRITE_SYM = 384,
    DELETE_SYM = 385,
    DESC = 386,
    DESCRIBE = 387,
    OBSOLETE_TOKEN_388 = 388,
    DETERMINISTIC_SYM = 389,
    DIAGNOSTICS_SYM = 390,
    DIRECTORY_SYM = 391,
    DISABLE_SYM = 392,
    DISCARD_SYM = 393,
    DISK_SYM = 394,
    DISTINCT = 395,
    DIV_SYM = 396,
    DOUBLE_SYM = 397,
    DO_SYM = 398,
    DROP = 399,
    DUAL_SYM = 400,
    DUMPFILE = 401,
    DUPLICATE_SYM = 402,
    DYNAMIC_SYM = 403,
    EACH_SYM = 404,
    ELSE = 405,
    ELSEIF_SYM = 406,
    ENABLE_SYM = 407,
    ENCLOSED = 408,
    END = 409,
    ENDS_SYM = 410,
    END_OF_INPUT = 411,
    ENGINES_SYM = 412,
    ENGINE_SYM = 413,
    ENUM_SYM = 414,
    EQ = 415,
    EQUAL_SYM = 416,
    ERROR_SYM = 417,
    ERRORS = 418,
    ESCAPED = 419,
    ESCAPE_SYM = 420,
    EVENTS_SYM = 421,
    EVENT_SYM = 422,
    EVERY_SYM = 423,
    EXCHANGE_SYM = 424,
    EXECUTE_SYM = 425,
    EXISTS = 426,
    EXIT_SYM = 427,
    EXPANSION_SYM = 428,
    EXPIRE_SYM = 429,
    EXPORT_SYM = 430,
    EXTENDED_SYM = 431,
    EXTENT_SIZE_SYM = 432,
    EXTRACT_SYM = 433,
    FALSE_SYM = 434,
    FAST_SYM = 435,
    FAULTS_SYM = 436,
    FETCH_SYM = 437,
    FILE_SYM = 438,
    FILE_BLOCK_SIZE_SYM = 439,
    FILTER_SYM = 440,
    FIRST_SYM = 441,
    FIXED_SYM = 442,
    FLOAT_NUM = 443,
    FLOAT_SYM = 444,
    FLUSH_SYM = 445,
    FOLLOWS_SYM = 446,
    FORCE_SYM = 447,
    FOREIGN = 448,
    FOR_SYM = 449,
    FORMAT_SYM = 450,
    FOUND_SYM = 451,
    FROM = 452,
    FULL = 453,
    FULLTEXT_SYM = 454,
    FUNCTION_SYM = 455,
    GE = 456,
    GENERAL = 457,
    GENERATED = 458,
    GROUP_REPLICATION = 459,
    GEOMETRYCOLLECTION_SYM = 460,
    GEOMETRY_SYM = 461,
    GET_FORMAT = 462,
    GET_SYM = 463,
    GLOBAL_SYM = 464,
    GRANT = 465,
    GRANTS = 466,
    GROUP_SYM = 467,
    GROUP_CONCAT_SYM = 468,
    GT_SYM = 469,
    HANDLER_SYM = 470,
    HASH_SYM = 471,
    HAVING = 472,
    HELP_SYM = 473,
    HEX_NUM = 474,
    HIGH_PRIORITY = 475,
    HOST_SYM = 476,
    HOSTS_SYM = 477,
    HOUR_MICROSECOND_SYM = 478,
    HOUR_MINUTE_SYM = 479,
    HOUR_SECOND_SYM = 480,
    HOUR_SYM = 481,
    IDENT = 482,
    IDENTIFIED_SYM = 483,
    IDENT_QUOTED = 484,
    IF = 485,
    IGNORE_SYM = 486,
    IGNORE_SERVER_IDS_SYM = 487,
    IMPORT = 488,
    INDEXES = 489,
    INDEX_SYM = 490,
    INFILE = 491,
    INITIAL_SIZE_SYM = 492,
    INNER_SYM = 493,
    INOUT_SYM = 494,
    INSENSITIVE_SYM = 495,
    INSERT_SYM = 496,
    INSERT_METHOD = 497,
    INSTANCE_SYM = 498,
    INSTALL_SYM = 499,
    INTERVAL_SYM = 500,
    INTO = 501,
    INT_SYM = 502,
    INVOKER_SYM = 503,
    IN_SYM = 504,
    IO_AFTER_GTIDS = 505,
    IO_BEFORE_GTIDS = 506,
    IO_SYM = 507,
    IPC_SYM = 508,
    IS = 509,
    ISOLATION = 510,
    ISSUER_SYM = 511,
    ITERATE_SYM = 512,
    JOIN_SYM = 513,
    JSON_SEPARATOR_SYM = 514,
    JSON_SYM = 515,
    KEYS = 516,
    KEY_BLOCK_SIZE = 517,
    KEY_SYM = 518,
    KILL_SYM = 519,
    LANGUAGE_SYM = 520,
    LAST_SYM = 521,
    LE = 522,
    LEADING = 523,
    LEAVES = 524,
    LEAVE_SYM = 525,
    LEFT = 526,
    LESS_SYM = 527,
    LEVEL_SYM = 528,
    LEX_HOSTNAME = 529,
    LIKE = 530,
    LIMIT = 531,
    LINEAR_SYM = 532,
    LINES = 533,
    LINESTRING_SYM = 534,
    LIST_SYM = 535,
    LOAD = 536,
    LOCAL_SYM = 537,
    OBSOLETE_TOKEN_538 = 538,
    LOCKS_SYM = 539,
    LOCK_SYM = 540,
    LOGFILE_SYM = 541,
    LOGS_SYM = 542,
    LONGBLOB_SYM = 543,
    LONGTEXT_SYM = 544,
    LONG_NUM = 545,
    LONG_SYM = 546,
    LOOP_SYM = 547,
    LOW_PRIORITY = 548,
    LT = 549,
    MASTER_AUTO_POSITION_SYM = 550,
    MASTER_BIND_SYM = 551,
    MASTER_CONNECT_RETRY_SYM = 552,
    MASTER_DELAY_SYM = 553,
    MASTER_HOST_SYM = 554,
    MASTER_LOG_FILE_SYM = 555,
    MASTER_LOG_POS_SYM = 556,
    MASTER_PASSWORD_SYM = 557,
    MASTER_PORT_SYM = 558,
    MASTER_RETRY_COUNT_SYM = 559,
    MASTER_SSL_CAPATH_SYM = 561,
    MASTER_TLS_VERSION_SYM = 562,
    MASTER_SSL_CA_SYM = 563,
    MASTER_SSL_CERT_SYM = 564,
    MASTER_SSL_CIPHER_SYM = 565,
    MASTER_SSL_CRL_SYM = 566,
    MASTER_SSL_CRLPATH_SYM = 567,
    MASTER_SSL_KEY_SYM = 568,
    MASTER_SSL_SYM = 569,
    MASTER_SSL_VERIFY_SERVER_CERT_SYM = 570,
    MASTER_SYM = 571,
    MASTER_USER_SYM = 572,
    MASTER_HEARTBEAT_PERIOD_SYM = 573,
    MATCH = 574,
    MAX_CONNECTIONS_PER_HOUR = 575,
    MAX_QUERIES_PER_HOUR = 576,
    MAX_ROWS = 577,
    MAX_SIZE_SYM = 578,
    MAX_SYM = 579,
    MAX_UPDATES_PER_HOUR = 580,
    MAX_USER_CONNECTIONS_SYM = 581,
    MAX_VALUE_SYM = 582,
    MEDIUMBLOB_SYM = 583,
    MEDIUMINT_SYM = 584,
    MEDIUMTEXT_SYM = 585,
    MEDIUM_SYM = 586,
    MEMORY_SYM = 587,
    MERGE_SYM = 588,
    MESSAGE_TEXT_SYM = 589,
    MICROSECOND_SYM = 590,
    MIGRATE_SYM = 591,
    MINUTE_MICROSECOND_SYM = 592,
    MINUTE_SECOND_SYM = 593,
    MINUTE_SYM = 594,
    MIN_ROWS = 595,
    MIN_SYM = 596,
    MODE_SYM = 597,
    MODIFIES_SYM = 598,
    MODIFY_SYM = 599,
    MOD_SYM = 600,
    MONTH_SYM = 601,
    MULTILINESTRING_SYM = 602,
    MULTIPOINT_SYM = 603,
    MULTIPOLYGON_SYM = 604,
    MUTEX_SYM = 605,
    MYSQL_ERRNO_SYM = 606,
    NAMES_SYM = 607,
    NAME_SYM = 608,
    NATIONAL_SYM = 609,
    NATURAL = 610,
    NCHAR_STRING = 611,
    NCHAR_SYM = 612,
    NDBCLUSTER_SYM = 613,
    NE = 614,
    NEG = 615,
    NEVER_SYM = 616,
    NEW_SYM = 617,
    NEXT_SYM = 618,
    NODEGROUP_SYM = 619,
    NONE_SYM = 620,
    NOT2_SYM = 621,
    NOT_SYM = 622,
    NOW_SYM = 623,
    NO_SYM = 624,
    NO_WAIT_SYM = 625,
    NO_WRITE_TO_BINLOG = 626,
    NULL_SYM = 627,
    NUM = 628,
    NUMBER_SYM = 629,
    NUMERIC_SYM = 630,
    NVARCHAR_SYM = 631,
    OFFSET_SYM = 632,
    ON_SYM = 633,
    ONE_SYM = 634,
    ONLY_SYM = 635,
    OPEN_SYM = 636,
    OPTIMIZE = 637,
    OPTIMIZER_COSTS_SYM = 638,
    OPTIONS_SYM = 639,
    OPTION = 640,
    OPTIONALLY = 641,
    OR2_SYM = 642,
    ORDER_SYM = 643,
    OR_OR_SYM = 644,
    OR_SYM = 645,
    OUTER_SYM = 646,
    OUTFILE = 647,
    OUT_SYM = 648,
    OWNER_SYM = 649,
    PACK_KEYS_SYM = 650,
    PAGE_SYM = 651,
    PARAM_MARKER = 652,
    PARSER_SYM = 653,
    OBSOLETE_TOKEN_654 = 654,
    PARTIAL = 655,
    PARTITION_SYM = 656,
    PARTITIONS_SYM = 657,
    PARTITIONING_SYM = 658,
    PASSWORD = 659,
    PHASE_SYM = 660,
    PLUGIN_DIR_SYM = 661,
    PLUGIN_SYM = 662,
    PLUGINS_SYM = 663,
    POINT_SYM = 664,
    POLYGON_SYM = 665,
    PORT_SYM = 666,
    POSITION_SYM = 667,
    PRECEDES_SYM = 668,
    PRECISION = 669,
    PREPARE_SYM = 670,
    PRESERVE_SYM = 671,
    PREV_SYM = 672,
    PRIMARY_SYM = 673,
    PRIVILEGES = 674,
    PROCEDURE_SYM = 675,
    PROCESS = 676,
    PROCESSLIST_SYM = 677,
    PROFILE_SYM = 678,
    PROFILES_SYM = 679,
    PROXY_SYM = 680,
    PURGE = 681,
    QUARTER_SYM = 682,
    QUERY_SYM = 683,
    QUICK = 684,
    RANGE_SYM = 685,
    READS_SYM = 686,
    READ_ONLY_SYM = 687,
    READ_SYM = 688,
    READ_WRITE_SYM = 689,
    REAL_SYM = 690,
    REBUILD_SYM = 691,
    RECOVER_SYM = 692,
    OBSOLETE_TOKEN_693 = 693,
    REDO_BUFFER_SIZE_SYM = 694,
    REDUNDANT_SYM = 695,
    REFERENCES = 696,
    REGEXP = 697,
    RELAY = 698,
    RELAYLOG_SYM = 699,
    RELAY_LOG_FILE_SYM = 700,
    RELAY_LOG_POS_SYM = 701,
    RELAY_THREAD = 702,
    RELEASE_SYM = 703,
    RELOAD = 704,
    REMOVE_SYM = 705,
    RENAME = 706,
    REORGANIZE_SYM = 707,
    REPAIR = 708,
    REPEATABLE_SYM = 709,
    REPEAT_SYM = 710,
    REPLACE_SYM = 711,
    REPLICATION = 712,
    REPLICATE_DO_DB = 713,
    REPLICATE_IGNORE_DB = 714,
    REPLICATE_DO_TABLE = 715,
    REPLICATE_IGNORE_TABLE = 716,
    REPLICATE_WILD_DO_TABLE = 717,
    REPLICATE_WILD_IGNORE_TABLE = 718,
    REPLICATE_REWRITE_DB = 719,
    REQUIRE_SYM = 720,
    RESET_SYM = 721,
    RESIGNAL_SYM = 722,
    RESOURCES = 723,
    RESTORE_SYM = 724,
    RESTRICT = 725,
    RESUME_SYM = 726,
    RETURNED_SQLSTATE_SYM = 727,
    RETURNS_SYM = 728,
    RETURN_SYM = 729,
    REVERSE_SYM = 730,
    REVOKE = 731,
    RIGHT = 732,
    ROLLBACK_SYM = 733,
    ROLLUP_SYM = 734,
    ROTATE_SYM = 735,
    ROUTINE_SYM = 736,
    ROWS_SYM = 737,
    ROW_FORMAT_SYM = 738,
    ROW_SYM = 739,
    ROW_COUNT_SYM = 740,
    RTREE_SYM = 741,
    SAVEPOINT_SYM = 742,
    SCHEDULE_SYM = 743,
    SCHEMA_NAME_SYM = 744,
    SECOND_MICROSECOND_SYM = 745,
    SECOND_SYM = 746,
    SECURITY_SYM = 747,
    SELECT_SYM = 748,
    SENSITIVE_SYM = 749,
    SEPARATOR_SYM = 750,
    SERIALIZABLE_SYM = 751,
    SERIAL_SYM = 752,
    SESSION_SYM = 753,
    SERVER_SYM = 754,
    OBSOLETE_TOKEN_755 = 755,
    SET_SYM = 756,
    SET_VAR = 757,
    SHARE_SYM = 758,
    SHIFT_LEFT = 759,
    SHIFT_RIGHT = 760,
    SHOW = 761,
    SHUTDOWN = 762,
    SIGNAL_SYM = 763,
    SIGNED_SYM = 764,
    SIMPLE_SYM = 765,
    SLAVE = 766,
    SLOW = 767,
    SMALLINT_SYM = 768,
    SNAPSHOT_SYM = 769,
    SOCKET_SYM = 770,
    SONAME_SYM = 771,
    SOUNDS_SYM = 772,
    SOURCE_SYM = 773,
    SPATIAL_SYM = 774,
    SPECIFIC_SYM = 775,
    SQLEXCEPTION_SYM = 776,
    SQLSTATE_SYM = 777,
    SQLWARNING_SYM = 778,
    SQL_AFTER_GTIDS = 779,
    SQL_AFTER_MTS_GAPS = 780,
    SQL_BEFORE_GTIDS = 781,
    SQL_BIG_RESULT = 782,
    SQL_BUFFER_RESULT = 783,
    OBSOLETE_TOKEN_784 = 784,
    SQL_CALC_FOUND_ROWS = 785,
    SQL_NO_CACHE_SYM = 786,
    SQL_SMALL_RESULT = 787,
    SQL_SYM = 788,
    SQL_THREAD = 789,
    SSL_SYM = 790,
    STACKED_SYM = 791,
    STARTING = 792,
    STARTS_SYM = 793,
    START_SYM = 794,
    STATS_AUTO_RECALC_SYM = 795,
    STATS_PERSISTENT_SYM = 796,
    STATS_SAMPLE_PAGES_SYM = 797,
    STATUS_SYM = 798,
    STDDEV_SAMP_SYM = 799,
    STD_SYM = 800,
    STOP_SYM = 801,
    STORAGE_SYM = 802,
    STORED_SYM = 803,
    STRAIGHT_JOIN = 804,
    STRING_SYM = 805,
    SUBCLASS_ORIGIN_SYM = 806,
    SUBDATE_SYM = 807,
    SUBJECT_SYM = 808,
    SUBPARTITIONS_SYM = 809,
    SUBPARTITION_SYM = 810,
    SUBSTRING = 811,
    SUM_SYM = 812,
    SUPER_SYM = 813,
    SUSPEND_SYM = 814,
    SWAPS_SYM = 815,
    SWITCHES_SYM = 816,
    SYSDATE = 817,
    TABLES = 818,
    TABLESPACE_SYM = 819,
    OBSOLETE_TOKEN_820 = 820,
    TABLE_SYM = 821,
    TABLE_CHECKSUM_SYM = 822,
    TABLE_NAME_SYM = 823,
    TEMPORARY = 824,
    TEMPTABLE_SYM = 825,
    TERMINATED = 826,
    TEXT_STRING = 827,
    TEXT_SYM = 828,
    THAN_SYM = 829,
    THEN_SYM = 830,
    TIMESTAMP_SYM = 831,
    TIMESTAMP_ADD = 832,
    TIMESTAMP_DIFF = 833,
    TIME_SYM = 834,
    TINYBLOB_SYM = 835,
    TINYINT_SYM = 836,
    TINYTEXT_SYN = 837,
    TO_SYM = 838,
    TRAILING = 839,
    TRANSACTION_SYM = 840,
    TRIGGERS_SYM = 841,
    TRIGGER_SYM = 842,
    TRIM = 843,
    TRUE_SYM = 844,
    TRUNCATE_SYM = 845,
    TYPES_SYM = 846,
    TYPE_SYM = 847,
    OBSOLETE_TOKEN_848 = 848,
    ULONGLONG_NUM = 849,
    UNCOMMITTED_SYM = 850,
    UNDEFINED_SYM = 851,
    UNDERSCORE_CHARSET = 852,
    UNDOFILE_SYM = 853,
    UNDO_BUFFER_SIZE_SYM = 854,
    UNDO_SYM = 855,
    UNICODE_SYM = 856,
    UNINSTALL_SYM = 857,
    UNION_SYM = 858,
    UNIQUE_SYM = 859,
    UNKNOWN_SYM = 860,
    UNLOCK_SYM = 861,
    UNSIGNED_SYM = 862,
    UNTIL_SYM = 863,
    UPDATE_SYM = 864,
    UPGRADE_SYM = 865,
    USAGE = 866,
    USER = 867,
    USE_FRM = 868,
    USE_SYM = 869,
    USING = 870,
    UTC_DATE_SYM = 871,
    UTC_TIMESTAMP_SYM = 872,
    UTC_TIME_SYM = 873,
    VALIDATION_SYM = 874,
    VALUES = 875,
    VALUE_SYM = 876,
    VARBINARY_SYM = 877,
    VARCHAR_SYM = 878,
    VARIABLES = 879,
    VARIANCE_SYM = 880,
    VARYING = 881,
    VAR_SAMP_SYM = 882,
    VIEW_SYM = 883,
    VIRTUAL_SYM = 884,
    WAIT_SYM = 885,
    WARNINGS = 886,
    WEEK_SYM = 887,
    WEIGHT_STRING_SYM = 888,
    WHEN_SYM = 889,
    WHERE = 890,
    WHILE_SYM = 891,
    WITH = 892,
    OBSOLETE_TOKEN_893 = 893,
    WITH_ROLLUP_SYM = 894,
    WITHOUT_SYM = 895,
    WORK_SYM = 896,
    WRAPPER_SYM = 897,
    WRITE_SYM = 898,
    X509_SYM = 899,
    XA_SYM = 900,
    XID_SYM = 901,
    XML_SYM = 902,
    XOR = 903,
    YEAR_MONTH_SYM = 904,
    YEAR_SYM = 905,
    ZEROFILL_SYM = 906,
    JSON_UNQUOTED_SEPARATOR_SYM = 907,
    PERSIST_SYM = 908,
    ROLE_SYM = 909,
    ADMIN_SYM = 910,
    INVISIBLE_SYM = 911,
    VISIBLE_SYM = 912,
    EXCEPT_SYM = 913,
    COMPONENT_SYM = 914,
    RECURSIVE_SYM = 915,
    GRAMMAR_SELECTOR_EXPR = 916,
    GRAMMAR_SELECTOR_GCOL = 917,
    GRAMMAR_SELECTOR_PART = 918,
    GRAMMAR_SELECTOR_CTE = 919,
    JSON_OBJECTAGG = 920,
    JSON_ARRAYAGG = 921,
    OF_SYM = 922,
    SKIP_SYM = 923,
    LOCKED_SYM = 924,
    NOWAIT_SYM = 925,
    GROUPING_SYM = 926,
    PERSIST_ONLY_SYM = 927,
    HISTOGRAM_SYM = 928,
    BUCKETS_SYM = 929,
    OBSOLETE_TOKEN_930 = 930,
    CLONE_SYM = 931,
    CUME_DIST_SYM = 932,
    DENSE_RANK_SYM = 933,
    EXCLUDE_SYM = 934,
    FIRST_VALUE_SYM = 935,
    FOLLOWING_SYM = 936,
    GROUPS_SYM = 937,
    LAG_SYM = 938,
    LAST_VALUE_SYM = 939,
    LEAD_SYM = 940,
    NTH_VALUE_SYM = 941,
    NTILE_SYM = 942,
    NULLS_SYM = 943,
    OTHERS_SYM = 944,
    OVER_SYM = 945,
    PERCENT_RANK_SYM = 946,
    PRECEDING_SYM = 947,
    RANK_SYM = 948,
    RESPECT_SYM = 949,
    ROW_NUMBER_SYM = 950,
    TIES_SYM = 951,
    UNBOUNDED_SYM = 952,
    WINDOW_SYM = 953,
    EMPTY_SYM = 954,
    JSON_TABLE_SYM = 955,
    NESTED_SYM = 956,
    ORDINALITY_SYM = 957,
    PATH_SYM = 958,
    HISTORY_SYM = 959,
    REUSE_SYM = 960,
    SRID_SYM = 961,
    THREAD_PRIORITY_SYM = 962,
    RESOURCE_SYM = 963,
    SYSTEM_SYM = 964,
    VCPU_SYM = 965,
    MASTER_PUBLIC_KEY_PATH_SYM = 966,
    GET_MASTER_PUBLIC_KEY_SYM = 967,
    RESTART_SYM = 968,
    DEFINITION_SYM = 969,
    DESCRIPTION_SYM = 970,
    ORGANIZATION_SYM = 971,
    REFERENCE_SYM = 972,
    ACTIVE_SYM = 973,
    INACTIVE_SYM = 974,
    LATERAL_SYM = 975,
    ARRAY_SYM = 976,
    MEMBER_SYM = 977,
    OPTIONAL_SYM = 978,
    SECONDARY_SYM = 979,
    SECONDARY_ENGINE_SYM = 980,
    SECONDARY_LOAD_SYM = 981,
    SECONDARY_UNLOAD_SYM = 982,
    RETAIN_SYM = 983,
    OLD_SYM = 984,
    ENFORCED_SYM = 985,
    OJ_SYM = 986,
    NETWORK_NAMESPACE_SYM = 987,
    RANDOM_SYM = 988,
    MASTER_COMPRESSION_ALGORITHM_SYM = 989,
    MASTER_ZSTD_COMPRESSION_LEVEL_SYM = 990,
    PRIVILEGE_CHECKS_USER_SYM = 991,
    MASTER_TLS_CIPHERSUITES_SYM = 992,
    REQUIRE_ROW_FORMAT_SYM = 993,
    PASSWORD_LOCK_TIME_SYM = 994,
    FAILED_LOGIN_ATTEMPTS_SYM = 995,
    REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM = 996,
    STREAM_SYM = 997,
    OFF_SYM = 998,
    RETURNING_SYM = 999,
    YYUNDEF = 1150,
    JSON_VALUE_SYM = 1151,
    TLS_SYM = 1152,
    ATTRIBUTE_SYM = 1153,
    ENGINE_ATTRIBUTE_SYM = 1154,
    SECONDARY_ENGINE_ATTRIBUTE_SYM = 1155,
    SOURCE_CONNECTION_AUTO_FAILOVER_SYM = 1156,
    ZONE_SYM = 1157,
    GRAMMAR_SELECTOR_DERIVED_EXPR = 1158,
    REPLICA_SYM = 1159,
    REPLICAS_SYM = 1160,
    ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM = 1161,
    GET_SOURCE_PUBLIC_KEY_SYM = 1162,
    SOURCE_AUTO_POSITION_SYM = 1163,
    SOURCE_BIND_SYM = 1164,
    SOURCE_COMPRESSION_ALGORITHM_SYM = 1165,
    SOURCE_CONNECT_RETRY_SYM = 1166,
    SOURCE_DELAY_SYM = 1167,
    SOURCE_HEARTBEAT_PERIOD_SYM = 1168,
    SOURCE_HOST_SYM = 1169,
    SOURCE_LOG_FILE_SYM = 1170,
    SOURCE_LOG_POS_SYM = 1171,
    SOURCE_PASSWORD_SYM = 1172,
    SOURCE_PORT_SYM = 1173,
    SOURCE_PUBLIC_KEY_PATH_SYM = 1174,
    SOURCE_RETRY_COUNT_SYM = 1175,
    SOURCE_SSL_SYM = 1176,
    SOURCE_SSL_CA_SYM = 1177,
    SOURCE_SSL_CAPATH_SYM = 1178,
    SOURCE_SSL_CERT_SYM = 1179,
    SOURCE_SSL_CIPHER_SYM = 1180,
    SOURCE_SSL_CRL_SYM = 1181,
    SOURCE_SSL_CRLPATH_SYM = 1182,
    SOURCE_SSL_KEY_SYM = 1183,
    SOURCE_SSL_VERIFY_SERVER_CERT_SYM = 1184,
    SOURCE_TLS_CIPHERSUITES_SYM = 1185,
    SOURCE_TLS_VERSION_SYM = 1186,
    SOURCE_USER_SYM = 1187,
    SOURCE_ZSTD_COMPRESSION_LEVEL_SYM = 1188,
    ST_COLLECT_SYM = 1189,
    KEYRING_SYM = 1190,
    CHANGED_PAGE_BITMAPS_SYM = 1300,
    CLIENT_STATS_SYM = 1301,
    CLUSTERING_SYM = 1302,
    COMPRESSION_DICTIONARY_SYM = 1303,
    INDEX_STATS_SYM = 1304,
    TABLE_STATS_SYM = 1305,
    THREAD_STATS_SYM = 1306,
    USER_STATS_SYM = 1307,
    ENCRYPTION_KEY_ID_SYM = 1308,
    EFFECTIVE_SYM = 1350,
    SEQUENCE_TABLE_SYM = 1351,
    KEYWORD_USED_AS_IDENT = 1353,
    KEYWORD_USED_AS_KEYWORD = 1354,
    CONDITIONLESS_JOIN = 1355,
    SUBQUERY_AS_EXPR = 1356,
    EMPTY_FROM_CLAUSE = 1357
  };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACCOUNT_SYM 260
#define ACTION 261
#define ADD 262
#define ADDDATE_SYM 263
#define AFTER_SYM 264
#define AGAINST 265
#define AGGREGATE_SYM 266
#define ALGORITHM_SYM 267
#define ALL 268
#define ALTER 269
#define ALWAYS_SYM 270
#define OBSOLETE_TOKEN_271 271
#define ANALYZE_SYM 272
#define AND_AND_SYM 273
#define AND_SYM 274
#define ANY_SYM 275
#define AS 276
#define ASC 277
#define ASCII_SYM 278
#define ASENSITIVE_SYM 279
#define AT_SYM 280
#define AUTOEXTEND_SIZE_SYM 281
#define AUTO_INC 282
#define AVG_ROW_LENGTH 283
#define AVG_SYM 284
#define BACKUP_SYM 285
#define BEFORE_SYM 286
#define BEGIN_SYM 287
#define BETWEEN_SYM 288
#define BIGINT_SYM 289
#define BINARY_SYM 290
#define BINLOG_SYM 291
#define BIN_NUM 292
#define BIT_AND_SYM 293
#define BIT_OR_SYM 294
#define BIT_SYM 295
#define BIT_XOR_SYM 296
#define BLOB_SYM 297
#define BLOCK_SYM 298
#define BOOLEAN_SYM 299
#define BOOL_SYM 300
#define BOTH 301
#define BTREE_SYM 302
#define BY 303
#define BYTE_SYM 304
#define CACHE_SYM 305
#define CALL_SYM 306
#define CASCADE 307
#define CASCADED 308
#define CASE_SYM 309
#define CAST_SYM 310
#define CATALOG_NAME_SYM 311
#define CHAIN_SYM 312
#define CHANGE 313
#define CHANGED 314
#define CHANNEL_SYM 315
#define CHARSET 316
#define CHAR_SYM 317
#define CHECKSUM_SYM 318
#define CHECK_SYM 319
#define CIPHER_SYM 320
#define CLASS_ORIGIN_SYM 321
#define CLIENT_SYM 322
#define CLOSE_SYM 323
#define COALESCE 324
#define CODE_SYM 325
#define COLLATE_SYM 326
#define COLLATION_SYM 327
#define COLUMNS 328
#define COLUMN_SYM 329
#define COLUMN_FORMAT_SYM 330
#define COLUMN_NAME_SYM 331
#define COMMENT_SYM 332
#define COMMITTED_SYM 333
#define COMMIT_SYM 334
#define COMPACT_SYM 335
#define COMPLETION_SYM 336
#define COMPRESSED_SYM 337
#define COMPRESSION_SYM 338
#define ENCRYPTION_SYM 339
#define CONCURRENT 340
#define CONDITION_SYM 341
#define CONNECTION_SYM 342
#define CONSISTENT_SYM 343
#define CONSTRAINT 344
#define CONSTRAINT_CATALOG_SYM 345
#define CONSTRAINT_NAME_SYM 346
#define CONSTRAINT_SCHEMA_SYM 347
#define CONTAINS_SYM 348
#define CONTEXT_SYM 349
#define CONTINUE_SYM 350
#define CONVERT_SYM 351
#define COUNT_SYM 352
#define CPU_SYM 353
#define CREATE 354
#define CROSS 355
#define CUBE_SYM 356
#define CURDATE 357
#define CURRENT_SYM 358
#define CURRENT_USER 359
#define CURSOR_SYM 360
#define CURSOR_NAME_SYM 361
#define CURTIME 362
#define DATABASE 363
#define DATABASES 364
#define DATAFILE_SYM 365
#define DATA_SYM 366
#define DATETIME_SYM 367
#define DATE_ADD_INTERVAL 368
#define DATE_SUB_INTERVAL 369
#define DATE_SYM 370
#define DAY_HOUR_SYM 371
#define DAY_MICROSECOND_SYM 372
#define DAY_MINUTE_SYM 373
#define DAY_SECOND_SYM 374
#define DAY_SYM 375
#define DEALLOCATE_SYM 376
#define DECIMAL_NUM 377
#define DECIMAL_SYM 378
#define DECLARE_SYM 379
#define DEFAULT_SYM 380
#define DEFAULT_AUTH_SYM 381
#define DEFINER_SYM 382
#define DELAYED_SYM 383
#define DELAY_KEY_WRITE_SYM 384
#define DELETE_SYM 385
#define DESC 386
#define DESCRIBE 387
#define OBSOLETE_TOKEN_388 388
#define DETERMINISTIC_SYM 389
#define DIAGNOSTICS_SYM 390
#define DIRECTORY_SYM 391
#define DISABLE_SYM 392
#define DISCARD_SYM 393
#define DISK_SYM 394
#define DISTINCT 395
#define DIV_SYM 396
#define DOUBLE_SYM 397
#define DO_SYM 398
#define DROP 399
#define DUAL_SYM 400
#define DUMPFILE 401
#define DUPLICATE_SYM 402
#define DYNAMIC_SYM 403
#define EACH_SYM 404
#define ELSE 405
#define ELSEIF_SYM 406
#define ENABLE_SYM 407
#define ENCLOSED 408
#define END 409
#define ENDS_SYM 410
#define END_OF_INPUT 411
#define ENGINES_SYM 412
#define ENGINE_SYM 413
#define ENUM_SYM 414
#define EQ 415
#define EQUAL_SYM 416
#define ERROR_SYM 417
#define ERRORS 418
#define ESCAPED 419
#define ESCAPE_SYM 420
#define EVENTS_SYM 421
#define EVENT_SYM 422
#define EVERY_SYM 423
#define EXCHANGE_SYM 424
#define EXECUTE_SYM 425
#define EXISTS 426
#define EXIT_SYM 427
#define EXPANSION_SYM 428
#define EXPIRE_SYM 429
#define EXPORT_SYM 430
#define EXTENDED_SYM 431
#define EXTENT_SIZE_SYM 432
#define EXTRACT_SYM 433
#define FALSE_SYM 434
#define FAST_SYM 435
#define FAULTS_SYM 436
#define FETCH_SYM 437
#define FILE_SYM 438
#define FILE_BLOCK_SIZE_SYM 439
#define FILTER_SYM 440
#define FIRST_SYM 441
#define FIXED_SYM 442
#define FLOAT_NUM 443
#define FLOAT_SYM 444
#define FLUSH_SYM 445
#define FOLLOWS_SYM 446
#define FORCE_SYM 447
#define FOREIGN 448
#define FOR_SYM 449
#define FORMAT_SYM 450
#define FOUND_SYM 451
#define FROM 452
#define FULL 453
#define FULLTEXT_SYM 454
#define FUNCTION_SYM 455
#define GE 456
#define GENERAL 457
#define GENERATED 458
#define GROUP_REPLICATION 459
#define GEOMETRYCOLLECTION_SYM 460
#define GEOMETRY_SYM 461
#define GET_FORMAT 462
#define GET_SYM 463
#define GLOBAL_SYM 464
#define GRANT 465
#define GRANTS 466
#define GROUP_SYM 467
#define GROUP_CONCAT_SYM 468
#define GT_SYM 469
#define HANDLER_SYM 470
#define HASH_SYM 471
#define HAVING 472
#define HELP_SYM 473
#define HEX_NUM 474
#define HIGH_PRIORITY 475
#define HOST_SYM 476
#define HOSTS_SYM 477
#define HOUR_MICROSECOND_SYM 478
#define HOUR_MINUTE_SYM 479
#define HOUR_SECOND_SYM 480
#define HOUR_SYM 481
#define IDENT 482
#define IDENTIFIED_SYM 483
#define IDENT_QUOTED 484
#define IF 485
#define IGNORE_SYM 486
#define IGNORE_SERVER_IDS_SYM 487
#define IMPORT 488
#define INDEXES 489
#define INDEX_SYM 490
#define INFILE 491
#define INITIAL_SIZE_SYM 492
#define INNER_SYM 493
#define INOUT_SYM 494
#define INSENSITIVE_SYM 495
#define INSERT_SYM 496
#define INSERT_METHOD 497
#define INSTANCE_SYM 498
#define INSTALL_SYM 499
#define INTERVAL_SYM 500
#define INTO 501
#define INT_SYM 502
#define INVOKER_SYM 503
#define IN_SYM 504
#define IO_AFTER_GTIDS 505
#define IO_BEFORE_GTIDS 506
#define IO_SYM 507
#define IPC_SYM 508
#define IS 509
#define ISOLATION 510
#define ISSUER_SYM 511
#define ITERATE_SYM 512
#define JOIN_SYM 513
#define JSON_SEPARATOR_SYM 514
#define JSON_SYM 515
#define KEYS 516
#define KEY_BLOCK_SIZE 517
#define KEY_SYM 518
#define KILL_SYM 519
#define LANGUAGE_SYM 520
#define LAST_SYM 521
#define LE 522
#define LEADING 523
#define LEAVES 524
#define LEAVE_SYM 525
#define LEFT 526
#define LESS_SYM 527
#define LEVEL_SYM 528
#define LEX_HOSTNAME 529
#define LIKE 530
#define LIMIT 531
#define LINEAR_SYM 532
#define LINES 533
#define LINESTRING_SYM 534
#define LIST_SYM 535
#define LOAD 536
#define LOCAL_SYM 537
#define OBSOLETE_TOKEN_538 538
#define LOCKS_SYM 539
#define LOCK_SYM 540
#define LOGFILE_SYM 541
#define LOGS_SYM 542
#define LONGBLOB_SYM 543
#define LONGTEXT_SYM 544
#define LONG_NUM 545
#define LONG_SYM 546
#define LOOP_SYM 547
#define LOW_PRIORITY 548
#define LT 549
#define MASTER_AUTO_POSITION_SYM 550
#define MASTER_BIND_SYM 551
#define MASTER_CONNECT_RETRY_SYM 552
#define MASTER_DELAY_SYM 553
#define MASTER_HOST_SYM 554
#define MASTER_LOG_FILE_SYM 555
#define MASTER_LOG_POS_SYM 556
#define MASTER_PASSWORD_SYM 557
#define MASTER_PORT_SYM 558
#define MASTER_RETRY_COUNT_SYM 559
#define MASTER_SSL_CAPATH_SYM 561
#define MASTER_TLS_VERSION_SYM 562
#define MASTER_SSL_CA_SYM 563
#define MASTER_SSL_CERT_SYM 564
#define MASTER_SSL_CIPHER_SYM 565
#define MASTER_SSL_CRL_SYM 566
#define MASTER_SSL_CRLPATH_SYM 567
#define MASTER_SSL_KEY_SYM 568
#define MASTER_SSL_SYM 569
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 570
#define MASTER_SYM 571
#define MASTER_USER_SYM 572
#define MASTER_HEARTBEAT_PERIOD_SYM 573
#define MATCH 574
#define MAX_CONNECTIONS_PER_HOUR 575
#define MAX_QUERIES_PER_HOUR 576
#define MAX_ROWS 577
#define MAX_SIZE_SYM 578
#define MAX_SYM 579
#define MAX_UPDATES_PER_HOUR 580
#define MAX_USER_CONNECTIONS_SYM 581
#define MAX_VALUE_SYM 582
#define MEDIUMBLOB_SYM 583
#define MEDIUMINT_SYM 584
#define MEDIUMTEXT_SYM 585
#define MEDIUM_SYM 586
#define MEMORY_SYM 587
#define MERGE_SYM 588
#define MESSAGE_TEXT_SYM 589
#define MICROSECOND_SYM 590
#define MIGRATE_SYM 591
#define MINUTE_MICROSECOND_SYM 592
#define MINUTE_SECOND_SYM 593
#define MINUTE_SYM 594
#define MIN_ROWS 595
#define MIN_SYM 596
#define MODE_SYM 597
#define MODIFIES_SYM 598
#define MODIFY_SYM 599
#define MOD_SYM 600
#define MONTH_SYM 601
#define MULTILINESTRING_SYM 602
#define MULTIPOINT_SYM 603
#define MULTIPOLYGON_SYM 604
#define MUTEX_SYM 605
#define MYSQL_ERRNO_SYM 606
#define NAMES_SYM 607
#define NAME_SYM 608
#define NATIONAL_SYM 609
#define NATURAL 610
#define NCHAR_STRING 611
#define NCHAR_SYM 612
#define NDBCLUSTER_SYM 613
#define NE 614
#define NEG 615
#define NEVER_SYM 616
#define NEW_SYM 617
#define NEXT_SYM 618
#define NODEGROUP_SYM 619
#define NONE_SYM 620
#define NOT2_SYM 621
#define NOT_SYM 622
#define NOW_SYM 623
#define NO_SYM 624
#define NO_WAIT_SYM 625
#define NO_WRITE_TO_BINLOG 626
#define NULL_SYM 627
#define NUM 628
#define NUMBER_SYM 629
#define NUMERIC_SYM 630
#define NVARCHAR_SYM 631
#define OFFSET_SYM 632
#define ON_SYM 633
#define ONE_SYM 634
#define ONLY_SYM 635
#define OPEN_SYM 636
#define OPTIMIZE 637
#define OPTIMIZER_COSTS_SYM 638
#define OPTIONS_SYM 639
#define OPTION 640
#define OPTIONALLY 641
#define OR2_SYM 642
#define ORDER_SYM 643
#define OR_OR_SYM 644
#define OR_SYM 645
#define OUTER_SYM 646
#define OUTFILE 647
#define OUT_SYM 648
#define OWNER_SYM 649
#define PACK_KEYS_SYM 650
#define PAGE_SYM 651
#define PARAM_MARKER 652
#define PARSER_SYM 653
#define OBSOLETE_TOKEN_654 654
#define PARTIAL 655
#define PARTITION_SYM 656
#define PARTITIONS_SYM 657
#define PARTITIONING_SYM 658
#define PASSWORD 659
#define PHASE_SYM 660
#define PLUGIN_DIR_SYM 661
#define PLUGIN_SYM 662
#define PLUGINS_SYM 663
#define POINT_SYM 664
#define POLYGON_SYM 665
#define PORT_SYM 666
#define POSITION_SYM 667
#define PRECEDES_SYM 668
#define PRECISION 669
#define PREPARE_SYM 670
#define PRESERVE_SYM 671
#define PREV_SYM 672
#define PRIMARY_SYM 673
#define PRIVILEGES 674
#define PROCEDURE_SYM 675
#define PROCESS 676
#define PROCESSLIST_SYM 677
#define PROFILE_SYM 678
#define PROFILES_SYM 679
#define PROXY_SYM 680
#define PURGE 681
#define QUARTER_SYM 682
#define QUERY_SYM 683
#define QUICK 684
#define RANGE_SYM 685
#define READS_SYM 686
#define READ_ONLY_SYM 687
#define READ_SYM 688
#define READ_WRITE_SYM 689
#define REAL_SYM 690
#define REBUILD_SYM 691
#define RECOVER_SYM 692
#define OBSOLETE_TOKEN_693 693
#define REDO_BUFFER_SIZE_SYM 694
#define REDUNDANT_SYM 695
#define REFERENCES 696
#define REGEXP 697
#define RELAY 698
#define RELAYLOG_SYM 699
#define RELAY_LOG_FILE_SYM 700
#define RELAY_LOG_POS_SYM 701
#define RELAY_THREAD 702
#define RELEASE_SYM 703
#define RELOAD 704
#define REMOVE_SYM 705
#define RENAME 706
#define REORGANIZE_SYM 707
#define REPAIR 708
#define REPEATABLE_SYM 709
#define REPEAT_SYM 710
#define REPLACE_SYM 711
#define REPLICATION 712
#define REPLICATE_DO_DB 713
#define REPLICATE_IGNORE_DB 714
#define REPLICATE_DO_TABLE 715
#define REPLICATE_IGNORE_TABLE 716
#define REPLICATE_WILD_DO_TABLE 717
#define REPLICATE_WILD_IGNORE_TABLE 718
#define REPLICATE_REWRITE_DB 719
#define REQUIRE_SYM 720
#define RESET_SYM 721
#define RESIGNAL_SYM 722
#define RESOURCES 723
#define RESTORE_SYM 724
#define RESTRICT 725
#define RESUME_SYM 726
#define RETURNED_SQLSTATE_SYM 727
#define RETURNS_SYM 728
#define RETURN_SYM 729
#define REVERSE_SYM 730
#define REVOKE 731
#define RIGHT 732
#define ROLLBACK_SYM 733
#define ROLLUP_SYM 734
#define ROTATE_SYM 735
#define ROUTINE_SYM 736
#define ROWS_SYM 737
#define ROW_FORMAT_SYM 738
#define ROW_SYM 739
#define ROW_COUNT_SYM 740
#define RTREE_SYM 741
#define SAVEPOINT_SYM 742
#define SCHEDULE_SYM 743
#define SCHEMA_NAME_SYM 744
#define SECOND_MICROSECOND_SYM 745
#define SECOND_SYM 746
#define SECURITY_SYM 747
#define SELECT_SYM 748
#define SENSITIVE_SYM 749
#define SEPARATOR_SYM 750
#define SERIALIZABLE_SYM 751
#define SERIAL_SYM 752
#define SESSION_SYM 753
#define SERVER_SYM 754
#define OBSOLETE_TOKEN_755 755
#define SET_SYM 756
#define SET_VAR 757
#define SHARE_SYM 758
#define SHIFT_LEFT 759
#define SHIFT_RIGHT 760
#define SHOW 761
#define SHUTDOWN 762
#define SIGNAL_SYM 763
#define SIGNED_SYM 764
#define SIMPLE_SYM 765
#define SLAVE 766
#define SLOW 767
#define SMALLINT_SYM 768
#define SNAPSHOT_SYM 769
#define SOCKET_SYM 770
#define SONAME_SYM 771
#define SOUNDS_SYM 772
#define SOURCE_SYM 773
#define SPATIAL_SYM 774
#define SPECIFIC_SYM 775
#define SQLEXCEPTION_SYM 776
#define SQLSTATE_SYM 777
#define SQLWARNING_SYM 778
#define SQL_AFTER_GTIDS 779
#define SQL_AFTER_MTS_GAPS 780
#define SQL_BEFORE_GTIDS 781
#define SQL_BIG_RESULT 782
#define SQL_BUFFER_RESULT 783
#define OBSOLETE_TOKEN_784 784
#define SQL_CALC_FOUND_ROWS 785
#define SQL_NO_CACHE_SYM 786
#define SQL_SMALL_RESULT 787
#define SQL_SYM 788
#define SQL_THREAD 789
#define SSL_SYM 790
#define STACKED_SYM 791
#define STARTING 792
#define STARTS_SYM 793
#define START_SYM 794
#define STATS_AUTO_RECALC_SYM 795
#define STATS_PERSISTENT_SYM 796
#define STATS_SAMPLE_PAGES_SYM 797
#define STATUS_SYM 798
#define STDDEV_SAMP_SYM 799
#define STD_SYM 800
#define STOP_SYM 801
#define STORAGE_SYM 802
#define STORED_SYM 803
#define STRAIGHT_JOIN 804
#define STRING_SYM 805
#define SUBCLASS_ORIGIN_SYM 806
#define SUBDATE_SYM 807
#define SUBJECT_SYM 808
#define SUBPARTITIONS_SYM 809
#define SUBPARTITION_SYM 810
#define SUBSTRING 811
#define SUM_SYM 812
#define SUPER_SYM 813
#define SUSPEND_SYM 814
#define SWAPS_SYM 815
#define SWITCHES_SYM 816
#define SYSDATE 817
#define TABLES 818
#define TABLESPACE_SYM 819
#define OBSOLETE_TOKEN_820 820
#define TABLE_SYM 821
#define TABLE_CHECKSUM_SYM 822
#define TABLE_NAME_SYM 823
#define TEMPORARY 824
#define TEMPTABLE_SYM 825
#define TERMINATED 826
#define TEXT_STRING 827
#define TEXT_SYM 828
#define THAN_SYM 829
#define THEN_SYM 830
#define TIMESTAMP_SYM 831
#define TIMESTAMP_ADD 832
#define TIMESTAMP_DIFF 833
#define TIME_SYM 834
#define TINYBLOB_SYM 835
#define TINYINT_SYM 836
#define TINYTEXT_SYN 837
#define TO_SYM 838
#define TRAILING 839
#define TRANSACTION_SYM 840
#define TRIGGERS_SYM 841
#define TRIGGER_SYM 842
#define TRIM 843
#define TRUE_SYM 844
#define TRUNCATE_SYM 845
#define TYPES_SYM 846
#define TYPE_SYM 847
#define OBSOLETE_TOKEN_848 848
#define ULONGLONG_NUM 849
#define UNCOMMITTED_SYM 850
#define UNDEFINED_SYM 851
#define UNDERSCORE_CHARSET 852
#define UNDOFILE_SYM 853
#define UNDO_BUFFER_SIZE_SYM 854
#define UNDO_SYM 855
#define UNICODE_SYM 856
#define UNINSTALL_SYM 857
#define UNION_SYM 858
#define UNIQUE_SYM 859
#define UNKNOWN_SYM 860
#define UNLOCK_SYM 861
#define UNSIGNED_SYM 862
#define UNTIL_SYM 863
#define UPDATE_SYM 864
#define UPGRADE_SYM 865
#define USAGE 866
#define USER 867
#define USE_FRM 868
#define USE_SYM 869
#define USING 870
#define UTC_DATE_SYM 871
#define UTC_TIMESTAMP_SYM 872
#define UTC_TIME_SYM 873
#define VALIDATION_SYM 874
#define VALUES 875
#define VALUE_SYM 876
#define VARBINARY_SYM 877
#define VARCHAR_SYM 878
#define VARIABLES 879
#define VARIANCE_SYM 880
#define VARYING 881
#define VAR_SAMP_SYM 882
#define VIEW_SYM 883
#define VIRTUAL_SYM 884
#define WAIT_SYM 885
#define WARNINGS 886
#define WEEK_SYM 887
#define WEIGHT_STRING_SYM 888
#define WHEN_SYM 889
#define WHERE 890
#define WHILE_SYM 891
#define WITH 892
#define OBSOLETE_TOKEN_893 893
#define WITH_ROLLUP_SYM 894
#define WITHOUT_SYM 895
#define WORK_SYM 896
#define WRAPPER_SYM 897
#define WRITE_SYM 898
#define X509_SYM 899
#define XA_SYM 900
#define XID_SYM 901
#define XML_SYM 902
#define XOR 903
#define YEAR_MONTH_SYM 904
#define YEAR_SYM 905
#define ZEROFILL_SYM 906
#define JSON_UNQUOTED_SEPARATOR_SYM 907
#define PERSIST_SYM 908
#define ROLE_SYM 909
#define ADMIN_SYM 910
#define INVISIBLE_SYM 911
#define VISIBLE_SYM 912
#define EXCEPT_SYM 913
#define COMPONENT_SYM 914
#define RECURSIVE_SYM 915
#define GRAMMAR_SELECTOR_EXPR 916
#define GRAMMAR_SELECTOR_GCOL 917
#define GRAMMAR_SELECTOR_PART 918
#define GRAMMAR_SELECTOR_CTE 919
#define JSON_OBJECTAGG 920
#define JSON_ARRAYAGG 921
#define OF_SYM 922
#define SKIP_SYM 923
#define LOCKED_SYM 924
#define NOWAIT_SYM 925
#define GROUPING_SYM 926
#define PERSIST_ONLY_SYM 927
#define HISTOGRAM_SYM 928
#define BUCKETS_SYM 929
#define OBSOLETE_TOKEN_930 930
#define CLONE_SYM 931
#define CUME_DIST_SYM 932
#define DENSE_RANK_SYM 933
#define EXCLUDE_SYM 934
#define FIRST_VALUE_SYM 935
#define FOLLOWING_SYM 936
#define GROUPS_SYM 937
#define LAG_SYM 938
#define LAST_VALUE_SYM 939
#define LEAD_SYM 940
#define NTH_VALUE_SYM 941
#define NTILE_SYM 942
#define NULLS_SYM 943
#define OTHERS_SYM 944
#define OVER_SYM 945
#define PERCENT_RANK_SYM 946
#define PRECEDING_SYM 947
#define RANK_SYM 948
#define RESPECT_SYM 949
#define ROW_NUMBER_SYM 950
#define TIES_SYM 951
#define UNBOUNDED_SYM 952
#define WINDOW_SYM 953
#define EMPTY_SYM 954
#define JSON_TABLE_SYM 955
#define NESTED_SYM 956
#define ORDINALITY_SYM 957
#define PATH_SYM 958
#define HISTORY_SYM 959
#define REUSE_SYM 960
#define SRID_SYM 961
#define THREAD_PRIORITY_SYM 962
#define RESOURCE_SYM 963
#define SYSTEM_SYM 964
#define VCPU_SYM 965
#define MASTER_PUBLIC_KEY_PATH_SYM 966
#define GET_MASTER_PUBLIC_KEY_SYM 967
#define RESTART_SYM 968
#define DEFINITION_SYM 969
#define DESCRIPTION_SYM 970
#define ORGANIZATION_SYM 971
#define REFERENCE_SYM 972
#define ACTIVE_SYM 973
#define INACTIVE_SYM 974
#define LATERAL_SYM 975
#define ARRAY_SYM 976
#define MEMBER_SYM 977
#define OPTIONAL_SYM 978
#define SECONDARY_SYM 979
#define SECONDARY_ENGINE_SYM 980
#define SECONDARY_LOAD_SYM 981
#define SECONDARY_UNLOAD_SYM 982
#define RETAIN_SYM 983
#define OLD_SYM 984
#define ENFORCED_SYM 985
#define OJ_SYM 986
#define NETWORK_NAMESPACE_SYM 987
#define RANDOM_SYM 988
#define MASTER_COMPRESSION_ALGORITHM_SYM 989
#define MASTER_ZSTD_COMPRESSION_LEVEL_SYM 990
#define PRIVILEGE_CHECKS_USER_SYM 991
#define MASTER_TLS_CIPHERSUITES_SYM 992
#define REQUIRE_ROW_FORMAT_SYM 993
#define PASSWORD_LOCK_TIME_SYM 994
#define FAILED_LOGIN_ATTEMPTS_SYM 995
#define REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM 996
#define STREAM_SYM 997
#define OFF_SYM 998
#define RETURNING_SYM 999
#define YYUNDEF 1150
#define JSON_VALUE_SYM 1151
#define TLS_SYM 1152
#define ATTRIBUTE_SYM 1153
#define ENGINE_ATTRIBUTE_SYM 1154
#define SECONDARY_ENGINE_ATTRIBUTE_SYM 1155
#define SOURCE_CONNECTION_AUTO_FAILOVER_SYM 1156
#define ZONE_SYM 1157
#define GRAMMAR_SELECTOR_DERIVED_EXPR 1158
#define REPLICA_SYM 1159
#define REPLICAS_SYM 1160
#define ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM 1161
#define GET_SOURCE_PUBLIC_KEY_SYM 1162
#define SOURCE_AUTO_POSITION_SYM 1163
#define SOURCE_BIND_SYM 1164
#define SOURCE_COMPRESSION_ALGORITHM_SYM 1165
#define SOURCE_CONNECT_RETRY_SYM 1166
#define SOURCE_DELAY_SYM 1167
#define SOURCE_HEARTBEAT_PERIOD_SYM 1168
#define SOURCE_HOST_SYM 1169
#define SOURCE_LOG_FILE_SYM 1170
#define SOURCE_LOG_POS_SYM 1171
#define SOURCE_PASSWORD_SYM 1172
#define SOURCE_PORT_SYM 1173
#define SOURCE_PUBLIC_KEY_PATH_SYM 1174
#define SOURCE_RETRY_COUNT_SYM 1175
#define SOURCE_SSL_SYM 1176
#define SOURCE_SSL_CA_SYM 1177
#define SOURCE_SSL_CAPATH_SYM 1178
#define SOURCE_SSL_CERT_SYM 1179
#define SOURCE_SSL_CIPHER_SYM 1180
#define SOURCE_SSL_CRL_SYM 1181
#define SOURCE_SSL_CRLPATH_SYM 1182
#define SOURCE_SSL_KEY_SYM 1183
#define SOURCE_SSL_VERIFY_SERVER_CERT_SYM 1184
#define SOURCE_TLS_CIPHERSUITES_SYM 1185
#define SOURCE_TLS_VERSION_SYM 1186
#define SOURCE_USER_SYM 1187
#define SOURCE_ZSTD_COMPRESSION_LEVEL_SYM 1188
#define ST_COLLECT_SYM 1189
#define KEYRING_SYM 1190
#define CHANGED_PAGE_BITMAPS_SYM 1300
#define CLIENT_STATS_SYM 1301
#define CLUSTERING_SYM 1302
#define COMPRESSION_DICTIONARY_SYM 1303
#define INDEX_STATS_SYM 1304
#define TABLE_STATS_SYM 1305
#define THREAD_STATS_SYM 1306
#define USER_STATS_SYM 1307
#define ENCRYPTION_KEY_ID_SYM 1308
#define EFFECTIVE_SYM 1350
#define SEQUENCE_TABLE_SYM 1351
#define KEYWORD_USED_AS_IDENT 1353
#define KEYWORD_USED_AS_KEYWORD 1354
#define CONDITIONLESS_JOIN 1355
#define SUBQUERY_AS_EXPR 1356
#define EMPTY_FROM_CLAUSE 1357

/* Value type.  */

/* Location type.  */
#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE YYLTYPE;
struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
};
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif



int MYSQLparse (class THD *YYTHD, class Parse_tree_root **parse_tree);

#endif /* !YY_MYSQL_MNT_JENKINS_WORKSPACE_PS8_0_AUTOBUILD_RELEASE_TEST_PERCONA_SERVER_SQL_SQL_YACC_H_INCLUDED  */

/* Copy the second part of user declarations.  */

#line 2190 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:358  */

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

#ifndef YY_ATTRIBUTE
# if (defined __GNUC__                                               \
      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
# else
#  define YY_ATTRIBUTE(Spec) /* empty */
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
#endif

#if !defined _Noreturn \
     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
# if defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif


#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
             && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYSIZE_T yynewbytes;                                            \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / sizeof (*yyptr);                          \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  1151
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   89926

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  820
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  1013
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3240
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  5589

/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
   by yylex, with out-of-bounds checking.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   1357

#define YYTRANSLATE(YYX)                                                \
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, without out-of-bounds checking.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   817,     2,     2,     2,   805,   800,     2,
     809,   810,   803,   802,   814,   801,   815,   804,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   816,   812,
       2,     2,     2,     2,   813,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   806,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   818,   799,   819,   807,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
       2,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     794,   795,     2,   796,   797,   798,   808,   811
};

#if YYDEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  2177,  2177,  2178,  2183,  2193,  2211,  2215,  2223,  2236,
    2235,  2260,  2267,  2269,  2273,  2274,  2279,  2280,  2281,  2282,
    2283,  2284,  2285,  2286,  2287,  2288,  2289,  2290,  2291,  2292,
    2293,  2294,  2295,  2296,  2297,  2298,  2299,  2300,  2301,  2302,
    2303,  2304,  2305,  2306,  2307,  2308,  2309,  2310,  2311,  2312,
    2313,  2314,  2315,  2316,  2317,  2318,  2319,  2320,  2321,  2322,
    2323,  2324,  2325,  2326,  2327,  2328,  2329,  2330,  2331,  2332,
    2333,  2334,  2335,  2336,  2337,  2338,  2339,  2340,  2341,  2342,
    2343,  2344,  2345,  2346,  2347,  2348,  2349,  2350,  2351,  2352,
    2353,  2354,  2355,  2356,  2357,  2358,  2359,  2360,  2361,  2362,
    2363,  2364,  2365,  2366,  2367,  2368,  2369,  2370,  2371,  2372,
    2373,  2374,  2375,  2376,  2377,  2378,  2379,  2380,  2381,  2382,
    2383,  2384,  2385,  2386,  2387,  2388,  2389,  2390,  2391,  2392,
    2393,  2394,  2395,  2396,  2397,  2398,  2399,  2400,  2401,  2402,
    2403,  2404,  2405,  2406,  2407,  2408,  2409,  2410,  2411,  2412,
    2413,  2414,  2418,  2428,  2429,  2433,  2453,  2460,  2471,  2470,
    2481,  2483,  2487,  2488,  2492,  2505,  2504,  2523,  2528,  2533,
    2532,  2549,  2548,  2566,  2567,  2570,  2577,  2584,  2591,  2598,
    2605,  2613,  2622,  2628,  2635,  2642,  2650,  2659,  2665,  2671,
    2679,  2687,  2693,  2700,  2707,  2715,  2727,  2733,  2740,  2747,
    2755,  2765,  2766,  2770,  2776,  2780,  2785,  2789,  2795,  2799,
    2804,  2808,  2813,  2817,  2822,  2826,  2831,  2835,  2840,  2844,
    2849,  2853,  2858,  2862,  2867,  2871,  2876,  2880,  2885,  2889,
    2894,  2898,  2903,  2907,  2912,  2916,  2921,  2925,  2930,  2934,
    2939,  2943,  2948,  2952,  2957,  2961,  2966,  2970,  2975,  2979,
    2984,  2988,  2993,  2997,  3001,  3005,  3009,  3013,  3023,  3027,
    3031,  3036,  3047,  3052,  3056,  3060,  3064,  3065,  3069,  3073,
    3077,  3082,  3086,  3090,  3094,  3100,  3134,  3138,  3142,  3146,
    3152,  3153,  3163,  3164,  3180,  3181,  3184,  3186,  3187,  3191,
    3197,  3203,  3212,  3216,  3220,  3227,  3231,  3235,  3249,  3254,
    3262,  3267,  3271,  3276,  3280,  3284,  3300,  3304,  3315,  3316,
    3321,  3331,  3341,  3346,  3354,  3361,  3374,  3373,  3388,  3390,
    3403,  3423,  3442,  3462,  3476,  3490,  3495,  3504,  3509,  3521,
    3533,  3547,  3563,  3567,  3574,  3583,  3591,  3605,  3607,  3628,
    3629,  3633,  3637,  3641,  3645,  3649,  3654,  3658,  3666,  3665,
    3697,  3696,  3705,  3714,  3715,  3721,  3727,  3737,  3743,  3751,
    3753,  3762,  3763,  3767,  3773,  3782,  3783,  3791,  3791,  3849,
    3850,  3851,  3852,  3853,  3854,  3855,  3856,  3857,  3858,  3859,
    3860,  3861,  3865,  3879,  3898,  3899,  3903,  3904,  3909,  3911,
    3913,  3915,  3917,  3919,  3921,  3927,  3928,  3929,  3933,  3937,
    3944,  3951,  3952,  3959,  3961,  3965,  3966,  3970,  4021,  4023,
    4027,  4028,  4032,  4082,  4083,  4084,  4085,  4089,  4090,  4094,
    4095,  4100,  4103,  4127,  4226,  4244,  4243,  4322,  4318,  4395,
    4396,  4401,  4403,  4408,  4431,  4442,  4446,  4468,  4469,  4473,
    4477,  4490,  4496,  4502,  4511,  4524,  4550,  4556,  4557,  4563,
    4564,  4569,  4575,  4588,  4590,  4610,  4616,  4618,  4620,  4622,
    4624,  4626,  4628,  4630,  4632,  4634,  4636,  4638,  4643,  4657,
    4674,  4675,  4677,  4682,  4688,  4697,  4703,  4712,  4720,  4748,
    4756,  4758,  4767,  4772,  4778,  4787,  4795,  4797,  4799,  4801,
    4803,  4805,  4807,  4809,  4811,  4813,  4815,  4817,  4819,  4824,
    4844,  4868,  4872,  4880,  4881,  4882,  4883,  4884,  4885,  4886,
    4887,  4888,  4889,  4890,  4891,  4892,  4897,  4896,  4907,  4907,
    4972,  4971,  5028,  5028,  5050,  5107,  5154,  5178,  5177,  5202,
    5224,  5226,  5227,  5231,  5249,  5270,  5278,  5316,  5270,  5344,
    5346,  5347,  5351,  5352,  5357,  5367,  5356,  5419,  5418,  5432,
    5433,  5437,  5438,  5443,  5451,  5442,  5501,  5509,  5500,  5555,
    5568,  5573,  5572,  5610,  5611,  5616,  5615,  5649,  5649,  5668,
    5667,  5715,  5730,  5738,  5729,  5796,  5804,  5793,  5846,  5848,
    5853,  5855,  5857,  5872,  5873,  5880,  5881,  5888,  5889,  5893,
    5899,  5908,  5909,  5910,  5911,  5912,  5913,  5914,  5915,  5916,
    5917,  5918,  5919,  5923,  5924,  5928,  5934,  5943,  5944,  5945,
    5946,  5947,  5948,  5949,  5950,  5954,  5955,  5959,  5965,  5974,
    5978,  5979,  5983,  5989,  5998,  5999,  6000,  6001,  6002,  6003,
    6004,  6008,  6009,  6013,  6019,  6028,  6029,  6030,  6034,  6038,
    6039,  6043,  6047,  6054,  6061,  6065,  6072,  6079,  6086,  6093,
    6100,  6107,  6114,  6121,  6125,  6132,  6139,  6153,  6160,  6161,
    6236,  6242,  6246,  6251,  6256,  6262,  6270,  6280,  6281,  6295,
    6303,  6307,  6311,  6315,  6319,  6323,  6330,  6331,  6336,  6337,
    6355,  6356,  6368,  6369,  6374,  6383,  6384,  6389,  6395,  6405,
    6406,  6418,  6419,  6423,  6429,  6438,  6447,  6450,  6455,  6463,
    6464,  6468,  6472,  6479,  6486,  6496,  6495,  6513,  6519,  6528,
    6529,  6534,  6535,  6539,  6545,  6554,  6561,  6562,  6566,  6572,
    6581,  6583,  6585,  6587,  6589,  6591,  6593,  6595,  6604,  6605,
    6609,  6610,  6631,  6632,  6636,  6637,  6641,  6646,  6651,  6666,
    6667,  6671,  6677,  6686,  6692,  6700,  6702,  6706,  6710,  6714,
    6718,  6722,  6726,  6730,  6734,  6738,  6742,  6746,  6757,  6761,
    6765,  6769,  6773,  6790,  6794,  6798,  6802,  6806,  6810,  6814,
    6818,  6822,  6826,  6830,  6834,  6838,  6842,  6846,  6850,  6855,
    6859,  6863,  6867,  6874,  6888,  6892,  6896,  6900,  6904,  6905,
    6906,  6907,  6908,  6909,  6913,  6914,  6915,  6919,  6920,  6921,
    6922,  6926,  6932,  6941,  6942,  6946,  6953,  6954,  6962,  6968,
    6974,  6979,  6996,  7004,  7012,  7016,  7017,  7021,  7022,  7026,
    7027,  7031,  7035,  7039,  7060,  7062,  7066,  7067,  7068,  7072,
    7076,  7080,  7084,  7088,  7092,  7096,  7100,  7105,  7110,  7119,
    7128,  7132,  7136,  7141,  7150,  7154,  7177,  7181,  7185,  7189,
    7193,  7197,  7201,  7202,  7206,  7210,  7214,  7219,  7224,  7229,
    7234,  7239,  7243,  7247,  7252,  7256,  7263,  7265,  7267,  7269,
    7271,  7273,  7275,  7277,  7282,  7283,  7287,  7288,  7292,  7293,
    7294,  7295,  7296,  7300,  7301,  7302,  7303,  7304,  7308,  7313,
    7317,  7319,  7323,  7324,  7325,  7326,  7331,  7335,  7344,  7348,
    7353,  7357,  7366,  7367,  7371,  7372,  7373,  7381,  7382,  7386,
    7390,  7394,  7395,  7396,  7405,  7406,  7407,  7408,  7411,  7412,
    7417,  7421,  7425,  7426,  7430,  7449,  7468,  7472,  7476,  7480,
    7484,  7488,  7492,  7496,  7500,  7504,  7508,  7512,  7516,  7520,
    7524,  7528,  7532,  7536,  7540,  7549,  7554,  7567,  7571,  7575,
    7582,  7583,  7590,  7591,  7592,  7596,  7597,  7598,  7602,  7608,
    7612,  7616,  7617,  7621,  7630,  7634,  7635,  7639,  7648,  7652,
    7653,  7657,  7663,  7667,  7668,  7672,  7673,  7678,  7679,  7683,
    7690,  7698,  7704,  7714,  7718,  7723,  7728,  7733,  7740,  7746,
    7757,  7758,  7766,  7765,  7777,  7779,  7783,  7798,  7799,  7803,
    7810,  7820,  7821,  7822,  7823,  7828,  7832,  7837,  7842,  7848,
    7857,  7858,  7859,  7860,  7861,  7865,  7866,  7871,  7872,  7876,
    7877,  7881,  7882,  7883,  7887,  7888,  7892,  7896,  7900,  7904,
    7908,  7912,  7916,  7920,  7926,  7927,  7931,  7937,  7946,  7947,
    7961,  7962,  7966,  7972,  7981,  7985,  7986,  7990,  7996,  8005,
    8006,  8011,  8012,  8016,  8020,  8024,  8048,  8049,  8050,  8054,
    8055,  8059,  8060,  8064,  8065,  8069,  8070,  8071,  8075,  8081,
    8091,  8097,  8112,  8118,  8128,  8129,  8138,  8139,  8143,  8144,
    8148,  8154,  8166,  8177,  8192,  8191,  8212,  8211,  8233,  8232,
    8254,  8253,  8272,  8266,  8289,  8288,  8324,  8346,  8365,  8385,
    8393,  8415,  8439,  8450,  8452,  8467,  8481,  8487,  8499,  8511,
    8525,  8526,  8530,  8540,  8550,  8555,  8562,  8571,  8572,  8576,
    8577,  8581,  8587,  8593,  8601,  8616,  8624,  8632,  8639,  8646,
    8653,  8660,  8666,  8672,  8678,  8690,  8702,  8711,  8712,  8716,
    8717,  8721,  8727,  8733,  8739,  8748,  8762,  8763,  8764,  8765,
    8769,  8770,  8782,  8783,  8787,  8788,  8792,  8793,  8808,  8813,
    8821,  8825,  8833,  8837,  8842,  8843,  8852,  8856,  8867,  8871,
    8875,  8879,  8883,  8888,  8893,  8898,  8903,  8910,  8914,  8918,
    8922,  8927,  8932,  8937,  8942,  8946,  8953,  8954,  8958,  8962,
    8969,  8970,  8978,  8985,  8990,  8994,  8999,  9010,  9011,  9019,
    9023,  9027,  9031,  9035,  9039,  9044,  9048,  9052,  9056,  9060,
    9064,  9068,  9072,  9076,  9080,  9085,  9089,  9093,  9097,  9101,
    9105,  9109,  9113,  9117,  9123,  9127,  9134,  9139,  9144,  9152,
    9153,  9158,  9163,  9169,  9178,  9182,  9186,  9203,  9207,  9211,
    9227,  9229,  9233,  9234,  9238,  9239,  9240,  9244,  9245,  9246,
    9250,  9251,  9252,  9253,  9257,  9258,  9266,  9274,  9276,  9280,
    9281,  9285,  9286,  9287,  9291,  9303,  9316,  9323,  9324,  9328,
    9343,  9358,  9342,  9382,  9399,  9402,  9409,  9413,  9420,  9424,
    9431,  9435,  9442,  9445,  9452,  9455,  9462,  9465,  9472,  9475,
    9483,  9486,  9493,  9497,  9504,  9508,  9516,  9520,  9545,  9546,
    9547,  9552,  9557,  9564,  9578,  9579,  9580,  9584,  9593,  9594,
    9598,  9599,  9607,  9608,  9609,  9613,  9623,  9624,  9643,  9648,
    9655,  9665,  9673,  9681,  9682,  9686,  9687,  9695,  9697,  9699,
    9701,  9703,  9705,  9710,  9717,  9718,  9719,  9724,  9723,  9729,
    9736,  9741,  9749,  9750,  9754,  9767,  9771,  9780,  9786,  9795,
    9802,  9803,  9807,  9812,  9819,  9825,  9834,  9841,  9848,  9849,
    9859,  9860,  9864,  9868,  9873,  9877,  9913,  9917,  9921,  9925,
    9929,  9968,  9974,  9981,  9987,  9994,  9999, 10005, 10013, 10017,
   10021, 10025, 10029, 10037, 10038, 10039, 10046, 10051, 10055, 10067,
   10089, 10113, 10114, 10118, 10122, 10123, 10127, 10133, 10142, 10149,
   10161, 10164, 10168, 10173, 10177, 10181, 10190, 10196, 10205, 10209,
   10213, 10220, 10221, 10225, 10229, 10230, 10234, 10235, 10239, 10245,
   10251, 10261, 10262, 10270, 10271, 10272, 10273, 10274, 10278, 10279,
   10284, 10290, 10295, 10301, 10305, 10309, 10313, 10317, 10321, 10325,
   10329, 10333, 10337, 10341, 10345, 10358, 10362, 10366, 10371, 10375,
   10382, 10386, 10395, 10399, 10403, 10407, 10415, 10419, 10423, 10428,
   10433, 10441, 10449, 10453, 10454, 10458, 10462, 10466, 10470, 10474,
   10478, 10482, 10486, 10490, 10494, 10498, 10502, 10506, 10510, 10514,
   10518, 10519, 10523, 10524, 10531, 10532, 10536, 10537, 10541, 10542,
   10543, 10544, 10545, 10546, 10547, 10551, 10552, 10556, 10557, 10558,
   10559, 10560, 10561, 10565, 10566, 10567, 10568, 10569, 10570, 10574,
   10578, 10582, 10586, 10590, 10594, 10595, 10599, 10603, 10607, 10611,
   10615, 10619, 10623, 10627, 10635, 10639, 10643, 10647, 10651, 10655,
   10660, 10667, 10678, 10679, 10689, 10693, 10697, 10701, 10705, 10709,
   10713, 10717, 10721, 10725, 10732, 10736, 10740, 10744, 10748, 10752,
   10756, 10760, 10764, 10769, 10774, 10779, 10783, 10787, 10791, 10795,
   10800, 10804, 10823, 10827, 10831, 10835, 10839, 10844, 10849, 10853,
   10857, 10862, 10866, 10870, 10874, 10878, 10882, 10886, 10890, 10895,
   10899, 10903, 10907, 10911, 10922, 10925, 10936, 10940, 10944, 10948,
   10952, 10956, 10960, 10964, 10968, 10972, 10976, 10980, 10984, 10988,
   10992, 10996, 11000, 11004, 11008, 11012, 11016, 11020, 11024, 11028,
   11034, 11040, 11046, 11052, 11058, 11062, 11080, 11084, 11091, 11093,
   11106, 11107, 11111, 11112, 11116, 11117, 11121, 11127, 11136, 11143,
   11144, 11148, 11152, 11156, 11160, 11164, 11174, 11184, 11188, 11192,
   11196, 11200, 11204, 11208, 11217, 11221, 11225, 11229, 11233, 11237,
   11241, 11245, 11249, 11253, 11263, 11267, 11271, 11275, 11279, 11283,
   11287, 11298, 11309, 11313, 11317, 11330, 11334, 11346, 11347, 11351,
   11352, 11353, 11358, 11361, 11369, 11372, 11376, 11385, 11388, 11392,
   11400, 11403, 11410, 11417, 11421, 11428, 11435, 11442, 11463, 11466,
   11474, 11477, 11485, 11488, 11496, 11499, 11508, 11513, 11520, 11524,
   11528, 11532, 11536, 11543, 11550, 11554, 11558, 11562, 11566, 11574,
   11577, 11581, 11585, 11589, 11595, 11596, 11597, 11601, 11608, 11612,
   11619, 11623, 11630, 11631, 11636, 11641, 11645, 11646, 11650, 11655,
   11665, 11672, 11679, 11698, 11706, 11713, 11720, 11727, 11734, 11741,
   11748, 11755, 11762, 11769, 11776, 11784, 11791, 11798, 11805, 11812,
   11819, 11826, 11833, 11843, 11844, 11848, 11854, 11863, 11864, 11868,
   11874, 11883, 11884, 11888, 11889, 11893, 11901, 11910, 11911, 11912,
   11925, 11926, 12007, 12011, 12016, 12020, 12024, 12034, 12041, 12042,
   12043, 12047, 12048, 12049, 12050, 12053, 12054, 12057, 12059, 12062,
   12064, 12072, 12073, 12077, 12106, 12107, 12108, 12109, 12111, 12113,
   12117, 12118, 12127, 12128, 12132, 12139, 12140, 12144, 12157, 12168,
   12181, 12195, 12202, 12208, 12217, 12221, 12231, 12238, 12241, 12252,
   12256, 12261, 12266, 12275, 12276, 12287, 12290, 12293, 12297, 12301,
   12309, 12312, 12313, 12314, 12318, 12319, 12323, 12329, 12338, 12339,
   12347, 12348, 12352, 12357, 12363, 12367, 12373, 12382, 12388, 12396,
   12400, 12409, 12421, 12422, 12423, 12424, 12425, 12426, 12427, 12428,
   12429, 12430, 12431, 12432, 12436, 12437, 12438, 12439, 12440, 12441,
   12442, 12443, 12444, 12448, 12449, 12450, 12451, 12454, 12456, 12460,
   12461, 12464, 12466, 12470, 12471, 12475, 12479, 12480, 12487, 12491,
   12498, 12503, 12512, 12529, 12537, 12544, 12550, 12560, 12563, 12570,
   12576, 12585, 12599, 12600, 12607, 12612, 12623, 12624, 12639, 12644,
   12654, 12661, 12662, 12666, 12673, 12678, 12688, 12689, 12693, 12694,
   12698, 12699, 12703, 12710, 12716, 12722, 12731, 12735, 12739, 12743,
   12747, 12754, 12755, 12759, 12760, 12761, 12762, 12763, 12764, 12768,
   12769, 12770, 12771, 12772, 12776, 12777, 12778, 12779, 12780, 12784,
   12785, 12786, 12787, 12788, 12792, 12797, 12798, 12802, 12808, 12817,
   12821, 12828, 12835, 12841, 12845, 12853, 12866, 12882, 12891, 12901,
   12924, 12959, 12966, 12981, 12991, 13006, 13015, 13026, 13046, 13068,
   13091, 13096, 13105, 13112, 13119, 13125, 13134, 13140, 13149, 13150,
   13154, 13155, 13159, 13160, 13164, 13170, 13179, 13180, 13187, 13207,
   13227, 13245, 13258, 13275, 13291, 13292, 13293, 13302, 13306, 13307,
   13318, 13320, 13324, 13329, 13334, 13342, 13347, 13352, 13360, 13366,
   13375, 13382, 13383, 13387, 13391, 13392, 13396, 13401, 13411, 13416,
   13425, 13426, 13429, 13431, 13435, 13439, 13444, 13449, 13453, 13459,
   13468, 13469, 13477, 13481, 13495, 13499, 13508, 13525, 13526, 13530,
   13537, 13549, 13557, 13558, 13564, 13577, 13587, 13600, 13602, 13606,
   13607, 13611, 13612, 13613, 13617, 13623, 13625, 13629, 13630, 13634,
   13635, 13639, 13640, 13641, 13642, 13643, 13644, 13645, 13646, 13647,
   13651, 13652, 13664, 13670, 13677, 13684, 13691, 13698, 13705, 13712,
   13719, 13726, 13733, 13750, 13757, 13764, 13771, 13778, 13786, 13803,
   13810, 13817, 13824, 13831, 13838, 13849, 13856, 13863, 13870, 13877,
   13884, 13891, 13898, 13902, 13906, 13910, 13914, 13918, 13925, 13932,
   13939, 13946, 13953, 13961, 13965, 13969, 13973, 13977, 13984, 13991,
   13998, 14005, 14012, 14019, 14026, 14033, 14040, 14047, 14048, 14052,
   14053, 14056, 14058, 14062, 14063, 14067, 14068, 14072, 14073, 14077,
   14078, 14079, 14080, 14084, 14085, 14089, 14090, 14094, 14095, 14099,
   14100, 14101, 14106, 14113, 14120, 14121, 14122, 14123, 14124, 14125,
   14132, 14133, 14138, 14141, 14157, 14175, 14185, 14186, 14191, 14199,
   14198, 14211, 14210, 14224, 14228, 14229, 14242, 14241, 14264, 14265,
   14270, 14272, 14274, 14276, 14278, 14280, 14286, 14288, 14290, 14292,
   14294, 14296, 14298, 14300, 14302, 14304, 14306, 14308, 14310, 14315,
   14316, 14321, 14320, 14327, 14337, 14338, 14343, 14348, 14358, 14357,
   14369, 14368, 14376, 14375, 14392, 14397, 14398, 14402, 14403, 14418,
   14417, 14428, 14429, 14439, 14443, 14457, 14469, 14470, 14471, 14477,
   14488, 14527, 14528, 14532, 14533, 14537, 14538, 14539, 14543, 14544,
   14548, 14549, 14553, 14554, 14558, 14563, 14567, 14572, 14578, 14583,
   14591, 14592, 14596, 14601, 14605, 14610, 14618, 14619, 14623, 14624,
   14628, 14629, 14633, 14634, 14635, 14639, 14645, 14654, 14655, 14662,
   14663, 14667, 14675, 14695, 14716, 14721, 14727, 14732, 14740, 14747,
   14754, 14764, 14783, 14784, 14785, 14795, 14796, 14800, 14815, 14816,
   14817, 14818, 14822, 14826, 14830, 14834, 14838, 14845, 14846, 14850,
   14851, 14855, 14866, 14867, 14868, 14873, 14877, 14881, 14888, 14889,
   14898, 14899, 14903, 14907, 14917, 14924, 14931, 14935, 14939, 14943,
   14947, 14951, 14960, 14966, 14977, 14983, 14994, 14995, 15025, 15038,
   15051, 15067, 15083, 15100, 15104, 15105, 15112, 15128, 15129, 15140,
   15141, 15151, 15152, 15163, 15164, 15174, 15175, 15176, 15180, 15181,
   15182, 15186, 15191, 15199, 15203, 15217, 15222, 15230, 15254, 15255,
   15256, 15257, 15258, 15265, 15266, 15267, 15274, 15275, 15276, 15277,
   15278, 15279, 15280, 15281, 15282, 15283, 15284, 15285, 15286, 15287,
   15288, 15289, 15290, 15291, 15292, 15293, 15294, 15295, 15296, 15297,
   15298, 15299, 15300, 15301, 15302, 15303, 15304, 15305, 15306, 15307,
   15308, 15309, 15324, 15325, 15326, 15333, 15334, 15335, 15336, 15337,
   15338, 15339, 15340, 15341, 15349, 15350, 15351, 15352, 15353, 15354,
   15355, 15356, 15357, 15358, 15359, 15360, 15361, 15362, 15363, 15364,
   15365, 15366, 15367, 15368, 15369, 15370, 15371, 15372, 15373, 15374,
   15375, 15376, 15377, 15378, 15379, 15380, 15381, 15382, 15383, 15384,
   15385, 15386, 15387, 15388, 15389, 15390, 15391, 15392, 15393, 15394,
   15395, 15396, 15397, 15398, 15399, 15400, 15401, 15402, 15403, 15404,
   15405, 15406, 15407, 15408, 15409, 15410, 15411, 15412, 15413, 15414,
   15415, 15416, 15417, 15418, 15419, 15420, 15421, 15422, 15423, 15424,
   15425, 15426, 15427, 15428, 15429, 15430, 15431, 15432, 15433, 15434,
   15435, 15436, 15437, 15438, 15439, 15440, 15441, 15442, 15443, 15444,
   15445, 15446, 15447, 15448, 15449, 15450, 15451, 15452, 15453, 15454,
   15455, 15456, 15457, 15458, 15459, 15460, 15461, 15462, 15463, 15464,
   15465, 15466, 15467, 15468, 15469, 15470, 15471, 15472, 15473, 15474,
   15475, 15476, 15477, 15478, 15479, 15480, 15481, 15482, 15483, 15484,
   15485, 15486, 15487, 15488, 15489, 15490, 15491, 15492, 15493, 15494,
   15495, 15496, 15497, 15498, 15499, 15500, 15501, 15502, 15503, 15504,
   15505, 15506, 15507, 15508, 15509, 15510, 15511, 15512, 15513, 15514,
   15515, 15516, 15517, 15518, 15519, 15520, 15521, 15522, 15523, 15524,
   15525, 15526, 15527, 15528, 15529, 15530, 15531, 15532, 15533, 15534,
   15535, 15536, 15537, 15538, 15539, 15540, 15541, 15542, 15543, 15544,
   15545, 15546, 15547, 15548, 15549, 15550, 15551, 15552, 15553, 15554,
   15555, 15556, 15557, 15558, 15559, 15560, 15561, 15562, 15563, 15564,
   15565, 15566, 15567, 15568, 15569, 15570, 15571, 15572, 15573, 15574,
   15575, 15576, 15577, 15578, 15579, 15580, 15581, 15582, 15583, 15584,
   15585, 15586, 15587, 15588, 15589, 15590, 15591, 15592, 15593, 15594,
   15595, 15596, 15597, 15598, 15599, 15600, 15601, 15602, 15603, 15604,
   15605, 15606, 15607, 15608, 15609, 15610, 15611, 15612, 15613, 15614,
   15615, 15616, 15617, 15618, 15619, 15620, 15621, 15622, 15623, 15624,
   15625, 15626, 15627, 15628, 15629, 15630, 15631, 15632, 15633, 15634,
   15635, 15636, 15637, 15638, 15639, 15640, 15641, 15642, 15643, 15644,
   15645, 15646, 15647, 15648, 15649, 15650, 15651, 15652, 15653, 15654,
   15655, 15656, 15657, 15658, 15659, 15660, 15661, 15662, 15663, 15664,
   15665, 15666, 15667, 15668, 15669, 15670, 15671, 15672, 15673, 15674,
   15675, 15676, 15677, 15678, 15679, 15680, 15681, 15682, 15683, 15684,
   15685, 15686, 15687, 15688, 15689, 15690, 15691, 15692, 15693, 15694,
   15695, 15696, 15697, 15698, 15699, 15700, 15701, 15702, 15703, 15704,
   15705, 15706, 15707, 15708, 15709, 15710, 15711, 15712, 15713, 15714,
   15715, 15716, 15717, 15718, 15719, 15720, 15721, 15722, 15723, 15724,
   15725, 15726, 15727, 15728, 15729, 15730, 15731, 15732, 15733, 15734,
   15735, 15736, 15737, 15738, 15739, 15740, 15741, 15742, 15743, 15744,
   15745, 15746, 15747, 15748, 15749, 15750, 15751, 15752, 15753, 15754,
   15755, 15756, 15757, 15758, 15759, 15760, 15761, 15762, 15763, 15764,
   15765, 15766, 15767, 15768, 15769, 15770, 15771, 15783, 15784, 15785,
   15797, 15798, 15799, 15800, 15809, 15810, 15811, 15812, 15813, 15824,
   15833, 15837, 15841, 15845, 15852, 15860, 15868, 15880, 15884, 15889,
   15894, 15899, 15904, 15909, 15917, 15918, 15922, 15926, 15933, 15939,
   15948, 15953, 15960, 15970, 15971, 15976, 15980, 15988, 15992, 15996,
   15997, 15998, 15999, 16000, 16004, 16005, 16006, 16007, 16011, 16012,
   16013, 16014, 16018, 16019, 16020, 16021, 16022, 16023, 16028, 16036,
   16042, 16046, 16051, 16055, 16062, 16066, 16073, 16077, 16081, 16088,
   16092, 16099, 16106, 16107, 16111, 16118, 16119, 16123, 16124, 16128,
   16129, 16130, 16131, 16135, 16136, 16137, 16141, 16145, 16149, 16153,
   16157, 16166, 16177, 16182, 16181, 16187, 16197, 16198, 16202, 16203,
   16207, 16235, 16236, 16237, 16242, 16246, 16257, 16264, 16272, 16280,
   16287, 16294, 16310, 16327, 16339, 16343, 16347, 16350, 16353, 16368,
   16383, 16393, 16397, 16401, 16410, 16421, 16437, 16438, 16442, 16443,
   16444, 16445, 16449, 16450, 16451, 16452, 16453, 16459, 16464, 16480,
   16479, 16498, 16503, 16514, 16519, 16536, 16535, 16552, 16565, 16566,
   16567, 16568, 16571, 16573, 16577, 16583, 16592, 16599, 16601, 16603,
   16605, 16607, 16609, 16611, 16613, 16615, 16617, 16619, 16621, 16623,
   16625, 16627, 16629, 16631, 16636, 16638, 16652, 16654, 16656, 16658,
   16660, 16662, 16664, 16666, 16668, 16670, 16672, 16674, 16676, 16678,
   16683, 16684, 16687, 16689, 16693, 16694, 16698, 16708, 16718, 16731,
   16745, 16757, 16769, 16781, 16798, 16804, 16813, 16819, 16828, 16829,
   16833, 16834, 16837, 16848, 16859, 16870, 16883, 16897, 16909, 16920,
   16934, 16952, 16963, 16974, 16988, 16999, 17013, 17028, 17041, 17052,
   17057, 17065, 17070, 17078, 17079, 17083, 17089, 17097, 17099, 17103,
   17107, 17111, 17118, 17119, 17124, 17125, 17129, 17130, 17134, 17139,
   17141, 17146, 17147, 17155, 17154, 17164, 17165, 17170, 17171, 17172,
   17177, 17178, 17179, 17183, 17184, 17188, 17200, 17209, 17219, 17228,
   17242, 17243, 17244, 17248, 17252, 17256, 17263, 17264, 17265, 17266,
   17267, 17268, 17269, 17275, 17286, 17295, 17297, 17299, 17304, 17305,
   17306, 17307, 17308, 17312, 17313, 17314, 17315, 17316, 17317, 17327,
   17328, 17333, 17346, 17359, 17361, 17363, 17368, 17373, 17375, 17377,
   17383, 17384, 17386, 17392, 17391, 17431, 17482, 17483, 17484, 17485,
   17495, 17497, 17503, 17508, 17526, 17516, 17593, 17611, 17635, 17659,
   17665, 17706, 17632, 17773, 17793, 17798, 17806, 17771, 17827, 17832,
   17837, 17842, 17847, 17852, 17860, 17861, 17864, 17873, 17883, 17901,
   17902, 17906, 17907, 17908, 17912, 17913, 17918, 17919, 17921, 17926,
   17932, 17941, 17947, 17956, 17962, 17971, 17988, 17997, 18020, 18024,
   18032, 18035, 18039, 18046, 18047, 18052, 18058, 18062, 18069, 18079,
   18086, 18099, 18100, 18104, 18105, 18113, 18114, 18119, 18127, 18128,
   18133
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM",
  "ACCOUNT_SYM", "ACTION", "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST",
  "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALTER", "ALWAYS_SYM",
  "OBSOLETE_TOKEN_271", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "ANY_SYM",
  "AS", "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM",
  "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM", "BETWEEN_SYM", "BIGINT_SYM",
  "BINARY_SYM", "BINLOG_SYM", "BIN_NUM", "BIT_AND_SYM", "BIT_OR_SYM",
  "BIT_SYM", "BIT_XOR_SYM", "BLOB_SYM", "BLOCK_SYM", "BOOLEAN_SYM",
  "BOOL_SYM", "BOTH", "BTREE_SYM", "BY", "BYTE_SYM", "CACHE_SYM",
  "CALL_SYM", "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGE", "CHANGED", "CHANNEL_SYM",
  "CHARSET", "CHAR_SYM", "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM",
  "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM",
  "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COLUMN_FORMAT_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "COMPRESSION_SYM", "ENCRYPTION_SYM", "CONCURRENT", "CONDITION_SYM",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT",
  "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM",
  "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CPU_SYM", "CREATE", "CROSS", "CUBE_SYM", "CURDATE",
  "CURRENT_SYM", "CURRENT_USER", "CURSOR_SYM", "CURSOR_NAME_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATAFILE_SYM", "DATA_SYM",
  "DATETIME_SYM", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL", "DATE_SYM",
  "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM",
  "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT_SYM", "DEFAULT_AUTH_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM",
  "DESC", "DESCRIBE", "OBSOLETE_TOKEN_388", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD_SYM",
  "DISK_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP",
  "DUAL_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM",
  "ELSE", "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM_SYM", "EQ",
  "EQUAL_SYM", "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM",
  "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM",
  "EXISTS", "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM",
  "EXTENDED_SYM", "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM",
  "FAST_SYM", "FAULTS_SYM", "FETCH_SYM", "FILE_SYM", "FILE_BLOCK_SIZE_SYM",
  "FILTER_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM",
  "FLUSH_SYM", "FOLLOWS_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM",
  "FORMAT_SYM", "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM",
  "FUNCTION_SYM", "GE", "GENERAL", "GENERATED", "GROUP_REPLICATION",
  "GEOMETRYCOLLECTION_SYM", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANT", "GRANTS", "GROUP_SYM", "GROUP_CONCAT_SYM",
  "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM",
  "HIGH_PRIORITY", "HOST_SYM", "HOSTS_SYM", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT",
  "IDENTIFIED_SYM", "IDENT_QUOTED", "IF", "IGNORE_SYM",
  "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE",
  "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT_SYM", "INSERT_METHOD", "INSTANCE_SYM", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM",
  "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "JSON_SEPARATOR_SYM", "JSON_SYM", "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM",
  "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM", "LE", "LEADING", "LEAVES",
  "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE",
  "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING_SYM", "LIST_SYM", "LOAD",
  "LOCAL_SYM", "OBSOLETE_TOKEN_538", "LOCKS_SYM", "LOCK_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "LONGBLOB_SYM", "LONGTEXT_SYM", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM",
  "MASTER_BIND_SYM", "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM",
  "MASTER_SSL_CAPATH_SYM", "MASTER_TLS_VERSION_SYM", "MASTER_SSL_CA_SYM",
  "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM",
  "MASTER_SSL_CRLPATH_SYM", "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB_SYM", "MEDIUMINT_SYM", "MEDIUMTEXT_SYM", "MEDIUM_SYM",
  "MEMORY_SYM", "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM",
  "MIGRATE_SYM", "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM",
  "MINUTE_SYM", "MIN_ROWS", "MIN_SYM", "MODE_SYM", "MODIFIES_SYM",
  "MODIFY_SYM", "MOD_SYM", "MONTH_SYM", "MULTILINESTRING_SYM",
  "MULTIPOINT_SYM", "MULTIPOLYGON_SYM", "MUTEX_SYM", "MYSQL_ERRNO_SYM",
  "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM", "NATURAL", "NCHAR_STRING",
  "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG", "NEVER_SYM", "NEW_SYM",
  "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM", "NOT_SYM",
  "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG", "NULL_SYM",
  "NUM", "NUMBER_SYM", "NUMERIC_SYM", "NVARCHAR_SYM", "OFFSET_SYM",
  "ON_SYM", "ONE_SYM", "ONLY_SYM", "OPEN_SYM", "OPTIMIZE",
  "OPTIMIZER_COSTS_SYM", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER_SYM", "OUTFILE", "OUT_SYM",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM",
  "OBSOLETE_TOKEN_654", "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM",
  "PARTITIONING_SYM", "PASSWORD", "PHASE_SYM", "PLUGIN_DIR_SYM",
  "PLUGIN_SYM", "PLUGINS_SYM", "POINT_SYM", "POLYGON_SYM", "PORT_SYM",
  "POSITION_SYM", "PRECEDES_SYM", "PRECISION", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM",
  "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL_SYM", "REBUILD_SYM",
  "RECOVER_SYM", "OBSOLETE_TOKEN_693", "REDO_BUFFER_SIZE_SYM",
  "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM",
  "RELOAD", "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR",
  "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE_SYM", "REPLICATION",
  "REPLICATE_DO_DB", "REPLICATE_IGNORE_DB", "REPLICATE_DO_TABLE",
  "REPLICATE_IGNORE_TABLE", "REPLICATE_WILD_DO_TABLE",
  "REPLICATE_WILD_IGNORE_TABLE", "REPLICATE_REWRITE_DB", "REQUIRE_SYM",
  "RESET_SYM", "RESIGNAL_SYM", "RESOURCES", "RESTORE_SYM", "RESTRICT",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "RETURN_SYM",
  "REVERSE_SYM", "REVOKE", "RIGHT", "ROLLBACK_SYM", "ROLLUP_SYM",
  "ROTATE_SYM", "ROUTINE_SYM", "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM",
  "ROW_COUNT_SYM", "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM",
  "SCHEMA_NAME_SYM", "SECOND_MICROSECOND_SYM", "SECOND_SYM",
  "SECURITY_SYM", "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM",
  "SERIALIZABLE_SYM", "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM",
  "OBSOLETE_TOKEN_755", "SET_SYM", "SET_VAR", "SHARE_SYM", "SHIFT_LEFT",
  "SHIFT_RIGHT", "SHOW", "SHUTDOWN", "SIGNAL_SYM", "SIGNED_SYM",
  "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT_SYM", "SNAPSHOT_SYM",
  "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SPATIAL_SYM",
  "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM",
  "SQL_AFTER_GTIDS", "SQL_AFTER_MTS_GAPS", "SQL_BEFORE_GTIDS",
  "SQL_BIG_RESULT", "SQL_BUFFER_RESULT", "OBSOLETE_TOKEN_784",
  "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM",
  "SQL_THREAD", "SSL_SYM", "STACKED_SYM", "STARTING", "STARTS_SYM",
  "START_SYM", "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM", "STDDEV_SAMP_SYM", "STD_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRAIGHT_JOIN", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUBSTRING", "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM",
  "SWAPS_SYM", "SWITCHES_SYM", "SYSDATE", "TABLES", "TABLESPACE_SYM",
  "OBSOLETE_TOKEN_820", "TABLE_SYM", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TERMINATED",
  "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM", "TIMESTAMP_SYM",
  "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB_SYM",
  "TINYINT_SYM", "TINYTEXT_SYN", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "OBSOLETE_TOKEN_848", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED_SYM",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALIDATION_SYM", "VALUES", "VALUE_SYM", "VARBINARY_SYM", "VARCHAR_SYM",
  "VARIABLES", "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM",
  "VIRTUAL_SYM", "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "OBSOLETE_TOKEN_893",
  "WITH_ROLLUP_SYM", "WITHOUT_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM",
  "X509_SYM", "XA_SYM", "XID_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM",
  "YEAR_SYM", "ZEROFILL_SYM", "JSON_UNQUOTED_SEPARATOR_SYM", "PERSIST_SYM",
  "ROLE_SYM", "ADMIN_SYM", "INVISIBLE_SYM", "VISIBLE_SYM", "EXCEPT_SYM",
  "COMPONENT_SYM", "RECURSIVE_SYM", "GRAMMAR_SELECTOR_EXPR",
  "GRAMMAR_SELECTOR_GCOL", "GRAMMAR_SELECTOR_PART", "GRAMMAR_SELECTOR_CTE",
  "JSON_OBJECTAGG", "JSON_ARRAYAGG", "OF_SYM", "SKIP_SYM", "LOCKED_SYM",
  "NOWAIT_SYM", "GROUPING_SYM", "PERSIST_ONLY_SYM", "HISTOGRAM_SYM",
  "BUCKETS_SYM", "OBSOLETE_TOKEN_930", "CLONE_SYM", "CUME_DIST_SYM",
  "DENSE_RANK_SYM", "EXCLUDE_SYM", "FIRST_VALUE_SYM", "FOLLOWING_SYM",
  "GROUPS_SYM", "LAG_SYM", "LAST_VALUE_SYM", "LEAD_SYM", "NTH_VALUE_SYM",
  "NTILE_SYM", "NULLS_SYM", "OTHERS_SYM", "OVER_SYM", "PERCENT_RANK_SYM",
  "PRECEDING_SYM", "RANK_SYM", "RESPECT_SYM", "ROW_NUMBER_SYM", "TIES_SYM",
  "UNBOUNDED_SYM", "WINDOW_SYM", "EMPTY_SYM", "JSON_TABLE_SYM",
  "NESTED_SYM", "ORDINALITY_SYM", "PATH_SYM", "HISTORY_SYM", "REUSE_SYM",
  "SRID_SYM", "THREAD_PRIORITY_SYM", "RESOURCE_SYM", "SYSTEM_SYM",
  "VCPU_SYM", "MASTER_PUBLIC_KEY_PATH_SYM", "GET_MASTER_PUBLIC_KEY_SYM",
  "RESTART_SYM", "DEFINITION_SYM", "DESCRIPTION_SYM", "ORGANIZATION_SYM",
  "REFERENCE_SYM", "ACTIVE_SYM", "INACTIVE_SYM", "LATERAL_SYM",
  "ARRAY_SYM", "MEMBER_SYM", "OPTIONAL_SYM", "SECONDARY_SYM",
  "SECONDARY_ENGINE_SYM", "SECONDARY_LOAD_SYM", "SECONDARY_UNLOAD_SYM",
  "RETAIN_SYM", "OLD_SYM", "ENFORCED_SYM", "OJ_SYM",
  "NETWORK_NAMESPACE_SYM", "RANDOM_SYM",
  "MASTER_COMPRESSION_ALGORITHM_SYM", "MASTER_ZSTD_COMPRESSION_LEVEL_SYM",
  "PRIVILEGE_CHECKS_USER_SYM", "MASTER_TLS_CIPHERSUITES_SYM",
  "REQUIRE_ROW_FORMAT_SYM", "PASSWORD_LOCK_TIME_SYM",
  "FAILED_LOGIN_ATTEMPTS_SYM", "REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM",
  "STREAM_SYM", "OFF_SYM", "RETURNING_SYM", "YYUNDEF", "JSON_VALUE_SYM",
  "TLS_SYM", "ATTRIBUTE_SYM", "ENGINE_ATTRIBUTE_SYM",
  "SECONDARY_ENGINE_ATTRIBUTE_SYM", "SOURCE_CONNECTION_AUTO_FAILOVER_SYM",
  "ZONE_SYM", "GRAMMAR_SELECTOR_DERIVED_EXPR", "REPLICA_SYM",
  "REPLICAS_SYM", "ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM",
  "GET_SOURCE_PUBLIC_KEY_SYM", "SOURCE_AUTO_POSITION_SYM",
  "SOURCE_BIND_SYM", "SOURCE_COMPRESSION_ALGORITHM_SYM",
  "SOURCE_CONNECT_RETRY_SYM", "SOURCE_DELAY_SYM",
  "SOURCE_HEARTBEAT_PERIOD_SYM", "SOURCE_HOST_SYM", "SOURCE_LOG_FILE_SYM",
  "SOURCE_LOG_POS_SYM", "SOURCE_PASSWORD_SYM", "SOURCE_PORT_SYM",
  "SOURCE_PUBLIC_KEY_PATH_SYM", "SOURCE_RETRY_COUNT_SYM", "SOURCE_SSL_SYM",
  "SOURCE_SSL_CA_SYM", "SOURCE_SSL_CAPATH_SYM", "SOURCE_SSL_CERT_SYM",
  "SOURCE_SSL_CIPHER_SYM", "SOURCE_SSL_CRL_SYM", "SOURCE_SSL_CRLPATH_SYM",
  "SOURCE_SSL_KEY_SYM", "SOURCE_SSL_VERIFY_SERVER_CERT_SYM",
  "SOURCE_TLS_CIPHERSUITES_SYM", "SOURCE_TLS_VERSION_SYM",
  "SOURCE_USER_SYM", "SOURCE_ZSTD_COMPRESSION_LEVEL_SYM", "ST_COLLECT_SYM",
  "KEYRING_SYM", "CHANGED_PAGE_BITMAPS_SYM", "CLIENT_STATS_SYM",
  "CLUSTERING_SYM", "COMPRESSION_DICTIONARY_SYM", "INDEX_STATS_SYM",
  "TABLE_STATS_SYM", "THREAD_STATS_SYM", "USER_STATS_SYM",
  "ENCRYPTION_KEY_ID_SYM", "EFFECTIVE_SYM", "SEQUENCE_TABLE_SYM",
  "KEYWORD_USED_AS_IDENT", "KEYWORD_USED_AS_KEYWORD", "CONDITIONLESS_JOIN",
  "'|'", "'&'", "'-'", "'+'", "'*'", "'/'", "'%'", "'^'", "'~'",
  "SUBQUERY_AS_EXPR", "'('", "')'", "EMPTY_FROM_CLAUSE", "';'", "'@'",
  "','", "'.'", "':'", "'!'", "'{'", "'}'", "$accept", "start_entry",
  "sql_statement", "$@1", "opt_end_of_input", "simple_statement_or_begin",
  "simple_statement", "deallocate", "deallocate_or_drop", "prepare",
  "prepare_src", "execute", "$@2", "execute_using", "execute_var_list",
  "execute_var_ident", "help", "$@3", "change_replication_source",
  "change", "$@4", "$@5", "filter_defs", "filter_def",
  "opt_filter_db_list", "filter_db_list", "filter_db_ident",
  "opt_filter_db_pair_list", "filter_db_pair_list",
  "opt_filter_table_list", "filter_table_list", "filter_table_ident",
  "opt_filter_string_list", "filter_string_list", "filter_string",
  "source_defs", "change_replication_source_auto_position",
  "change_replication_source_host", "change_replication_source_bind",
  "change_replication_source_user", "change_replication_source_password",
  "change_replication_source_port",
  "change_replication_source_connect_retry",
  "change_replication_source_retry_count",
  "change_replication_source_delay", "change_replication_source_ssl",
  "change_replication_source_ssl_ca",
  "change_replication_source_ssl_capath",
  "change_replication_source_ssl_cipher",
  "change_replication_source_ssl_crl",
  "change_replication_source_ssl_crlpath",
  "change_replication_source_ssl_key",
  "change_replication_source_ssl_verify_server_cert",
  "change_replication_source_tls_version",
  "change_replication_source_tls_ciphersuites",
  "change_replication_source_ssl_cert",
  "change_replication_source_public_key",
  "change_replication_source_get_source_public_key",
  "change_replication_source_heartbeat_period",
  "change_replication_source_compression_algorithm",
  "change_replication_source_zstd_compression_level", "source_def",
  "ignore_server_id_list", "ignore_server_id", "privilege_check_def",
  "table_primary_key_check_def",
  "assign_gtids_to_anonymous_transactions_def",
  "source_tls_ciphersuites_def", "source_log_file", "source_log_pos",
  "source_file_def", "opt_channel", "create_table_stmt",
  "create_role_stmt", "create_resource_group_stmt", "create", "$@6",
  "create_srs_stmt", "srs_attributes", "default_role_clause",
  "create_index_stmt", "create_compression_dictionary_allowed_expr",
  "server_options_list", "server_option", "event_tail", "$@7",
  "ev_schedule_time", "$@8", "opt_ev_status", "ev_starts", "ev_ends",
  "opt_ev_on_completion", "ev_on_completion", "opt_ev_comment",
  "ev_sql_stmt", "$@9", "ev_sql_stmt_inner", "sp_name", "sp_a_chistics",
  "sp_c_chistics", "sp_chistic", "sp_c_chistic", "sp_suid", "call_stmt",
  "opt_paren_expr_list", "sp_fdparam_list", "sp_fdparams", "sp_fdparam",
  "sp_pdparam_list", "sp_pdparams", "sp_pdparam", "sp_opt_inout",
  "sp_proc_stmts", "sp_proc_stmts1", "sp_decls", "sp_decl", "$@10", "$@11",
  "sp_handler_type", "sp_hcond_list", "sp_hcond_element", "sp_cond",
  "sqlstate", "opt_value", "sp_hcond", "signal_stmt", "signal_value",
  "opt_signal_value", "opt_set_signal_information",
  "signal_information_item_list", "signal_allowed_expr",
  "signal_condition_information_item_name", "resignal_stmt",
  "get_diagnostics", "which_area", "diagnostics_information",
  "statement_information", "statement_information_item",
  "simple_target_specification", "statement_information_item_name",
  "condition_number", "condition_information",
  "condition_information_item", "condition_information_item_name",
  "sp_decl_idents", "sp_opt_default", "sp_proc_stmt", "sp_proc_stmt_if",
  "$@12", "sp_proc_stmt_statement", "$@13", "sp_proc_stmt_return", "$@14",
  "sp_proc_stmt_unlabeled", "$@15", "sp_proc_stmt_leave",
  "sp_proc_stmt_iterate", "sp_proc_stmt_open", "sp_proc_stmt_fetch",
  "$@16", "sp_proc_stmt_close", "sp_opt_fetch_noise", "sp_fetch_list",
  "sp_if", "$@17", "$@18", "$@19", "sp_elseifs", "case_stmt_specification",
  "simple_case_stmt", "$@20", "$@21", "searched_case_stmt", "$@22",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@23", "$@24", "searched_when_clause", "$@25",
  "$@26", "else_clause_opt", "sp_labeled_control", "$@27", "sp_opt_label",
  "sp_labeled_block", "$@28", "sp_unlabeled_block", "$@29",
  "sp_block_content", "$@30", "sp_unlabeled_control", "$@31", "$@32",
  "$@33", "$@34", "trg_action_time", "trg_event", "opt_ts_datafile_name",
  "opt_logfile_group_name", "opt_tablespace_options",
  "tablespace_option_list", "tablespace_option",
  "opt_alter_tablespace_options", "alter_tablespace_option_list",
  "alter_tablespace_option", "opt_undo_tablespace_options",
  "undo_tablespace_option_list", "undo_tablespace_option",
  "opt_logfile_group_options", "logfile_group_option_list",
  "logfile_group_option", "opt_alter_logfile_group_options",
  "alter_logfile_group_option_list", "alter_logfile_group_option",
  "ts_datafile", "undo_tablespace_state", "lg_undofile",
  "ts_option_initial_size", "ts_option_autoextend_size",
  "option_autoextend_size", "ts_option_max_size", "ts_option_extent_size",
  "ts_option_undo_buffer_size", "ts_option_redo_buffer_size",
  "ts_option_nodegroup", "ts_option_comment", "ts_option_engine",
  "ts_option_file_block_size", "ts_option_wait", "ts_option_encryption",
  "ts_option_encryption_key_id", "ts_option_engine_attribute",
  "size_number", "opt_create_table_options_etc",
  "opt_create_partitioning_etc", "opt_duplicate_as_qe",
  "as_create_query_expression", "partition_clause", "part_type_def",
  "opt_linear", "opt_key_algo", "opt_num_parts", "opt_sub_part",
  "opt_name_list", "name_list", "opt_num_subparts", "opt_part_defs",
  "part_def_list", "part_definition", "opt_part_values", "part_func_max",
  "part_values_in", "part_value_list", "part_value_item_list_paren",
  "$@35", "part_value_item_list", "part_value_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "opt_part_options",
  "part_option_list", "part_option", "alter_database_options",
  "alter_database_option", "opt_create_database_options",
  "create_database_options", "create_database_option", "opt_if_not_exists",
  "create_table_options_space_separated", "create_table_options",
  "opt_comma", "create_table_option", "ternary_option", "default_charset",
  "default_collation", "default_encryption", "row_types",
  "merge_insert_types", "udf_type", "table_element_list", "table_element",
  "column_def", "opt_references", "table_constraint_def",
  "check_constraint", "opt_constraint_name", "opt_not",
  "opt_constraint_enforcement", "constraint_enforcement", "field_def",
  "opt_generated_always", "opt_stored_attribute", "type", "spatial_type",
  "nchar", "varchar", "nvarchar", "int_type", "real_type", "opt_PRECISION",
  "numeric_type", "standard_float_options", "float_options", "precision",
  "type_datetime_precision", "func_datetime_precision", "field_options",
  "field_opt_list", "field_option", "field_length", "opt_field_length",
  "opt_precision", "opt_column_attribute_list", "column_attribute_list",
  "column_attribute", "opt_with_compression_dictionary", "column_format",
  "storage_media", "now", "now_or_signed_literal", "character_set",
  "charset_name", "opt_load_data_charset", "old_or_new_charset_name",
  "old_or_new_charset_name_or_default", "collation_name", "opt_collate",
  "opt_default", "ascii", "unicode", "opt_charset_with_opt_binary",
  "opt_bin_mod", "ws_num_codepoints", "$@36", "opt_primary", "references",
  "opt_ref_list", "reference_list", "opt_match_clause",
  "opt_on_update_delete", "delete_option", "constraint_key_type",
  "key_or_index", "opt_key_or_index", "keys_or_index",
  "opt_unique_combo_clustering", "unique_combo_clustering",
  "opt_fulltext_index_options", "fulltext_index_options",
  "fulltext_index_option", "opt_spatial_index_options",
  "spatial_index_options", "spatial_index_option", "opt_index_options",
  "index_options", "index_option", "common_index_option",
  "opt_index_name_and_type", "opt_index_type_clause", "index_type_clause",
  "visibility", "index_type", "key_list", "key_part",
  "key_list_with_expression", "key_part_with_expression", "opt_ident",
  "opt_component", "string_list", "alter_table_stmt",
  "alter_database_stmt", "$@37", "alter_procedure_stmt", "$@38",
  "alter_function_stmt", "$@39", "alter_view_stmt", "$@40", "$@41",
  "alter_event_stmt", "$@42", "alter_logfile_stmt",
  "alter_tablespace_stmt", "alter_undo_tablespace_stmt",
  "alter_server_stmt", "alter_user_stmt", "opt_replace_password",
  "alter_resource_group_stmt", "alter_user_command", "opt_user_attribute",
  "opt_account_lock_password_expire_options",
  "opt_account_lock_password_expire_option_list",
  "opt_account_lock_password_expire_option", "connect_options",
  "connect_option_list", "connect_option", "user_func",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "opt_alter_table_actions",
  "standalone_alter_table_action", "alter_table_partition_options",
  "opt_alter_command_list", "standalone_alter_commands",
  "opt_with_validation", "with_validation", "all_or_alt_part_name_list",
  "alter_list", "alter_commands_modifier_list", "alter_list_item",
  "alter_commands_modifier", "opt_index_lock_and_algorithm",
  "alter_algorithm_option", "alter_algorithm_option_value",
  "alter_lock_option", "alter_lock_option_value", "opt_column",
  "opt_ignore", "opt_restrict", "opt_place", "opt_to", "group_replication",
  "group_replication_start", "opt_group_replication_start_options",
  "group_replication_start_options", "group_replication_start_option",
  "group_replication_user", "group_replication_password",
  "group_replication_plugin_auth", "replica", "stop_replica_stmt",
  "start_replica_stmt", "$@43", "$@44", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "opt_user_option", "opt_password_option",
  "opt_default_auth_option", "opt_plugin_dir_option",
  "opt_replica_thread_option_list", "replica_thread_option_list",
  "replica_thread_option", "opt_replica_until", "replica_until",
  "checksum", "opt_checksum_type", "repair_table_stmt",
  "opt_mi_repair_types", "mi_repair_types", "mi_repair_type",
  "analyze_table_stmt", "opt_num_buckets", "opt_histogram",
  "binlog_base64_event", "check_table_stmt", "opt_mi_check_types",
  "mi_check_types", "mi_check_type", "optimize_table_stmt",
  "opt_no_write_to_binlog", "rename", "$@45", "rename_list",
  "table_to_table_list", "table_to_table", "keycache_stmt",
  "keycache_list", "assign_to_keycache", "key_cache_name", "preload_stmt",
  "preload_list", "preload_keys", "adm_partition", "opt_cache_key_list",
  "opt_ignore_leaves", "select_stmt", "select_stmt_with_into",
  "query_expression", "query_expression_body", "query_expression_parens",
  "query_primary", "query_specification", "opt_from_clause", "from_clause",
  "from_tables", "table_reference_list", "table_value_constructor",
  "explicit_table", "select_options", "select_option_list",
  "select_option", "locking_clause_list", "locking_clause",
  "lock_strength", "table_locking_list", "opt_locked_row_action",
  "locked_row_action", "select_item_list", "select_item", "select_alias",
  "optional_braces", "expr", "bool_pri", "predicate", "opt_of", "bit_expr",
  "or", "and", "not", "not2", "comp_op", "all_or_any", "simple_expr",
  "opt_array_cast", "function_call_keyword", "function_call_nonkeyword",
  "opt_returning_type", "function_call_conflict", "geometry_function",
  "function_call_generic", "fulltext_options", "opt_natural_language_mode",
  "opt_query_expansion", "opt_udf_expr_list", "udf_expr_list", "udf_expr",
  "set_function_specification", "sum_expr", "window_func_call",
  "opt_lead_lag_info", "stable_integer", "param_or_var", "opt_ll_default",
  "opt_null_treatment", "opt_from_first_last", "opt_windowing_clause",
  "windowing_clause", "window_name_or_spec", "window_name", "window_spec",
  "window_spec_details", "opt_existing_window_name",
  "opt_partition_clause", "opt_window_order_by_clause",
  "opt_window_frame_clause", "window_frame_extent", "window_frame_start",
  "window_frame_between", "window_frame_bound",
  "opt_window_frame_exclusion", "window_frame_units", "grouping_operation",
  "variable", "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "gorder_list", "in_sum_expr", "cast_type",
  "opt_expr_list", "expr_list", "ident_list_arg", "ident_list", "opt_expr",
  "opt_else", "when_list", "table_reference", "esc_table_reference",
  "joined_table", "natural_join_type", "inner_join_type",
  "outer_join_type", "opt_inner", "opt_outer", "opt_use_partition",
  "use_partition", "table_factor", "table_reference_list_parens",
  "single_table_parens", "single_table", "joined_table_parens",
  "derived_table", "table_function", "columns_clause", "columns_list",
  "jt_column", "jt_column_type", "opt_on_empty_or_error",
  "opt_on_empty_or_error_json_table", "on_empty", "on_error",
  "json_on_response", "index_hint_clause", "index_hint_type",
  "index_hint_definition", "index_hints_list", "opt_index_hints_list",
  "opt_key_definition", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "ident_string_list", "interval",
  "interval_time_stamp", "date_time_type", "opt_as", "opt_table_alias",
  "opt_all", "opt_where_clause", "where_clause", "opt_having_clause",
  "with_clause", "with_list", "common_table_expr",
  "opt_derived_column_list", "simple_ident_list", "opt_window_clause",
  "window_definition_list", "window_definition", "opt_group_clause",
  "group_list", "olap_opt", "alter_order_list", "alter_order_item",
  "opt_order_clause", "order_clause", "order_list",
  "opt_ordering_direction", "ordering_direction", "opt_limit_clause",
  "limit_clause", "limit_options", "limit_option", "opt_simple_limit",
  "ulong_num", "real_ulong_num", "ulonglong_num", "real_ulonglong_num",
  "dec_num_error", "dec_num", "select_var_list", "select_var_ident",
  "into_clause", "into_destination", "do_stmt", "drop_table_stmt",
  "drop_index_stmt", "drop_database_stmt", "drop_function_stmt",
  "drop_resource_group_stmt", "drop_procedure_stmt", "drop_user_stmt",
  "drop_view_stmt", "drop_event_stmt", "drop_trigger_stmt",
  "drop_tablespace_stmt", "drop_undo_tablespace_stmt", "drop_logfile_stmt",
  "drop_server_stmt", "drop_srs_stmt", "drop_role_stmt", "table_list",
  "table_alias_ref_list", "if_exists", "opt_temporary",
  "opt_drop_ts_options", "drop_ts_option_list", "drop_ts_option",
  "insert_stmt", "replace_stmt", "insert_lock_option",
  "replace_lock_option", "opt_INTO", "insert_from_constructor",
  "insert_query_expression", "fields", "insert_values",
  "query_expression_or_parens", "value_or_values", "values_list",
  "values_row_list", "equal", "opt_equal", "row_value",
  "row_value_explicit", "opt_values", "values", "expr_or_default",
  "opt_values_reference", "opt_insert_update_list", "update_stmt",
  "opt_with_clause", "update_list", "update_elem", "opt_low_priority",
  "delete_stmt", "opt_wild", "opt_delete_options", "opt_delete_option",
  "truncate_stmt", "opt_table", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_for_query", "show_databases_stmt",
  "show_tables_stmt", "show_triggers_stmt", "show_events_stmt",
  "show_table_status_stmt", "show_open_tables_stmt", "show_plugins_stmt",
  "show_engine_logs_stmt", "show_engine_mutex_stmt",
  "show_engine_status_stmt", "show_columns_stmt", "show_binary_logs_stmt",
  "show_replicas_stmt", "show_binlog_events_stmt",
  "show_relaylog_events_stmt", "show_keys_stmt", "show_engines_stmt",
  "show_count_warnings_stmt", "show_count_errors_stmt",
  "show_warnings_stmt", "show_errors_stmt", "show_profiles_stmt",
  "show_profile_stmt", "show_status_stmt", "show_processlist_stmt",
  "show_variables_stmt", "show_character_set_stmt", "show_collation_stmt",
  "show_privileges_stmt", "show_grants_stmt", "show_create_database_stmt",
  "show_create_table_stmt", "show_create_view_stmt",
  "show_master_status_stmt", "show_replica_status_stmt", "show_stats_stmt",
  "show_create_procedure_stmt", "show_create_function_stmt",
  "show_create_trigger_stmt", "show_procedure_status_stmt",
  "show_function_status_stmt", "show_procedure_code_stmt",
  "show_function_code_stmt", "show_create_event_stmt",
  "show_create_user_stmt", "engine_or_all", "master_or_binary",
  "opt_storage", "opt_db", "opt_full", "opt_extended", "opt_show_cmd_type",
  "from_or_in", "opt_binlog_in", "binlog_from", "opt_wild_or_where",
  "describe_stmt", "explain_stmt", "explainable_stmt", "describe_command",
  "opt_explain_format_type", "opt_explain_analyze_type",
  "opt_describe_column", "flush", "$@46", "flush_options", "$@47",
  "opt_flush_lock", "$@48", "flush_options_list", "flush_option",
  "opt_table_list", "reset", "$@49", "reset_options",
  "opt_if_exists_ident", "reset_option", "$@50", "$@51", "$@52",
  "opt_replica_reset_options", "source_reset_options", "purge", "$@53",
  "purge_options", "purge_option", "kill", "kill_option", "use",
  "load_stmt", "data_or_xml", "opt_local", "load_data_lock",
  "opt_duplicate", "duplicate", "opt_field_term", "field_term_list",
  "field_term", "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "signed_literal_or_null", "null_as_literal", "literal",
  "literal_or_null", "NUM_literal", "int64_literal", "temporal_literal",
  "opt_interval", "insert_ident", "table_wild", "order_expr",
  "grouping_expr", "simple_ident", "simple_ident_nospvar",
  "simple_ident_q", "table_ident", "table_ident_opt_wild", "IDENT_sys",
  "TEXT_STRING_sys_nonewline", "filter_wild_db_table_string",
  "TEXT_STRING_sys", "TEXT_STRING_literal", "TEXT_STRING_filesystem",
  "TEXT_STRING_password", "TEXT_STRING_hash", "TEXT_STRING_validated",
  "ident", "role_ident", "label_ident", "lvalue_ident", "ident_or_text",
  "role_ident_or_text", "user_ident_or_text", "user", "role", "schema",
  "ident_keyword", "ident_keywords_ambiguous_1_roles_and_labels",
  "ident_keywords_ambiguous_2_labels", "label_keyword",
  "ident_keywords_ambiguous_3_roles", "ident_keywords_unambiguous",
  "role_keyword", "lvalue_keyword",
  "ident_keywords_ambiguous_4_system_variables", "set",
  "start_option_value_list", "set_role_stmt", "opt_except_role_list",
  "set_resource_group_stmt", "thread_id_list", "thread_id_list_options",
  "start_option_value_list_following_option_type",
  "option_value_list_continued", "option_value_list", "option_value",
  "option_type", "opt_var_type", "opt_var_ident_type",
  "opt_set_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "internal_variable_name",
  "transaction_characteristics", "transaction_access_mode",
  "opt_transaction_access_mode", "isolation_level", "opt_isolation_level",
  "transaction_access_mode_types", "isolation_types",
  "set_expr_or_default", "lock", "lock_variant", "$@54", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock",
  "unlock_variant", "shutdown_stmt", "restart_server_stmt",
  "alter_instance_stmt", "alter_instance_action", "handler_stmt",
  "handler_scan_function", "handler_rkey_function", "handler_rkey_mode",
  "revoke", "$@55", "grant", "$@56", "opt_acl_type", "opt_privileges",
  "role_or_privilege_list", "role_or_privilege", "opt_with_admin_option",
  "opt_and", "require_list", "require_list_element", "grant_ident",
  "user_list", "role_list", "opt_retain_current_password",
  "opt_discard_old_password", "create_user", "alter_user",
  "create_user_list", "alter_user_list", "opt_column_list", "column_list",
  "require_clause", "grant_options", "opt_grant_option", "opt_with_roles",
  "opt_grant_as", "begin_stmt", "$@57", "opt_work", "opt_chain",
  "opt_release", "opt_savepoint", "commit", "rollback", "savepoint",
  "release", "union_option", "row_subquery", "table_subquery", "subquery",
  "query_spec_option", "init_lex_create_info",
  "view_or_trigger_or_sp_or_event", "definer_tail", "no_definer_tail",
  "definer_opt", "no_definer", "definer", "view_replace_or_algorithm",
  "view_replace", "view_algorithm", "view_suid", "view_tail", "$@58",
  "view_query_block", "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@59", "udf_tail",
  "sf_tail", "$@60", "$@61", "$@62", "$@63", "sp_tail", "$@64", "$@65",
  "$@66", "$@67", "xa", "opt_convert_xid", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend", "install",
  "uninstall", "TEXT_STRING_sys_list", "import_stmt", "clone_stmt",
  "opt_datadir_ssl", "opt_ssl", "resource_group_types",
  "opt_resource_group_vcpu_list", "vcpu_range_spec_list",
  "vcpu_num_or_range", "signed_num", "opt_resource_group_priority",
  "opt_resource_group_enable_disable", "opt_force", "json_attribute", YY_NULLPTR
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,  1352,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,   794,   795,
     796,   797,   798,   799,   800,   801,   802,   803,   804,   805,
     806,   807,   808,   809,   810,   811,   812,   813,   814,   815,
     816,   817,   818,   819,   820,   821,   822,   823,   824,   825,
     826,   827,   828,   829,   830,   831,   832,   833,   834,   835,
     836,   837,   838,   839,   840,   841,   842,   843,   844,   845,
     846,   847,   848,   849,   850,   851,   852,   853,   854,   855,
     856,   857,   858,   859,   860,   861,   862,   863,   864,   865,
     866,   867,   868,   869,   870,   871,   872,   873,   874,   875,
     876,   877,   878,   879,   880,   881,   882,   883,   884,   885,
     886,   887,   888,   889,   890,   891,   892,   893,   894,   895,
     896,   897,   898,   899,   900,   901,   902,   903,   904,   905,
     906,   907,   908,   909,   910,   911,   912,   913,   914,   915,
     916,   917,   918,   919,   920,   921,   922,   923,   924,   925,
     926,   927,   928,   929,   930,   931,   932,   933,   934,   935,
     936,   937,   938,   939,   940,   941,   942,   943,   944,   945,
     946,   947,   948,   949,   950,   951,   952,   953,   954,   955,
     956,   957,   958,   959,   960,   961,   962,   963,   964,   965,
     966,   967,   968,   969,   970,   971,   972,   973,   974,   975,
     976,   977,   978,   979,   980,   981,   982,   983,   984,   985,
     986,   987,   988,   989,   990,   991,   992,   993,   994,   995,
     996,   997,   998,   999,  1150,  1151,  1152,  1153,  1154,  1155,
    1156,  1157,  1158,  1159,  1160,  1161,  1162,  1163,  1164,  1165,
    1166,  1167,  1168,  1169,  1170,  1171,  1172,  1173,  1174,  1175,
    1176,  1177,  1178,  1179,  1180,  1181,  1182,  1183,  1184,  1185,
    1186,  1187,  1188,  1189,  1190,  1300,  1301,  1302,  1303,  1304,
    1305,  1306,  1307,  1308,  1350,  1351,  1353,  1354,  1355,   124,
      38,    45,    43,    42,    47,    37,    94,   126,  1356,    40,
      41,  1357,    59,    64,    44,    46,    58,    33,   123,   125
};
# endif

#define YYPACT_NINF -4697

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-4697)))

#define YYTABLE_NINF -3043

#define yytable_value_is_error(Yytable_value) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
    7332,  3200,   934, -4697,   -78,   272, 72241,  1476,  2059,  2059,
    -123,  2580, -4697, -4697, -4697, 12592,  4116, -4697, 72241,   934,
     653, 48541, 72241, -4697,   696,  2149,  1087,   314,   296,  1138,
     934, 72241, -4697,    41,  2166,   934,  1990,   668, 64341, 49331,
    -123, 72241,  3216, 30352, 88793, -4697, 64341,   119,   181, 72241,
     768,  1269,  1160, 72241,  1046, 65131,  2333, 22360,  2029,  1471,
     954,  2165, -4697, 16662,  1453,  1891, -4697,  1822, -4697, -4697,
    1599, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, 56441, -4697,   678,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697,  2090,    51,  1964, -4697, -4697, -4697,
   -4697,  -105, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697,   223, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, 65921, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
    1966, 72241,  2147, 72241,  1535,  2070, 72241, 62761, 72241, 72241,
    1765,  2105,  2181,  2197, -4697, -4697,  2271, -4697, -4697,  2059,
    -123, -4697, -4697, 72241, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697,  1665, -4697,  1612, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697,   964,  1906, -4697, -4697, 72241, 72241, -4697,  2475,
    2283,  2272,  2321,  2101, 62761,   330, 72241, -4697,  1999,   257,
    2283,  2283,  2362,  1032,  2283,  2364, -4697,  2015, -4697, -4697,
   -4697,  2271,  2611, -4697,  1845,  1854,  1859, 22360, -4697,  1870,
    1872,  1883, 16662,  1895,  1941,  1955,  1958,  1965,  1973,  1979,
    2014,  2014,  2030,  2071,  2088,  2099,  -131,  2143, -4697,  2164,
     954,  2185, -4697, -4697,  2196,  2199,  2205,  2210, -4697,  2223,
    2258,  2286, 17476,  2300,  2308, -4697, 41425,  2324,  2330,  2335,
    2352,  2366,  2375,  2381,  2386,  2388, -4697, -4697, 16662,  2030,
   -4697, -4697, -4697,  2414,  2437,  2442,  2448,  2458,  2466,  2490,
    2500,  2507,  2519,  2521,  2524,  2533,  2538,  2539,  2553,  2030,
   -4697,   775,  2554,  2555,   839,  2584, -4697,  2589, -4697,   517,
    2612,  2014,  2030,  2030,  2614,  2631,  2636,  2642,  2647,  2653,
    2664,  2678,  2679,  2684,  2694,  2699,  2702,  2710,  2711,  2712,
    2714,  2718,  2722,  2723,  2724,  2741, 22360, 22360, -4697, 22360,
   10964, 31143, -4697, 72241, -4697, -4697,  1986, -4697, 51701,  4382,
   -4697,  2973, 22360,  1092, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697,  2222, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697,   998, -4697,  2743,  1993, -4697, -4697,  2105,
    2105,  2105, 72241,  2630,  2105,  2105,  2132, 72241,  2105,  2292,
    2105,  2105,  2105,  2657,  2105,  2059, -4697, -4697, -4697, -4697,
    2815,  2557,  2577,  2986, -4697,  2411, -4697, -4697, -4697,  2785,
   -4697,  2746, -4697,  2518, -4697,  2823,  2746, -4697,   250,  2746,
     365, -4697, -4697, -4697,  2746, -4697, -4697, -4697, -4697,  1726,
   -4697, -4697, -4697, -4697,   966, -4697,  2860,   146, 62761,  3017,
   -4697, -4697, -4697,  3023, 72241,   -78, -4697, -4697, 16662, -4697,
    3108, -4697,   354,  3075,  3344, -4697, -4697,  2059,  3362,   191,
   72241, 57231, -4697,  2059, -4697, -4697,  3314, -4697,    90,  1219,
    2945, -4697, -4697,  3061, -4697,  2557,  3189,    98,   248, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, 12592,
    3216, -4697, -4697,    58,  3067,  1291, -4697, -4697, 52491,  1276,
   -4697,  1526, -4697, 76191, -4697,  3361, 31934, 54071, -4697,  2759,
   -4697, -4697, -4697, -4697, -4697, -4697, 74611,  2764,   224, -4697,
    3413, -4697,   100,  2771,  2982,   100, 58021,  3305,  1489,   575,
     501,   267, -4697,  3391, -4697,  3045,  3026, -4697, -4697,   532,
    3018, -4697,  3423, -4697,  3369, -4697,  3052,  3305, -4697, -4697,
     100,   100,   100,   100,   100,  3384,   100,  3057,  3315,  3443,
     804,  2528,   541,   -52,  3061, -4697, -4697,   -16,    50, -4697,
      50, -4697,  2795, -4697, 72241, 72241,   -78, -4697, -4697, -4697,
   -4697,  2805,  2803, -4697, 72241,  2804, -4697,  2816, -4697,   573,
     573,   573,  3528,   573, -4697,   573,  3185,  2811,  2820,  3582,
    3476,  2674,  3477, -4697,  3437,  3524,  2280,  2828,   241,  1437,
    -105, -4697, -4697,  2829, 72241,  2014, -4697,  2839,  1137, -4697,
   -4697,  2836, -4697,  2482, -4697,   827,  3497,  3498,  3499, -4697,
    2849, -4697, -4697, -4697, -4697,   -17, 29561,  3418,  2090, -4697,
     331,  3625,   457,  3305, -4697, 54861,   457,  3305, -4697, -4697,
      51,  1452,  1618,  3381,  3482,  3520, -4697,  1467, 58811,  1538,
   -4697, -4697, 57231, -4697, 72241, 72241,  1317, 62761, -4697, 72241,
   -4697,  3300,  2706,  9004, 72241,  3514, -4697, 72241, 72241,  3154,
   -4697, 72241, -4697,    22, -4697,  1643, 16662, -4697, 72241, -4697,
   -4697, -4697,    56, -4697,   165,  1099,   178,  1381, 72241, 72241,
   72241,  3175,  3502, 72241,  2989,  3694, 72241, -4697,  3439, 57231,
   79351, 72241, -4697,  3440, 72241, 72241,  2283,   590,  1877, -4697,
   -4697, 16662, 16662,   458,  3633,  3692,  3692,  3692,  2441,  3073,
   16662, 16662, 16662, 16662, 16662, 16662,   481,  2899, -4697, -4697,
     -48, -4697,  2900, 16662, 16662, -4697, 16662, 16662, 72241, -4697,
    5472, 16662, 16662,  1282,  3574, 16662, 16662, 16662, 10964,  4765,
   16662, 16662, 72241,  3706,  2903, -4697,  2913,  1201, 16662, 16662,
    1924, 16662, 16662, 16662, 16662, 16662, -4697, -4697, 16662, 16662,
   22360, 16662, 16662, 16662, 16662, 16662, 16662,  2908, 16662,  3692,
    3692, 16662, 16662,  2012, -4697, -4697, 16662,  4014,  4014, -4697,
   16662, 11778, 16662, -4697, -4697, -4697,  2919, -4697, -4697, -4697,
   72241,  3692,  3692, 16662, 16662, 16662,  3692,  3692, 16662,  2922,
    2929, 16662, 16662, 16662, 16662, 16662, 28770,  2930,  2931,  2942,
   22360,  2365,  3633,  3633,  3633,   700,   227,   913,   229,  1480,
   -4697,  3230, 16662, 16662, -4697, -4697, 66711, -4697, -4697, -4697,
   16662, -4697, 16662, 16662, -4697, -4697, -4697, -4697, -4697, -4697,
    2480, -4697, -4697, -4697, 18290, 22360, 22360,  2949, 22360, 22360,
   -4697, -4697, 22360, 22360, 22360,  3495,  3102, 22360, 22360, 23174,
   23988, 22360, 22360, 22360, 22360,  2383,  3633, 62761, 22360, -4697,
   -4697,  2222,  2222, 16662, 44585, 72241, 72241, 72241,  3394, 72241,
   72241, 62761,  3072,  1495, 72241, 72241, 57231, 72241, 79351, 72241,
   72241,  2105,  3170,  4208, 34307, -4697, -4697, -4697, -4697, -4697,
    3223, -4697, -4697, -4697, -4697, -4697, 72241, -4697, -4697, 57231,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, 62761, -4697,  1211,
   57231, 50121,   175, -4697, 73031, 72241, -4697,   -78, -4697,  3314,
    3271, -4697,  2984,  2441,  3737, -4697, -4697,  3519,  3766,  3770,
   72241, 72241,  -126, -4697,  3772,  3517, -4697, -4697,  2992,  3225,
   72241, 72241, -4697, 72241, 72241, -4697, -4697, -4697, -4697, -4697,
    2994, -4697, -4697,  2222,  4478, -4697,  2996, 57231, 57231,  1211,
    3326,   178,   104, -4697, -4697, 77771, 72241, -4697, -4697, -4697,
   -4697,  3742, 16662, -4697, 57231,  3082,  3245,  3545,    79, -4697,
    3005,  3014, -4697,  3172, -4697, -4697,  3020, -4697,  3016, 72241,
    1667,   224, -4697, -4697, -4697, -4697, -4697, 72241,  3022,  1526,
   -4697,  2764,   224, 32725, -4697, 10150,  3587,  2222, 16662, -4697,
   -4697,  3028,  2283, 72241, 72241, 72241, 72241, 72241, 57231, 72241,
   -4697, -4697,  1372, -4697, -4697, -4697, -4697, -4697,   100, 72241,
   -4697, 72241,   100, 57231, -4697,  1489, 72241,   100, -4697,  3594,
    3287, -4697, -4697, -4697,  3669, -4697, -4697,  3658,  3040, -4697,
    3587, -4697,  1489, -4697, -4697, -4697, -4697, -4697, -4697,  3661,
   -4697,  3662, -4697, -4697, -4697,  1489, -4697, -4697, -4697,  1489,
    1489,  1489,   100,   100, -4697,   811,  3773, -4697,  3044, -4697,
   -4697, -4697, -4697,  3048, -4697,  3662, -4697, -4697,  2984, 19104,
    1046,  2804, 72241, 72241,  3842, -4697, -4697,  3050, -4697,  3488,
    3309, -4697,  3226, -4697, -4697,   228, -4697, 72241, 16662,  2444,
   -4697,   913, -4697, 57231,  3732, -4697, -4697, -4697,   284, -4697,
    3716, -4697, -4697,  3066,  3160,  3841, 62761,  3239,  3165,   193,
   -4697,  1508, 57231,  3260,   -78,   -78,   -78,   678, -4697, -4697,
    2368,  3328,  3328, 62761,  3083, -4697, -4697, -4697,  3406, -4697,
   -4697,   331, 16662, -4697, -4697,  -105, -4697, -4697, -4697, -4697,
   -4697,   -27, -4697, -4697,  -105, -4697,  3305,  3305, -4697, -4697,
   -4697, -4697, 67501,  1618,  3023,  3520, -4697, 62761,  3824, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697,   274, -4697, -4697, 72241, 72241,   275, -4697,   857,  3905,
   -4697,  3104,  3807,   224,   224,  3807,   224,   224, -4697,  3337,
   -4697,   224,   224,   153, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697,  3763,  3122,   224,  2460,  3522,   224,
     224,  3850,   224,  3525,  3526,   224,   224,   224,   224,  3345,
    3792, -4697,   224,  3668,  1304,  4286,  3670,   224,  3533, -4697,
    1310,  3800,   224,   224,   224,   224,   224,  3850,  3537,  3890,
     224,   224,  3540,   534,  3541,  3542,   224,  3359,   224,   224,
     224,   329,   224,   224,  3555,   224,  3327,  3338,   224, -4697,
   -4697,   224,   224,   224, -4697,  7326, -4697, -4697, -4697,  2547,
   -4697, -4697,   115, -4697, -4697,  3130,  3143, -4697, -4697, -4697,
   -4697,  3459, -4697,  3251, -4697,  3470,  3335, -4697,  3154,    89,
   68291, 72241, -4697, -4697,  3156,  3157,   287, -4697,  2441,  3153,
    3150, -4697,  3332, 89144, -4697, -4697, 72241, -4697, -4697, -4697,
   -4697,  3358, -4697, -4697, -4697, -4697,  3291, -4697,  3913,  3529,
   -4697, -4697,  3801, -4697,  3600,  3964,  3262,  3870,  3606,  2283,
    3807,  3379,  3987, -4697,  3768, -4697,    91,  3016,  3407, -4697,
    3190,   -38, 72241,  3811,  2283, 72241, 72241, 72241, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, 72241, -4697, -4697, -4697, -4697,
   -4697, -4697,  3154,   307,   273, -4697,  3692,  3191, 16662,  3202,
    3203,  3207, 16662,   137,  1929,   617,  1638,  1831,   627,   286,
   16662,  3209, 13406, -4697,  3211, -4697, -4697,   338,   372,   927,
    1261,  3212, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697,  3803, -4697,   407,  3213, -4697, -4697, -4697, -4697,
    3210, -4697, 16662,  1287,   409,   454,   288,  3224,   464,  1912,
    1970,  3218, 72241, 72241,  3692,  3219,  1299,  1365,  3692,  3220,
     480,  1470,  1991,  2027,  2039,   485,  2046,  3246,  1507,   510,
     515,  1521,   524,   538, -4697,  1552,  3221,  3222,   562,   303,
    3692,  3227,   324,  3229,  3240,  1584, 14220, 15034, 15848,   251,
     577, -4697,  3228, -4697,  2913,  3231,  3234,   333,   217,  1645,
    3241,  3243,  2053,  3346,  3346,  1661,   604,  1687,   604,   612,
   62761,  3247, -4697, -4697, -4697, -4697,  3346,  3346,  3346,   156,
    3692,  3248,   294, -4697, 16662,  3244,  3250,  3252, 62761, 16662,
     186, -4697, -4697, -4697,  2921,   281, -4697, -4697, -4697, -4697,
   -4697,  1051, -4697,  3254, -4697,   954,  1897,  3233, 10964, -4697,
    1254,  3233,  4033,  2175,  2175, 22360, -4697,  3257,  3021,  3100,
   17476,  2242, 17476,  2242,  3233,  3233,  3233, -4697, 22360,  3263,
   22360, 22360, -4697,  3633, -4697, -4697, 51701,  3259,  3242, -4697,
   -4697,  -257, -4697, -4697,  3258, 72241,  1495, -4697, -4697,  2105,
   -4697, -4697, -4697,   255, -4697, -4697,  1135, -4697,  3261,   159,
    3016,  3844, -4697, 72241,  3264, -4697,  3746,  3747,  3753,  3787,
   -4697, -4697,  3638, -4697, -4697,  3789, -4697,  3791, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697,  3265, -4697, 72241, 27979,
   62761, -4697,  3266, -4697,  3922, -4697,  3708, -4697, -4697,  2058,
    3505, -4697, -4697, -4697, -4697, 45375,  -181, -4697, -4697, 72241,
   -4697,   117,   392,  4266,  3454, -4697,  2984, 72241,   -78,   -78,
   72241, -4697,  3854, -4697, -4697,   311,  3279, -4697,  3281, 62761,
   -4697, -4697,  1159,   297, 57231, 57231,  3283, -4697,  3516,   239,
    3696, -4697,  3521,  4086,  4086,  1219, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,  3288,
    3944,  3897,  3731,  3912,  3261, 45375, -4697, 72241, -4697, 25598,
    3454, -4697,  3914,  3530,  3531,  -151, -4697, 59601, -4697,  2441,
    1117,  3655, -4697,  3655,  2198, -4697, -4697,  3865, -4697,  3689,
   -4697, 79351, -4697, 62761, 79351,  3928,  3308,  3310,  3311,  3317,
    3318, 75401, 16662, -4697, -4697, -4697, 10150,  3323, -4697, 75401,
   -4697, -4697, 22360,  2164, -4697, -4697,  2507, -4697,  2441, -4697,
     -78,  3927, -4697,  2441,  3319, 72241, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
    3534,   100, -4697, -4697, -4697, -4697, -4697,  3711,  3305,  3018,
    3927,   100, 57231,  4083, -4697,   100, 72241, 72241,   100, -4697,
   -4697, -4697, -4697,  3634,   -16,  3547,    50, -4697,  2164,  2441,
    3350,  3357, -4697, -4697, -4697,  2065, -4697,   954,   573,  3769,
   -4697,  3984, -4697, -4697, -4697, -4697, -4697,  1367,  1696, -4697,
     155,   172,  3778,  1914,  3365,   224, -4697, -4697, -4697, -4697,
    3780,  1232, -4697, 78561,  3784,  1308, 62761,  3620,  3621, -4697,
   -4697,  3622, -4697, -4697,  1633,  1586, -4697,  2730,   258, -4697,
   -4697, -4697, -4697, -4697, 72241,  3535, -4697,  2069, -4697, -4697,
   -4697, -4697,  2896, -4697, 33516,  3853,  1265,  3387, -4697, -4697,
   -4697, 54861, 54861, -4697, -4697, -4697, -4697, 72241,   105, -4697,
    3395, -4697, 26394, -4697,  2527,  3833,    69, -4697, -4697, -4697,
   -4697, -4697,  2735,  2377, -4697, -4697,  4153,  3738,  3953,  3954,
    3623,  2377,  2451,   -78,  2778, -4697,  1694,   -78,  2778,  1694,
    1694, 72241,   -78,  2527, -4697,  2707,   224, -4697, 72241,   287,
     934,   287, -4697,   221, 72241, 42215, 69081, 72241, 72241, 72241,
   72241,   934,  1604,  3054, 72241,  3054, 69871,   934,   -78,   -78,
     -78,   -78,  2896,   224,  3054, -4697, 69871, -4697, 72241, 72241,
    3955, 72241,  3956, 72241, 72241, -4697, 62761, 72241, 69871, -4697,
     224,  1969,   -33, 70661,  1604,  1604, 72241,   934, 72241,  2801,
     -78,   934, -4697, 72241, -4697, -4697, 72241, 72241,   934,   934,
    3136, -4697,  2801,  2801,  2834, -4697, -4697, 72241,  3054, 69871,
    3412, -4697, -4697, 60391,   -78,   -78,  2527, -4697,   224,   224,
    3820, -4697, -4697,  7951,  9235,  2267,   224,  3523,  3846,   378,
   72241, -4697,  3553,  3556, -4697, -4697, -4697, -4697, -4697,   287,
   69871, 71451,  3982, -4697, 16662,  4073,  4078,  4079,  4081,  4082,
    4084,  4085,    49, -4697,  4087, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697,  4095,  4099, -4697,
   -4697,  4111, -4697, -4697,  4113, -4697,  4115,  4118,  4119,  4121,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697,    70,  4122,  4124,
    4125,  4127,  4128,  4131,  4133,  4136,  4140,  4141,  4143,  4144,
    4145,  4147,  4148,  4157,  4159,  4160,  4161,  4162,  4163,  4168,
    4169,  4170,  4171, -4697,  4172,  4174, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697,   205, 72241,  3623,  3605,  3649, 72241,  1159,
   -4697,  4050,  2934,  3807,   218,  3685, 57231,  3876,   224,  1487,
    1500,  1500,  3967, -4697,  6203, 72241, 72241,  3532,   855, -4697,
    1314, -4697, 19918, -4697,  3536,  3346,  2441,  3346,  3346,  3346,
    1899, 16662, 16662,  4191,  5212,  1123, -4697, 61181, -4697, -4697,
   -4697, 61181,  5212,  2086,  3346,  3551, -4697,  4109,  4117, -4697,
   -4697, -4697, 16662, 16662, -4697, 16662,   355, -4697, 16662, 16662,
   16662, 16662, 16662, -4697, -4697, 22360, -4697,  3548,  3554,  3346,
   -4697, -4697,  3559,  3346, 16662, -4697, -4697, -4697, -4697, 16662,
   -4697, 16662, -4697, 16662, 16662, -4697, 16662, 16662, -4697,  3346,
    3346, 20732, 16662, 16662,  3561,  3346, -4697, 16662, 16662, 16662,
   -4697, 16662,  2093, 16662,  2348, 16662,  2449, 16662, -4697, 16662,
   -4697,  3346,  3346, -4697, 16662,   506, -4697,  3054, -4697,  3692,
    3346, -4697, 43005, -4697, -4697,   421, 28770,  3562,   421,  3563,
   22360, -4697,  3346, -4697, -4697, -4697,  1394,  3568,  3346,  2127,
   -4697, -4697, -4697,  3550,  2441, -4697, -4697, -4697, -4697, -4697,
   -4697, 22360,   363, 22360,  4033, 22360,  4765,  4765,  2570, 10964,
   -4697,  1830,  4033, -4697, -4697, 16662, 16662, 46165, 72241,   410,
   -4697,  1159,    44, -4697,   321, -4697, -4697, 57231, -4697, -4697,
   -4697, -4697, -4697,   159, 62761,  3566, -4697, -4697, -4697, -4697,
   -4697, -4697,  3662, -4697,  4225,  3281, -4697,  3810,  3814,  3818,
   -4697, 35889, -4697, -4697, -4697, -4697, 35889,  1616,  1211, -4697,
   72241, 57231,  3567,  3575,  3576,  3815,  3739, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,  3454,  3583,
    3305, -4697,  3696, -4697, -4697,  3584, -4697,  1643,  3328,    65,
   72241, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, 16662,   -78, -4697,  3817, -4697, 72241, 72241, -4697, -4697,
   -4697, -4697,  1178, -4697,  3591,  2122, -4697,  1159, -4697, -4697,
    3662,  3662, -4697,  4478, 27979,  4012,  1211, 57231,  4207, -4697,
   -4697,  3598,   954,  3599, 24802,  3679, -4697,  3597,  3544, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697,  3696,  4130,  4200,
    3454, 79351, 79351, 79351, -4697, -4697, -4697,  3682,  3245,  3245,
    3691,  3691,   262,  3988, -4697, -4697, -4697, -4697,  3016, -4697,
   -4697,  2527, -4697, -4697, -4697, -4697, -4697,   224,  2441, -4697,
   32725, -4697, -4697,  1604,  3305,   476, -4697, 57231, -4697,  4044,
   -4697, -4697,  3305, -4697,  3819,   -78, -4697,  1489,  1489, -4697,
    4224, -4697,  2935,  3821, -4697, -4697, 19104, -4697, 72241, -4697,
    3611, -4697,  4094, 72241,  4275,  3628, 22360,  3629, 22360,  2527,
    3885,  3632,  4430,  3054,  3328, -4697,  3655,  4040, -4697, -4697,
    3016, -4697,  3989,  4042,  3691,  2224, -4697, -4697, -4697, -4697,
    1017,  3054,  3054,  3054,  3054,  2730, -4697,   118,   633,  1721,
    2527,   142,   258, -4697,  3636, -4697, -4697, 61181,  4375, -4697,
   -4697, -4697, -4697, -4697, -4697, 16662, -4697, -4697,  -170,   213,
    1266, 26394, 72241, 46955, -4697,   -94, -4697, -4697, -4697, -4697,
   -4697, -4697,   224, -4697,   224,   -78,  3921,  3923,  3926,  3929,
    3930,  3963, -4697, -4697, 72241,  4088, -4697,  3054,   -78,  2007,
     -78,   -78,   -78,   -78,  3054,   -78,   -78,  2141, -4697, -4697,
   -4697,   264, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, 62761, -4697, -4697, -4697, 72241,   -55,
   72241,  3650,  4201,  4203,   862, 72241,   287,  3659,  3859,  3883,
   53281, 88997, -4697, -4697, -4697,  4112,  4112,  2337,   190, 69871,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, 72241, -4697, -4697,  3291,  3663, -4697,  2527,
   -4697, -4697, -4697, -4697, 55651,   -78, -4697,  3920, -4697, -4697,
   72241,  3663, -4697, -4697,   676, -4697,  3849,  3925,   -78, -4697,
   -4697, -4697, -4697, -4697,  4120, -4697, -4697, -4697, -4697, -4697,
   -4697, 88997, 69871,  3675, -4697,  2091, -4697, -4697, -4697, -4697,
   69871,  3908,  3909, -4697, 72241, 69871, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   72241, -4697, -4697, -4697, -4697, -4697, 59601, 61181, -4697,  3033,
    3518,  7326, -4697, -4697, -4697,  3130, -4697, -4697, -4697,  1135,
    4126,   224,  1214,   266, -4697,  4043, -4697, -4697,  2816,  4123,
    4129,  3684, -4697,  3687, -4697,  3688, -4697, 68291,  2441,  3690,
    3690,  3699,  3699,  3700,  3700,  3701,  3332, -4697,  3702,   -78,
    3054,   -78, 61971,  3054,   925,  2527,   871, 89144, -4697,  3054,
     -78,   -78,   -78,   -78,  3054,  3054,  3054,  3054,  3054,   -78,
     -78,   -78,   -78,   -78,   -78,  3054,   -78,  1564,   -78,   -78,
    3054,  1677,   -78,  3054,   -78,  1604, -4697,   230, -4697,  3704,
    2042,  1159, 62761,  3705, -4697,  4289,   224,   224,   224,   224,
   -4697,   277, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697,  1135,  1648, 62761, 79351, -4697,
    3260,  -120,  3947,  3709, -4697,  2222, -4697, -4697, -4697, -4697,
   -4697, 72241,  2674, -4697, 72241, -4697, 39844, -4697, -4697, -4697,
   -4697,  1624,  1623, -4697,   331,  1452, -4697,   219,  4051, -4697,
   -4697,   245,  3715, -4697, -4697,   477, 17476,  1701,  3346, -4697,
   -4697, -4697, -4697, -4697, 16662,  2441,  2560, -4697,  3718,  3718,
    3719, -4697,  3722,  4132,  3718, -4697, -4697, -4697, -4697, -4697,
   -4697,  4479, -4697, -4697, -4697, -4697,  4293,  3719,  4299, -4697,
    3718, -4697,  3831,  4529,  3804,  3751,  3754,  3761,  3346, -4697,
    3346, 16662, 16662,  1716,   377,  1750,  4504,  4063,   753,   993,
     428, -4697,  1767,  3852,  3346, -4697,  3346, -4697,  1777,  1783,
    1817,  1834,  1031,  1843,  2154, -4697, -4697, 17476,  1868,   520,
     446,  3346, -4697,  1934,  1101,  1110,  1938, 16662,  1944, 16662,
    1956, 16662,  1963,  1968, -4697, -4697,  1982,  3767,  3767,  3749,
    3765, -4697, 72241, -4697, -4697, -4697, -4697,  3892,  3893,  3346,
    3775,   421,  3346,   421,   173, -4697,   610,  3346, -4697, -4697,
   72241, -4697, -4697, -4697, 16662,  1092,   189, -4697, -4697, 22360,
     448, 22360, -4697,  3771, -4697, -4697, -4697, -4697,  4292,  4574,
   -4697, -4697,  4045, -4697, -4697, -4697,  3264, -4697, -4697,   144,
    4433,  3781, -4697, -4697, -4697, -4697, -4697, 45375, -4697,  1256,
    3794, 47745, 57231,  4210,  3305, 19104, -4697,  2917, 72241,   287,
    4368,   211,  3958,  4319, -4697, -4697, -4697,  2441, -4697, 57231,
   -4697, -4697, -4697, 72241, 72241,  1046, -4697, 37471, -4697, -4697,
   -4697, -4697,  3793, -4697, -4697, -4697,  4443, -4697,  4407, 45375,
    3261, 57231, 16662,  4130, 16662,  3795,  3802,  3809,  3813,  3827,
    3828, 26394, 26394,  4355,  4359, -4697,  4230,  1577,  4230, -4697,
   40634, 26394, 26394,  3120,  2816,  4576,  4408,  4200,  3016,  3016,
    3016,  3655,  3655, -4697,  4524, -4697, -4697, -4697, -4697, -4697,
   -4697,   278, -4697, 10150, -4697, -4697, -4697, -4697, -4697,  3261,
   -4697,  3662, 57231, -4697,  3454,   100,  4134,  4480, -4697,  4481,
   -4697,  3825,  4482,  4241, -4697, -4697,  3054, -4697, -4697, 72241,
    3039, 72241,  3080, -4697,  4598,  3839, 22360,  4499,  3855,  4440,
   -4697,  3691,  3655,  3245,   -76, -4697,   164,  1656, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697,   304,  4566,  2891,  4426,
   -4697, -4697, -4697,  2222,  2222, -4697, -4697, -4697,  1802,  4394,
   -4697, 26394,  3696, 46955,  -182, -4697, -4697,  3858, 72241,  2801,
     -78, -4697, -4697, -4697,  4570, -4697,  4577,  1557,  4309,  4523,
   -4697, -4697, -4697,   293, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697,  2451, -4697,  3880,  2527,
    4290,  3882, 16662, 72241, -4697, -4697,  3965, -4697, -4697,  3886,
   -4697, 43795,  1500,  1500,  2216, -4697, -4697, -4697, 88997, -4697,
    3718,  3718,  3718, -4697, -4697,   375,  3719, -4697, -4697,  3888,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,   550,  2760,
   -4697, -4697,   550, -4697, -4697, -4697,   310,  1573, -4697, -4697,
   -4697, -4697, -4697,  3889, -4697,  3718,  3719,  3719, -4697, -4697,
     550,  3718, -4697,  3718,  4259,  3313, -4697,   168,  3718,  3718,
    3718,  3891,  3722, -4697, -4697, -4697, -4697, -4697,  4579,   551,
   -4697, 88997, -4697, 72241, -4697,  3742,  3742, -4697, -4697, -4697,
   -4697,  4149, -4697, -4697, -4697,  1942, -4697, 72241, -4697, -4697,
   72241, 72241,    35,  1178,  3895, -4697, -4697, -4697,  3915,   270,
   -4697,   -33, -4697, -4697,  3844,  1594,   451,  4135,  2431, -4697,
   72241, 72241, -4697, -4697, 71451, -4697, 38262, -4697, -4697, 39053,
   -4697, -4697,  -152, -4697, -4697,  2277, -4697, -4697,  3054, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, 43795,   224,   224, -4697,
     301, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
    4323, 43795,  1550, 72241,   -78,  1694,  1694,  2527,  2641, -4697,
    4307, -4697,  2428,  3016,   258, -4697, -4697,  3251, -4697,  3911,
   -4697, -4697, 72241,  2246, -4697, -4697,  8038,   331, -4697,   245,
    4341, 72241, -4697, -4697, -4697, -4697,  4206, -4697, -4697, -4697,
   -4697,  4345,  4765, -4697, -4697,  2441, 16662,  1018, -4697, -4697,
     550,  4352, -4697,  1119, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697,  3916,  5212,  4483,
   -4697, -4697, -4697, -4697, -4697,  4765,  4765, -4697, -4697, 16662,
   -4697, 16662,   573,  3924, 16662, 16662, -4697, 16662, -4697,   358,
    3931,  4089, -4697, -4697, -4697, -4697, -4697, -4697, 16662, -4697,
   -4697,  4765, -4697, 16662, -4697, -4697, 16662, -4697, -4697, 16662,
   16662, -4697,  1984, -4697,  1988, -4697,  2001, -4697, -4697, -4697,
    2527,  3932,  3936,  3054,  3346, -4697,  3937,  4331, -4697, -4697,
   -4697, 16662, -4697,  3346, -4697,  3346,  4536,  5212,  1688, -4697,
   -4697,  2255, -4697, -4697, -4697, 16662,  1092, -4697, -4697, -4697,
   -4697, -4697, -4697,  4303, -4697,  4380, 35889,  4156,  4538, -4697,
   -4697, -4697, -4697,  1472, -4697, -4697,  2291, 72241,  4718,  4372,
   -4697,   287,  4368,  4484, -4697,  4505, -4697, -4697, -4697, -4697,
    3942,  3663,  3940, -4697,   224,  2950,  2294, -4697, -4697, -4697,
    3941, 19104,  3949, -4697, 27979, 57231,  4571,  3261,  1147,  2816,
    2003, 26394, -4697, -4697, -4697, -4697, -4697,  3544,  3952,  3957,
    3959,  3544, -4697, -4697, -4697,  4497, -4697,  4230,  4230,  4516,
    4517, -4697,  2729,  2927,   513, -4697, 16662, 16662,  4090,  4408,
    3691,  3691,  4376,  2527, -4697, -4697,  3261, -4697, -4697, 16662,
     -78,   -78,  1393,   -78,  4620,  4660, -4697,  2309, -4697, -4697,
    2318, -4697,  4511,  4290, -4697,  3148,  2527, 72241,  4741, -4697,
    3691,  3691,  3245, -4697, -4697, -4697,  3691,  4388,   -47, -4697,
    2527, -4697,   204, -4697, -4697,  2941, -4697, -4697,  4744,  4745,
    4641,  4747,  1802, -4697,  1298, -4697,  -182,  3454,  1570, -4697,
    3993, -4697,  1345, -4697, -4697, -4697, -4697, -4697, -4697,  4320,
   -4697,  1666, -4697, 43795, -4697, 72241,  2328, -4697, 43795,  2010,
    3991, -4697, 43795, 16662, -4697,  2345, -4697,   179, -4697, -4697,
   -4697, 53281,  4259, -4697, -4697, -4697,  4763,   389, -4697,  4766,
   -4697,   550, 61181, -4697, -4697, -4697, -4697,   573, -4697,   694,
   -4697,   550, -4697, -4697,  4178, -4697, -4697, -4697,   573,   550,
   -4697, -4697, -4697, -4697,  1703, 72241,  1942, -4697, -4697, 59601,
     399,   -78,  3173,  4075, -4697,  4197, -4697,  4682,  1649,  4546,
    1159,   224,   224,  4547,  4748, -4697, -4697,  4558, -4697,  4614,
    4555, -4697,   873, -4697,  4784, -4697,   550,  4784,  1703,  4448,
   -4697,  1703,  1703, -4697,  3282, -4697,  1942, -4697, -4697, -4697,
   72241, 72241, -4697, -4697, -4697, -4697, -4697,  4013, -4697, -4697,
    4452,  4126, -4697, -4697,  4411, -4697, 16662, 16662,  4453, 72241,
    4454, -4697,  4764,  4819,  3663,  1669, -4697, -4697,  2354, -4697,
   -4697, -4697,  2360, -4697, -4697,  4027, -4697,  2379, -4697, -4697,
   -4697, 72241, -4697,  2405,  2420, -4697, -4697,  2433,  1694,  1694,
    2548,  1550,  4034,  2435,   -78,   -78,   -78,   -78, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697,   164,  1663,   142,  3523, 43795,
    4038,  6425, -4697,  4334,  4363,  4047,  4041, -4697, 88997,   -78,
     385, 72241,  1875,  2441,  4048,  4052,  4053,  4054, -4697,  4055,
    2445, -4697,  3831, -4697,  2222,  4056,  4057,  2018,  4046, -4697,
   -4697,  3346,  2033,  1248,  2450,  4520,  4587, -4697,  4447, -4697,
    2037,  1881,  2076,  2080,  2123,  2128, -4697, -4697, -4697, -4697,
   -4697, -4697,  4061, -4697, -4697,  4822,  4489,  2441, -4697, -4697,
    2060,   421, -4697,  3493, -4697, -4697,  4067,  1688, -4697,  4501,
   -4697,  2472,  4704,  4595, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, 57231,
    4502,  4677,  4867,  3454,   170, 72241,  4372,  4742, -4697, -4697,
   -4697,  4325, -4697, 72241, 19104, -4697, -4697,  2950, 72241, 44585,
    4093,  3793, -4697,  3261, 57231,  1394, -4697,  4211,  2418, -4697,
   -4697,  4633,  4634, -4697, -4697, 16662,  4096, 16662,  4097, -4697,
   -4697,   287,   287, -4697,   513, -4697, -4697,  2441,  1105, -4697,
    2441, 72241, -4697,  4090, -4697, -4697, -4697, -4697,  2441, -4697,
   -4697, -4697, -4697,   -78,  4734,  4491, -4697, 72241, -4697,  2095,
    2492, -4697, -4697,  4100,  4098,   -78, -4697, -4697,  3691, -4697,
    3691,  3245, -4697,  4777, -4697, -4697, -4697,  4778,   573,   573,
    4851,   573, -4697,  4859,  4861,  1298, -4697, -4697,  4526,  4526,
    4537, -4697,  2497,  4296, -4697,  4290,  2508, -4697, 72241,  2515,
    2152,  1249, 43795,  4544, -4697, -4697, -4697, -4697, -4697, -4697,
   61181, -4697, -4697,  4784,  2545, -4697, -4697, -4697,  2585, -4697,
   -4697, -4697, -4697, -4697,  1703, -4697,  4110, -4697,   438,  4282,
   -4697, -4697, -4697, -4697, -4697,  3810,  3814,  3818,  1677,  1677,
   16662, -4697, -4697, -4697, -4697, -4697, -4697,  4553,  4301, -4697,
   -4697, -4697, -4697, -4697, -4697,   -78,   -78, -4697, -4697, 59601,
   -4697,  4907,  4904, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
    4114, -4697, -4697, 16662, -4697, -4697,  2195, -4697,  4290, -4697,
   -4697, -4697,  2441,  4765,  4845, -4697, -4697,  4417,   -78,  4788,
    2674,  4561, -4697, -4697, 72241, -4697, 72241, 72241, -4697,   -78,
    4137, -4697,  4139, -4697,  3054,   505, -4697, -4697, -4697,  2451,
    1244, -4697, -4697, -4697,  4708, -4697,  4534, -4697, -4697,  1214,
    2596, -4697, -4697,   -78,   451, -4697, 72241,  3742, -4697, -4697,
   -4697, -4697,  4146,  4154, -4697, 72241,  4751, -4697, -4697, -4697,
   -4697, -4697, -4697,  4569,  4150,  4929, -4697, -4697, -4697, 16662,
   -4697, -4697, 16662, -4697, -4697,  4613,  4782, -4697, -4697, -4697,
   -4697, -4697, -4697,  4151,  3054, 16662,  4910,  1327, -4697, -4697,
    3346, -4697, -4697, -4697,  4582,   192, -4697, -4697, -4697,  1472,
   -4697,  4583, 57231, -4697,  3305,  4372,  2816, -4697,  4700, 72241,
   -4697, -4697, -4697, -4697, -4697,  4155, -4697, -4697,  3261,   254,
   -4697, -4697, -4697, -4697,  2441, 72241,  2441, 72241,  4779,  4779,
   -4697, -4697, 16662, -4697,  4950,  4158, -4697, -4697, -4697,   -78,
    4817, -4697, -4697,  4177,  4430, -4697, -4697,   319, -4697, -4697,
    3691, -4697, -4697, -4697, -4697,   573, -4697,   573,   573, -4697,
    4702,  4702,  4818,   505,  1911,  4199, -4697,  1244,  2602, -4697,
    1249,  2091,   -78,   224,   224,   224, -4697,  1249, -4697, -4697,
   -4697, -4697, -4697,  4173, -4697, -4697,   550,   573,   550, -4697,
   72241,  4661,  4193, -4697, -4697, -4697,  2186, -4697, -4697, -4697,
   -4697, -4697, -4697,  4183,  2230, -4697, -4697,  2605, -4697, -4697,
   -4697, -4697, -4697,  4360, -4697,  4322, -4697, -4697, -4697, -4697,
   72241, 72241, -4697,  4604,   410,   505, -4697, -4697,  2608,   410,
    1244, -4697, -4697,  4954, -4697, -4697,  1249, -4697,  4453,  4531,
   -4697, -4697, -4697,  2351, 88997,  4855,  4195, -4697,  4894, -4697,
    2248, -4697, -4697, -4697,  4198,  4204, 16662, -4697, -4697, -4697,
   -4697,  4236, -4697,  4847, -4697, -4697,  4867, -4697,  4371, -4697,
   -4697, -4697,  4404,  3696,  4213,  4214,  4216,  4219,  1803,  4222,
    4223, -4697,  4226, 72241, -4697,   -78,  3662, 22360,  4227,  4877,
    1363, -4697, -4697, -4697, -4697, -4697, -4697, 54861, -4697, -4697,
   -4697, -4697,  4228,  4460,   224,  4884,  4898,   224,   224,   224,
     224,  4229,  4199, -4697,  4881, -4697,  4259, 72241, -4697, -4697,
   -4697,  3054,   -78,   -78, -4697,  2091, -4697, -4697, -4697,  2643,
   -4697,  1595,  4663, 72241, -4697, 16662, -4697, -4697,  4506, -4697,
   86461,  2138, -4697, -4697,  4232,  4233,  2029, -4697, -4697, -4697,
   -4697, -4697,  1159,   410,  2431, -4697, 88997, -4697, -4697,  3742,
    4563, -4697,  3719, -4697, -4697,  3387,  4215,  4565, 16662,  4353,
    4373, -4697, -4697,  4358,  4361, -4697,  4397, -4697, 72241,  2896,
   73821,  4211, -4697, -4697,  5005, -4697,  5007, 71451, 71451, -4697,
   -4697, -4697, -4697,  3204, 72241,   224,  4522, -4697, -4697,  4248,
   -4697, -4697,    -8,   -78,   224,   224,  1159,  1159,  2527, 72241,
    4508, -4697, -4697,   224, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, 72241, -4697, -4697, -4697,   525, -4697, -4697,  2275, 16662,
    4903,  4427, 72241,  2040, -4697, 88041, 88041, 72241, -4697, -4697,
   -4697, -4697,  8404, -4697, -4697,   113, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697,  5027, -4697,  4247,
   -4697, -4697, -4697, -4697,  5000,  4681,  5002, -4697, 72241, -4697,
   -4697, -4697,  4764,  3742,  4250, -4697,  1579,  4257, 16662,  1878,
   -4697,  5049,  1995,  2025, -4697,  4765, -4697,   320, -4697, -4697,
   -4697, 76981,  3940,  4588,  4369,  2655, -4697, 88816, -4697, -4697,
   -4697,  4262,  2658,  4521,  2688,  3328, -4697, -4697,  2695, -4697,
   21546, -4697, -4697, -4697, -4697,   -78,   -78, -4697, -4697, -4697,
   -4697, 62761,  2696, -4697, 62761, -4697,  1297,  1297,   682,  2441,
   16662, -4697, 16662,  4442, -4697, -4697,  4876, 72241, -4697, -4697,
   -4697, -4697, 16662, -4697, 86461, 86461, -4697, -4697, -4697, -4697,
    5044,  4694, -4697,  4695,  4271,  4939, -4697, -4697, -4697, -4697,
    4949, 86461, -4697, -4697, 62761, -4697, -4697,  4765, -4697,  4215,
   -4697, -4697,  4393,  4602, -4697,  4398, -4697,  3172, -4697, -4697,
    3016,  4860,  4375,  1394, -4697, 73821,  4386,  3742, -4697, -4697,
    2527, -4697,  4521,  4625, -4697,  4248, -4697,  2703, -4697,  4033,
   -4697, -4697,  4199, -4697,  4508, -4697, -4697,  5084, -4697,   279,
    4716,  4717, -4697, -4697,  4558,  2441,  2441, -4697,   247, -4697,
   -4697,  4849,  4937, 16662,  2441, 82511,  4284, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   87251, 16662, -4697,   113,  5027, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, 86461,  2085, -4697, -4697, -4697, -4697, -4697,
    5050,  4394,   254, -4697, -4697,  4926, -4697, -4697, -4697, -4697,
   -4697, 21546, -4697, -4697, -4697, -4697, -4697,  4498,  4975, -4697,
    4474, 16662, 86461, -4697,  4955, -4697,  4878,  2441,  4820,  4302,
   -4697,  4295,  2441,  4989, 88041, 88041, -4697,  4250, -4697, -4697,
     573,  4886, -4697, -4697,  4416, -4697,  1297,  1297, -4697,   437,
   -4697,  2441, 83301,  5066, 72241, -4697,  4549, -4697, -4697, 16662,
    4978, 63551, 84091,  4313, -4697, -4697, -4697, 86461, -4697,  4754,
    4318,  1394, -4697, -4697, 16662, -4697,  4974,  4556, -4697,  4315,
   -4697, 86461,  2441, 86461, -4697, -4697,  4918,  6750,  2391, -4697,
    4324, -4697, -4697,  1019, 35098,  4635,  1549,  2441,  5080, 86461,
   72241, 80141,  4983, 84881,  4945, 72241,  3742,  4946,  4947, -4697,
   -4697, -4697, -4697, -4697, 62761,  2704, -4697, -4697, 72241, -4697,
   -4697, -4697,  1688,  4568, -4697, 80931, -4697,  2952,  4689,  4509,
   -4697, -4697,  5021,  2911, -4697, -4697, -4697, 36680,  4333, -4697,
     224, -4697,  4772, 86461, 86461, -4697, -4697, -4697, -4697, 50911,
   16662, -4697, -4697, -4697, -4697,  1453, -4697, 72241, 19104,  4459,
   81721, 85671, -4697, -4697, -4697, 27189, -4697, -4697, -4697,  4956,
   -4697,  2441, -4697, -4697, -4697, 50911, -4697, -4697, -4697
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
    2047,  3151,  1334,  3103,     0,     0,     0,     0,     0,     0,
    3105,  3151,   153,  2170,  2171,     0,  1990,     8,     0,  1334,
     470,     0,     0,   165,     0,  2004,     0,  2236,     0,     0,
    1334,     0,  2229,     0,     0,  1334,  2052,  2211,   447,     0,
    3105,     0,  1400,     0,  2147,  2958,     0,     0,     0,     0,
    2065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2959,     0,     0,     0,     2,     9,    14,    43,
       0,    80,    63,    70,    32,    42,    40,    39,    37,    41,
      38,    31,   142,    87,    66,    26,    16,    21,    18,    28,
      17,    20,    24,    25,    23,    27,    22,     0,    67,  1257,
     145,   144,   143,    34,    84,    29,    30,    33,    77,    83,
      78,    79,    92,  1365,  1362,  1911,  1364,  1378,  1386,  1387,
    1388,  2048,    46,    59,    50,    47,    49,    53,    52,    61,
      62,    48,    60,    57,    58,    51,    55,    56,    54,    72,
      85,   149,     0,    44,   146,   111,   137,   138,   117,   136,
     123,   124,   112,   113,   114,   100,    96,   133,    97,   131,
     121,   115,   102,   101,   140,   116,   130,   129,   135,   128,
     139,    98,    99,   125,   120,   103,   107,   110,   122,   132,
     134,   106,   105,   108,   127,   119,   126,   118,   104,   109,
      45,    64,  2172,    65,    86,    81,    74,   150,    75,    93,
      95,    94,    76,   148,   141,    88,    19,    69,    89,    68,
      15,    36,    90,    91,    82,   151,    73,   147,    71,    35,
       0,  1154,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1988,     0,  1092,  3149,  3150,  3151,  1336,  1335,     0,
    3105,  2340,  1321,     0,  2425,  2424,  2427,  2429,  2430,  2431,
    2432,  2433,  2434,  2376,  2436,  2438,  2439,  2440,  2441,  2442,
    2377,  2443,  2444,  2445,  2446,  2447,  2448,  2378,  2379,  2450,
    2451,  2452,  2453,  2455,  2380,  2381,  2456,  2457,  2458,  2460,
    2461,  2462,  2463,  2464,  2465,  2466,  2383,  2467,  2384,  2468,
    2469,  2471,  2472,  2504,  2473,  2474,  2475,  2476,  2477,  2478,
    2386,  2479,  2480,  2481,  2482,  2483,  2484,  2485,  2486,  2487,
    2387,  2488,  2489,  2491,  2493,  2494,  2495,  2496,  2497,  2388,
    2498,  2499,  2500,  2502,  2389,  2505,  2507,  2508,  2510,  2512,
    2511,  2513,  2514,  2415,  2515,  2516,  2373,  2518,  2519,  2520,
    2521,  2522,  2524,  2525,  2416,  2526,  2527,  2528,  2529,  2390,
    2391,  2531,  2532,  2533,  2534,  2541,  2535,  2536,  2537,  2854,
    2540,  2392,  2542,  2393,  2546,  2545,  2547,  2336,  2548,  2337,
    2549,  2394,  2552,  2553,  2554,  2555,  2395,  2557,  2558,  2559,
    2560,  2561,  2562,  2564,  2396,  2566,  2567,  2568,  2569,  2570,
    2571,  2855,  2573,  2574,  2575,  2576,  2578,  2579,  2581,  2583,
    2584,  2585,  2586,  2588,  2589,  2599,  2590,  2591,  2592,  2594,
    2593,  2595,  2596,  2597,  2600,  2580,  2602,  2603,  2604,  2605,
    2606,  2607,  2608,  2610,  2611,  2612,  2613,  2614,  2615,  2616,
    2617,  2618,  2619,  2620,  2621,  2622,  2623,  2624,  2625,  2626,
    2627,  2628,  2629,  2631,  2632,  2633,  2634,  2417,  2397,  2636,
    2638,  2639,  2641,  2644,  2645,  2646,  2648,  2652,  2653,  2654,
    2655,  2656,  2658,  2657,  2659,  2662,  2664,  2665,  2663,  2666,
    2667,  2668,  2398,  2399,  2670,  2671,  2672,  2418,  2674,  2676,
    2675,  2419,  2677,  2678,  2679,  2681,  2682,  2683,  2684,  2685,
    2687,  2688,  2689,  2690,  2691,  2420,  2692,  2694,  2400,  2695,
    2421,  2697,  2699,  2698,  2700,  2702,  2703,  2701,  2401,  2707,
    2709,  2710,  2712,  2714,  2716,  2402,  2718,  2719,  2720,  2722,
    2721,  2723,  2403,  2724,  2725,  2731,  2732,  2733,  2734,  2858,
    2735,  2736,  2375,  2404,  2737,  2405,  2739,  2740,  2741,  2742,
    2743,  2767,  2772,  2773,  2774,  2775,  2776,  2777,  2779,  2780,
    2406,  2781,  2782,  2783,  2784,  2407,  2785,  2787,  2789,  2790,
    2791,  2792,  2793,  2423,  2794,  2795,  2796,  2797,  2798,  2799,
    2800,  2802,  2803,  2804,  2805,  2811,  2809,  2810,  2812,  2814,
    2815,  2408,  2816,  2817,  2819,  2820,  2821,  2822,  2409,  2410,
    2823,  2824,  2825,  2826,  2828,  2829,  2830,  2831,  2833,  2835,
    2836,  2837,  2838,  2839,  2840,  2841,  2842,  2411,  2843,  2844,
    2845,  2856,  2717,  2428,  2556,  2834,  2470,  2738,  2572,  2635,
    2857,  2543,  2449,  2382,  2517,  2530,  2637,  2651,  2669,  2708,
    2808,  2818,  2630,  2649,  2661,  2544,  2715,  2778,  2806,  2422,
    2832,  2587,  2538,  2374,  2490,  2492,  2650,  2686,  2426,  2550,
    2435,  2609,  2647,  2729,  2726,  2728,  2730,  2711,  2643,  2506,
    2642,  2582,  2680,  2577,  2601,  2673,  2598,  2705,  2660,  2523,
    2706,  2786,  2640,  2713,  2563,  2813,  2437,  2509,  2727,  2747,
    2846,  2704,  2696,  2693,  2539,  2744,  2745,  2746,  2748,  2749,
    2750,  2751,  2752,  2753,  2754,  2755,  2756,  2757,  2765,  2759,
    2758,  2760,  2761,  2763,  2762,  2764,  2766,  2768,  2769,  2770,
    2771,  2788,  2565,  2454,  2459,  2385,  2551,  2801,  2807,  2827,
    2503,  2501,   401,  2347,   383,  2348,  2369,  2370,  2371,  2368,
    2372,   167,     0,     0,  2947,  2946,     0,     0,  3106,  3107,
     739,     0,     0,     0,     0,     0,     0,  1991,     0,  1026,
     739,   739,     0,  1028,   739,     0,  1025,     0,   318,  3134,
    3134,  3151,  3153,  3155,  2427,  2376,  2441,     0,  2304,     0,
       0,     0,  1761,     0,  2380,     0,  2461,  2463,     0,     0,
    1428,  1428,   904,     0,     0,     0,  2486,  2487,  2310,     0,
       0,     0,  2301,  2311,  2531,  2535,  2537,     0,  2303,  2547,
       0,     0,     0,     0,  2570,  2313,     0,     0,  2613,  2615,
       0,     0,  2619,  2620,  2621,  2622,  2285,  1487,     0,   904,
    2297,  2312,  2291,  2666,  2667,     0,  2677,     0,     0,  2716,
       0,     0,  2721,  2731,     0,     0,  2790,     0,     0,   904,
    2284,  2811,  2809,  2810,  2812,     0,  2302,  2408,  2314,     0,
    2826,  1428,   904,   904,     0,     0,     0,  2837,  2838,  2845,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2563,  2788,     0,     0,  1420,     0,
       0,     0,  1486,     0,  1570,  3125,  1965,  1419,  1423,  1440,
    1445,  1462,     0,  1479,  1498,  1499,  1501,  1608,  1500,  1506,
    1629,  1507,  1630,  1505,  2298,  1504,  2308,  2307,  1503,  2299,
    2309,  2300,  1421,  1497,  2327,  2347,  2326,  1513,  3123,  1988,
    1988,  1988,     0,     0,  1988,  1988,     0,     0,  1988,     0,
    1988,  1988,  1988,     0,  1988,     0,   158,  2179,   471,   472,
       0,  3002,  3015,  3016,  3012,  3017,  3035,  3018,  3022,     0,
    3014,  3083,  2360,     0,  3021,     0,  3083,  3019,     0,  3083,
       0,  3020,  3025,  3036,  3083,  3013,  2349,  2359,  2358,  3083,
    2848,  2847,  2350,  2849,     0,  3004,     0,  2332,     0,     0,
    2006,  2007,  2005,  1242,     0,     0,  2237,  2238,     0,  2241,
       0,  2242,  2245,     0,  2947,  2941,  2943,     0,     0,     0,
       0,     0,  1337,     0,  2009,  2053,  2010,  2008,  1988,     0,
     437,   446,   448,   449,   445,  3002,     0,     0,  3107,  3118,
    3133,  3128,  3127,  3130,  3131,  3132,  1405,  3129,  3126,     0,
    1401,  1403,  1404,   962,     0,     0,  2889,  2892,  2625,  2659,
    2893,  2814,  2890,  2717,  2891,  2422,     0,     0,  2353,  2916,
    2851,  2852,  2853,  2850,  2354,  2859,     0,  2883,     0,  2140,
       0,   962,  2159,     0,     0,  2159,     0,  1920,  2143,  2148,
    2146,     0,  2895,  2112,  2896,  2139,     0,  2088,  2111,     0,
    2067,  2104,     0,  2897,  1267,  2142,     0,  1920,  1268,  2095,
    2159,  2159,  2159,  2159,  2159,     0,  2159,     0,     0,     0,
       0,     0,     0,     0,   449,  1256,  1267,  1274,  1290,  1255,
    1290,  1399,  2332,  2066,     0,     0,     0,  2956,  2957,  2955,
    2239,     0,  1398,  2029,     0,  1888,  1891,  1893,  3199,     0,
       0,     0,  3194,     0,  3200,     0,     0,  2326,     0,     0,
       0,     0,     0,  3124,     0,     0,     0,     0,     0,     0,
       0,     1,    11,     0,     0,  1428,  2357,  2826,     0,  2356,
    2355,  2361,  2363,  3060,  3081,  3087,     0,     0,     0,  1254,
    1258,  1259,  1261,  1262,  1263,     0,     0,     0,  1363,  1407,
    1367,     0,  3120,  1920,  1912,     0,  3120,  1920,  1375,  1370,
    1911,  1377,  2059,  2052,  2172,  2531,  2175,  2047,  2176,     0,
    1084,  1155,     0,  1088,     0,     0,     0,     0,  2960,     0,
    1086,     0,  2141,  1162,     0,     0,  1113,     0,     0,  3160,
    1090,     0,  3104,     0,  1347,  1358,  1753,   400,     0,   171,
     168,   169,  1304,  1984,  1323,     0,  3110,     0,     0,     0,
       0,  3156,     0,     0,     0,   583,     0,  1027,  1030,     0,
       0,     0,  1029,  1032,     0,     0,   739,  3160,  3160,  3134,
    3154,     0,     0,  1881,  1520,  1881,  1881,  1881,  1762,     0,
       0,     0,     0,     0,     0,     0,  1881,     0,  1564,  1536,
       0,  1565,     0,     0,     0,  2315,     0,     0,     0,  1517,
       0,     0,  1753,     0,  1722,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1757,  1759,  2326,  1881,     0,     0,
    1881,     0,     0,     0,     0,     0,  1433,   958,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1881,
    1881,     0,     0,  1881,  1578,  2317,     0,     0,     0,  2316,
       0,     0,     0,  2306,  2305,  2286,     0,  1581,  1583,  1582,
       0,  1881,  1881,     0,     0,     0,  1881,  1881,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1881,  1510,  1509,  1511,     0,     0,  3125,     0,  2898,
    1718,  1720,     0,     0,  1483,  1482,     0,  1481,  1480,  2346,
       0,  1422,     0,     0,  1427,  1426,  1488,  1489,  1490,  1491,
       0,  1492,  1493,  1494,     0,     0,     0,     0,     0,     0,
    1485,  1484,     0,     0,     0,     0,  1464,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1512,     0,     0,  2341,
    2287,     0,     0,  1624,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1992,     0,     0,     0,     0,     0,     0,
       0,  1988,   160,     0,     0,  3003,  2995,  3033,  3032,  3037,
       0,  3034,  3030,  3038,  3039,  3023,     0,  3009,  3027,     0,
    3011,  3029,  3028,  3008,  3024,  3031,  3010,     0,  3006,  2998,
       0,     0,  1877,  2972,     0,     0,   166,     0,  1243,  2010,
       0,  3213,  3210,  2235,     0,  2246,  2247,  2243,     0,     0,
       0,     0,     0,  2139,     0,     0,  2230,  3119,  1339,     0,
       0,     0,  2011,     0,     0,  2213,  2222,  2218,  2220,  2224,
    2212,  2215,   438,     0,     0,   468,  2989,     0,     0,  2998,
    3113,  3110,  1391,  1402,   961,     0,     0,   964,  2915,  2030,
    2031,   973,     0,   963,     0,     0,     0,     0,     0,  2861,
    2925,  2922,  2921,  2874,  2869,  2868,  2365,  3056,  2867,     0,
    2902,     0,   968,   970,   969,  2912,   967,     0,     0,  2814,
    2862,  2883,     0,     0,  2860,     0,  2155,     0,     0,  2161,
    2110,     0,   739,     0,     0,     0,     0,     0,     0,     0,
    2082,  2138,     0,  2137,  2103,  1921,  2153,  2154,  2159,     0,
    2152,     0,  2159,     0,  2121,  2143,     0,  2159,  2079,     0,
       0,  2071,  2076,  2072,     0,  2078,  2077,  2080,  2068,  2069,
    2155,  2094,  2143,  2102,  2123,  2127,  2126,  2125,  2124,  2115,
    2109,   308,  2093,  2099,  2107,  2143,  1023,  1022,  1021,     0,
       0,  2143,  2159,  2159,   444,     0,     0,  1273,  1275,  1276,
    1295,  1294,  1270,  1291,  1292,   308,  2064,  3211,  3212,  2036,
       0,  1889,     0,     0,     0,  2290,  2289,  3196,  2288,  3204,
    3206,  3190,     0,  3193,  3192,  3201,     3,     0,     0,   676,
       4,     0,     6,     0,     0,     7,  1366,  1384,     0,  1383,
      12,   152,  2364,     0,     0,     0,     0,     0,     0,     0,
    3078,     0,     0,  1137,     0,     0,     0,     0,  1412,  1411,
    1414,  2498,     0,     0,  1964,  1958,  1961,  1960,     0,  1406,
    1369,  1368,     0,  3122,  3121,     0,  1371,  1929,  1930,  1928,
    1922,  1923,  1927,  1926,     0,  1373,  1920,  1920,  1376,  2063,
    2062,  2061,     0,  2059,  1242,     0,  2174,     0,     0,  2164,
    2165,  2166,  2167,  2168,  2163,  2162,  2177,  2178,  3158,  3159,
    3157,   975,  3152,   384,     0,     0,  2964,  2970,     0,     0,
     384,     0,     0,  2032,  2032,     0,  2032,  2032,   654,     0,
     653,  2032,  2032,   745,   605,   607,   608,   643,   609,   610,
     611,   612,   613,   614,     0,  1240,  2032,  1240,     0,  2032,
    2032,  1240,  2032,     0,     0,  2032,  2032,  2032,  2032,     0,
       0,   976,  2032,     0,     0,  1240,     0,  2032,     0,  1224,
       0,     0,  2032,  2032,  2032,  2032,  2032,  1240,     0,     0,
    2032,  2032,     0,  1250,     0,     0,  2032,     0,  2032,  2032,
    2032,     0,  2032,  2032,     0,  2032,     0,     0,  2032,  1184,
    1185,  2032,  2032,  2032,   782,  1195,   741,   769,   770,     0,
    1082,  1083,  1156,  1158,  1228,  1164,  1163,  1192,  1197,  1226,
    1227,     0,  1989,  3225,  1094,     0,     0,  1093,  3160,  1318,
       0,     0,  1018,  1017,     0,     0,  1358,  1349,  1755,     0,
    1754,   382,     0,     0,  1306,  1305,     0,  1303,  1331,  1330,
    1328,     0,  1329,  1327,  1322,  1324,  1325,  3109,     0,     0,
    3111,  3115,     0,   316,     0,     0,     0,     0,     0,   739,
       0,   585,     0,  1031,  3068,  3079,   332,   314,     0,  1033,
       0,  1059,     0,     0,   739,     0,     0,     0,  3148,  3136,
    3143,  3144,  3147,  3146,  3145,     0,  3142,  3135,  3138,  3139,
    3141,  3140,  3160,     0,     0,  1882,  1881,     0,     0,     0,
       0,     0,     0,  1763,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1429,     0,   905,  1590,     0,     0,     0,
       0,     0,  1853,  1854,  1855,  1856,  1864,  1857,  1858,  1859,
    1866,  1871,  1860,  1861,  1867,  1868,  1869,  1862,  1870,  1865,
    1863,  1872,     0,  1852,     0,     0,  1876,  1873,  1875,  1874,
       0,  1723,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1881,     0,     0,     0,  1881,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1600,     0,     0,     0,     0,     0,
    1881,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1560,     0,  2329,  2328,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1665,     0,  1665,     0,
       0,     0,  1668,  1669,  1667,  1670,     0,     0,     0,     0,
    1881,     0,     0,  1514,     0,     0,     0,     0,     0,     0,
       0,  1418,  1425,  1424,  1431,  1430,  1432,  1436,  1441,  1434,
    1438,     0,  1495,  2434,  1443,     0,     0,  1476,     0,  1446,
    1456,  1477,  1460,  1467,  1468,     0,  1463,     0,  1465,  1466,
       0,  1470,     0,  1469,  1473,  1474,  1475,  1478,     0,     0,
       0,     0,  1502,  1508,  1530,  1531,  1423,     0,  1625,  1626,
    2322,  2330,  1968,  1975,  1970,     0,  1992,  1972,  1980,  1988,
    1996,  1997,  1977,   745,  1994,  1976,   615,  3054,  1973,  1244,
    1983,  3238,  1981,     0,     0,   159,     0,     0,     0,     0,
    2196,  2198,     0,  2206,  2197,     0,  2205,     0,  2199,  2207,
    2200,  2204,  2203,  2202,  2201,  2180,  2183,  2189,  2209,     0,
       0,   469,   473,   475,     0,   478,     0,  3026,  3085,     0,
       0,  3007,  3000,  3001,  2999,     0,  3040,  3005,  1878,     0,
    2971,  2528,  2633,     0,  1883,  2333,  3215,     0,     0,     0,
       0,  2244,     0,  2945,  2942,  1877,  2944,  2948,  1333,     0,
     155,   156,     0,     0,     0,     0,  1338,  1342,     0,  1308,
    1791,  2217,  2227,  2225,  2225,     0,   436,   461,   456,   464,
     458,   460,   459,   465,   466,   467,   462,   457,   463,   450,
       0,     0,     0,     0,  2987,     0,  3114,     0,  3116,     0,
    1883,  1392,  1391,     0,     0,     0,  2918,     0,  2914,  2913,
       0,  1110,  2343,  1110,     0,  2927,  2928,     0,  2919,     0,
    2920,     0,  2873,     0,     0,  2876,     0,     0,     0,     0,
       0,     0,     0,  2917,  2882,  2881,     0,  2884,  2885,     0,
    2888,  2936,  2937,  2934,  2940,  2935,  2938,  2939,  2933,  2909,
       0,  2157,  2160,  1885,     0,     0,  2135,  2129,  2128,  2119,
    2130,  2136,  2120,  2089,  2090,  2091,  2085,  2144,  2134,  2132,
    2113,  2159,  2133,  2131,  2073,  2074,  2075,     0,  1920,     0,
    2157,  2159,     0,     0,  2122,  2159,     0,     0,  2159,  2106,
    2108,  1280,  1281,     0,     0,  1296,     0,  1269,  2041,  2040,
       0,  2037,  2039,  2028,  1890,     0,  1895,     0,     0,     0,
    3191,  3207,  3189,  3195,  3202,  3203,  3188,  2330,     0,   677,
       0,     0,   680,     0,     0,  2032,  1385,    13,    10,  1145,
       0,     0,  2362,     0,     0,     0,     0,     0,     0,  3091,
    3089,     0,  3090,  3088,  3045,  3060,  3082,     0,  1117,  1266,
    2338,  1265,  1264,  1260,     0,     0,  1417,  1414,  1408,  1415,
    2342,  1963,   965,  1959,     0,     0,  1916,  1913,  1915,  1381,
    1379,     0,     0,  1382,  1380,  1372,  1374,     0,     0,  1986,
    2057,  2060,     0,  2173,     0,     0,   975,   728,   730,   737,
     736,   738,     0,  1089,  2969,  2968,     0,     0,     0,     0,
       0,  1087,     0,     0,   603,  2033,     0,     0,   603,     0,
       0,     0,     0,     0,   746,  2141,  2032,  1241,  1076,  1019,
    1334,  1019,  1201,     0,  1076,     0,     0,     0,     0,     0,
       0,  1334,     0,     0,     0,     0,     0,  1334,     0,     0,
       0,     0,     0,  2032,     0,  1210,     0,  1166,     0,     0,
       0,     0,     0,     0,     0,  1211,     0,     0,     0,  1167,
    2032,     0,     0,     0,     0,     0,     0,  1334,     0,     0,
       0,  1334,  1253,     0,  1252,  1251,     0,     0,  1334,  1334,
       0,   779,     0,     0,     0,   775,   776,     0,     0,     0,
       0,  1188,  1189,     0,     0,     0,     0,   742,  2032,  2032,
       0,  1160,  1157,   975,   975,     0,  2032,  3233,  1146,     0,
       0,  1091,     0,     0,  1315,  1351,  1345,  1350,  1348,  1358,
       0,  1843,     0,   402,     0,     0,     0,     0,     0,     0,
       0,     0,   308,   173,     0,   203,   207,   215,   219,   205,
     300,   302,   211,   213,   217,   225,   237,   223,   241,   227,
     229,   231,   233,   221,   235,   209,   247,     0,     0,   243,
     245,     0,   249,   251,     0,   239,     0,     0,     0,     0,
     246,   204,   208,   250,   216,   220,   248,   206,   301,   303,
     212,   214,   244,   218,   222,   224,   226,   242,   228,   230,
     232,   234,   236,   240,   238,   210,   252,   308,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   201,     0,     0,   285,  1985,  1332,  1326,
    3108,  3112,   740,   975,     0,     0,     0,     0,     0,     0,
     584,     0,   587,     0,     0,     0,     0,  3087,  2032,     0,
       0,     0,     0,  1060,   975,     0,     0,     0,   383,  3183,
       0,  3137,     0,  1586,     0,  1680,  1730,  1680,  1680,  1680,
       0,     0,     0,     0,     0,     0,  1587,     0,  1534,  1588,
    1589,     0,     0,     0,  1680,     0,   906,     0,     0,  1537,
    1538,  1527,     0,     0,  1609,     0,  1726,  1539,     0,     0,
       0,     0,     0,  1610,  1758,     0,  1760,  2330,     0,  1680,
    1594,  1545,     0,  1680,     0,  1546,  1611,  1612,  1613,     0,
    1615,     0,  1596,     0,     0,  1599,     0,     0,  1548,  1680,
    1680,     0,     0,     0,     0,  1680,  1550,     0,     0,     0,
    1549,     0,     0,     0,     0,     0,     0,     0,  1552,     0,
    1528,  1680,  1680,  1602,     0,     0,  1604,     0,  1561,  1881,
    1680,  1717,     0,  1657,  1656,  1674,     0,     0,  1674,     0,
       0,  1671,     0,  1658,  1655,  1654,     0,     0,  1680,     0,
    2899,  2900,  2901,  1078,  1719,  1518,  1437,  1442,  1435,  1439,
    1444,     0,     0,     0,  1455,     0,     0,     0,     0,     0,
    1447,  1458,  1461,  1628,  1616,     0,  1753,     0,     0,  1229,
    1979,     0,  2141,  1978,   616,   617,   619,     0,  1246,  1245,
    1974,  3239,  1971,  1244,     0,   161,   163,  2194,  2191,  2190,
    2192,  2208,   308,  2193,     0,  2210,  2181,  2486,  2811,  2812,
     482,     0,   454,   453,   455,   479,     0,     0,  2998,  3084,
       0,     0,  3049,  3052,     0,     0,     0,  2993,  1880,  2982,
    2978,  2983,  2985,  2981,  2984,  2986,  2979,  2980,  1883,     0,
    1920,  1884,  1791,  3209,  3214,  1353,  1354,  1358,     0,     0,
       0,   157,  1955,  1956,  1950,  1952,  1949,  1951,  2232,  1953,
    1954,     0,     0,  2231,     0,  1340,     0,     0,  1313,  1312,
    1314,  1307,  1309,  1310,     0,     0,  1792,     0,  2223,  2226,
     308,   308,  2214,     0,     0,     0,  2998,     0,     0,  3117,
    1394,     0,     0,     0,     0,     0,  1393,  1395,  1396,  1768,
    1767,  1798,  1795,  1794,  1797,  1796,  1799,  1791,  1877,  1902,
    1883,     0,     0,     0,   972,   974,   971,     0,     0,     0,
    3058,  3058,     0,     0,  2932,  2924,  2926,  2923,  2875,  2366,
    3057,     0,  2905,  2906,  2907,  2903,  2904,     0,  2910,  2908,
       0,  2887,  2156,     0,  1920,     0,  2118,     0,  2087,     0,
    2105,  2070,  1920,  2086,  2116,     0,  2084,  2143,  2143,  2083,
    1278,  1277,     0,  1282,  1293,  2035,     0,  1894,     0,  1892,
    3197,  3205,     0,     0,     0,     0,     0,     0,     0,     0,
     682,     0,   678,     0,     0,  1106,  1110,     0,  1107,  1108,
    1109,  3061,  2343,     0,  3058,  3074,  3048,  3047,  3046,  3043,
       0,     0,     0,     0,     0,  1138,  1140,     0,     0,     0,
       0,  1114,  1118,  1119,  1413,  1416,  1409,     0,  2252,  1957,
    1410,  1918,  1919,  2324,  1917,     0,  1925,  1924,     0,  1877,
    2332,     0,     0,     0,  2334,     0,  1940,  1941,  1939,  1942,
    2169,  1943,  2032,   729,  2032,     0,     0,     0,     0,     0,
       0,     0,   385,   394,     0,     0,  2961,  2963,     0,   631,
       0,     0,     0,     0,     0,     0,     0,     0,   339,   638,
    1097,   745,   644,   658,   659,   655,  1098,   642,   645,  1099,
    3240,   657,   656,   606,     0,   816,  1077,  1020,  1076,  1168,
    1076,     0,     0,     0,   819,  1076,  1019,     0,  1056,  1077,
     815,     0,  1235,  1234,  1236,   817,   817,     0,     0,     0,
    1947,  1948,  1946,  1944,  1945,   758,  1937,  1938,  1934,  1935,
    1933,  1936,   752,     0,   764,  1190,  1323,  1191,  1850,     0,
     754,   755,   756,   777,     0,     0,   766,     0,  1208,  1209,
       0,  1171,  1206,  1207,  1244,   747,     0,     0,     0,   795,
     796,   794,   771,  3231,     0,   778,  1238,  1237,  1239,   750,
     751,     0,     0,  1225,  1909,  1916,   784,   759,   783,   753,
       0,     0,     0,  1219,  1179,     0,   793,   791,   788,   790,
     789,   792,   767,   760,   761,   763,   762,   774,   765,  1178,
    2209,   748,   749,   780,   781,   757,     0,     0,  1161,  1240,
    1240,  1196,  1193,  1194,  1159,  1165,  1198,   639,   640,   615,
       0,  2032,  3235,     0,  1148,  1150,  3161,  3162,  1893,     0,
       0,     0,  1846,     0,  1847,  1844,  1845,     0,  1756,     0,
       0,     0,     0,     0,     0,     0,     0,   172,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   170,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   317,   975,   734,     0,
     620,     0,     0,     0,   327,     0,  2032,  2032,  2032,  2032,
     321,   745,   589,   591,   592,   593,   594,   595,   598,   596,
     599,   597,   600,   601,   602,   615,     0,     0,     0,  3080,
    1137,     0,     0,     0,   338,   337,  1065,  1067,  1066,  1062,
    1061,     0,     0,  2251,     0,  2250,   815,   311,   661,   663,
     666,   664,   745,   743,  2021,  2023,   668,     0,     0,   348,
    3178,     0,     0,   579,   578,     0,     0,     0,  1680,  1631,
    1681,  1633,  1634,  1639,     0,  1764,     0,  1524,   918,   918,
     902,  1738,   898,   890,   896,  1752,  1743,  1747,  1750,  1749,
    1751,     0,   874,  1746,  1748,   888,  1734,   902,  1736,  1739,
     918,  1744,  1532,     0,     0,     0,     0,     0,  1680,  1641,
    1680,     0,     0,     0,     0,     0,     0,  1724,     0,     0,
       0,  1529,     0,  1620,  1680,  1645,  1680,  1643,     0,     0,
       0,     0,     0,     0,     0,  1649,  1647,     0,     0,     0,
       0,  1680,  1651,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1648,  1650,     0,     0,     0,     0,
       0,  1635,  1688,  1682,  1683,  1684,  1685,     0,     0,     0,
    1672,  1674,     0,  1674,     0,  1659,  1584,  1680,  1637,  1515,
       0,  1721,  1453,  1448,     0,  1457,     0,  1472,  1471,     0,
       0,     0,  1627,     0,  2323,  2331,  1969,  1967,  1231,  1230,
    1982,  1995,  2141,  3055,  1966,   164,     0,  2195,  2188,  2184,
       0,   474,   483,   476,   480,   481,   477,     0,  3086,  3094,
       0,     0,     0,     0,  1920,     0,  2973,     0,     0,  1358,
    1360,  2248,     0,  2951,  2952,  2950,  2949,  2234,  2233,     0,
    1343,  1344,  1311,     0,     0,  2025,  2024,     0,  2001,  2003,
    2012,  2015,     0,  2228,  2219,  2221,     0,   451,     0,     0,
    2992,     0,     0,  1877,     0,     0,  1768,  1798,  1795,  1794,
    1797,     0,     0,     0,     0,  1781,  1789,  1787,  1789,  1784,
       0,     0,     0,  1877,  1893,     0,  1886,  1902,  2872,  2871,
    2870,  1110,  1110,  1111,     0,  2864,  2863,  2930,  2929,  2931,
    2878,   745,  2877,     0,  2886,  2158,  2096,  2101,  2100,  2114,
    2081,   308,     0,   309,  1883,  2159,     0,     0,  1302,     0,
    1298,  1297,     0,  1284,  2038,  1896,     0,  3208,     5,     0,
       0,     0,     0,   681,     0,   691,     0,     0,     0,     0,
    3216,  3058,  1110,     0,  3058,  3071,     0,     0,  3044,  1143,
    1141,  1142,  1144,  1139,  1122,  1121,  1123,     0,     0,     0,
    1136,  1135,  1134,     0,     0,  1103,  1120,   966,     0,  2260,
    1914,     0,  1791,     0,  1883,  1987,  2058,  2057,     0,     0,
       0,   388,   391,   389,     0,   390,     0,     0,  2966,     0,
    2962,   641,  1096,   745,   633,   635,   636,   637,   343,   342,
     344,   345,   347,   346,   341,  1102,     0,   651,     0,     0,
       0,     0,     0,  1076,  1015,   818,     0,   813,   820,     0,
    1016,     0,     0,     0,     0,   801,   803,   804,     0,   887,
     841,   832,   918,   835,   834,   983,   902,   846,   893,     0,
     895,   892,   867,   866,   883,   865,   870,   854,   983,   983,
     853,   886,   983,   871,   869,   873,     0,   874,   894,   879,
     868,   872,   864,     0,   885,   918,   902,   902,   850,   884,
     983,     0,   877,   918,   806,   922,   852,   990,     0,     0,
     918,   920,   898,  1217,  1218,  1064,  1063,  1216,     0,     0,
    1174,     0,  1175,     0,  1177,   973,   973,   772,  1182,  1205,
    1204,     0,  1183,   773,  3232,  1247,  1173,     0,  1910,  1172,
       0,     0,     0,  1308,     0,   786,   785,  1101,  3229,  3226,
    3227,     0,  3237,  3236,  3238,     0,     0,     0,   353,  3163,
       0,     0,  1357,  1359,     0,  1346,     0,   175,   176,     0,
     177,   178,     0,   179,   180,     0,   181,   174,   286,   306,
     307,   254,   291,   280,   290,   281,   293,   292,   294,   282,
     283,   296,   297,   295,   284,   202,   279,   253,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   268,   271,
     272,   269,   270,   265,   299,   266,   298,   267,   273,   274,
     275,   277,   278,   304,   305,   735,     0,  2032,  2032,   320,
     745,   622,   624,   625,   626,   627,   630,   628,   629,   327,
       0,     0,   326,     0,     0,     0,     0,     0,  2141,   322,
       0,  3062,  3064,   333,  1117,  3223,  3224,  3225,   324,     0,
     667,   312,     0,     0,   662,   660,   975,  2022,   665,     0,
       0,   403,   799,   800,   798,   797,     0,  3184,   582,   580,
     581,     0,     0,  1562,  1632,  1765,     0,     0,   919,  1731,
     983,     0,  1741,     0,  1742,   900,   899,   891,   889,  1745,
     897,   875,  1735,  1740,  1737,  1733,  1533,     0,     0,  2318,
    1535,  1526,  1525,  1642,  1640,     0,     0,  1568,  1592,     0,
    1569,     0,     0,     0,     0,     0,  1541,     0,  1544,     0,
       0,  1622,  1646,  1644,  1595,  1614,  1571,  1597,     0,  1547,
    1516,     0,  1572,     0,  1577,  1575,     0,  1652,  1551,     0,
       0,  1558,     0,  1556,     0,  1557,     0,  1559,  1601,  1603,
       0,     0,     0,     0,  1680,  1689,     0,  1690,  1676,  1675,
    1662,     0,  1666,     0,  1663,     0,  1677,     0,  1819,  1638,
    1079,     0,  1452,  1454,  1450,     0,  1459,  1617,  1233,  1232,
     618,   162,  2186,     0,  2182,     0,     0,     0,     0,  2997,
    3051,  3050,  3053,  3092,  3041,  2974,     0,     0,  2042,  2044,
    1355,  1358,  1360,     0,  1356,     0,  2249,  2953,  2954,  1341,
       0,  1849,  2002,  2050,     0,     0,     0,  2019,  2321,  2320,
    2328,  2036,  2020,  2027,     0,     0,     0,  2988,     0,  1893,
       0,     0,  1806,  1800,  1802,  1803,  1805,     0,     0,  1768,
    1767,  1397,  1783,  1782,  1790,     0,  1788,  1789,  1789,     0,
       0,  1777,  1776,     0,  1840,  1807,     0,     0,  1897,  1886,
    3058,  3058,     0,     0,  2911,  2097,  2117,  2098,  2092,     0,
       0,     0,     0,     0,     0,  1286,  3198,     0,   687,   674,
       0,   672,   676,     0,   669,     0,     0,   685,     0,  1105,
    3058,  3058,     0,  3072,  2345,  2344,  3058,     0,  3058,  1126,
       0,  1125,  1131,  1128,  1127,     0,  1116,  1115,     0,     0,
       0,     0,  2253,  2255,     0,  1962,  1883,  1883,  2333,  2055,
       0,  2335,  1883,   731,   787,   393,   392,   398,   399,     0,
    2965,  2141,   340,     0,  1170,     0,     0,   693,     0,     0,
       0,   821,     0,     0,  1074,     0,  1073,  1916,  1057,  1058,
    1200,   815,   806,   840,   833,   851,   977,   988,   986,   980,
     876,   983,     0,   984,   985,   837,   849,     0,   860,     0,
     855,   983,   863,   859,   875,   878,   880,   882,     0,   983,
     848,   847,   857,   844,   907,     0,  1247,   807,   932,     0,
       0,     0,     0,  1484,   926,     0,   995,     0,     0,   935,
       0,  2032,  2032,   937,     0,   946,   822,   923,   925,   824,
       0,   949,     0,   991,   990,   839,   983,   990,   907,     0,
     921,   907,   907,  1214,     0,  1215,  1247,  1851,  1223,  1222,
       0,     0,  1249,  1203,  1908,  1221,  1220,     0,  1176,   768,
       0,     0,  3234,  1112,     0,   363,     0,     0,  1147,     0,
     356,   354,   365,     0,  1320,  1316,  1848,   182,     0,   184,
     186,   191,     0,   193,  2367,     0,   196,     0,   198,  2339,
     200,     0,   187,     0,     0,   287,   289,     0,     0,     0,
    2141,   325,     0,     0,     0,     0,     0,     0,   586,   650,
     646,   652,   649,   590,  3063,     0,     0,  1114,  3233,     0,
       0,   975,   744,     0,     0,     0,   404,   406,     0,     0,
     413,     0,     0,  1766,     0,     0,     0,     0,  1732,     0,
       0,  1521,  1532,  2319,     0,     0,     0,     0,  1727,  1729,
    1725,  1680,     0,     0,     0,     0,     0,  1519,     0,  1618,
       0,     0,     0,     0,     0,     0,  1555,  1553,  1554,   992,
    1606,  1605,     0,  1636,  1686,     0,  1692,  1673,  1661,  1660,
       0,  1674,  1585,     0,  1827,  1828,     0,  1820,  1821,     0,
    1449,     0,     0,     0,   491,   486,   494,   488,   490,   489,
     495,   496,   497,   498,   492,   487,   493,   485,   484,     0,
       0,     0,  3101,  1883,  2042,     0,  2044,     0,  2000,  1352,
    1361,     0,  1793,     0,     0,  2013,  2016,     0,     0,     0,
       0,     0,   452,  2991,     0,     0,  1808,  1877,  1397,  1769,
    1785,     0,     0,  1778,  1786,     0,     0,     0,     0,  1834,
    1835,     0,     0,  1838,  1841,  1842,  1804,  2325,  1906,  1905,
    1887,     0,  1390,  1897,  2866,  2865,  3059,  2879,  1279,  1301,
    1300,  1299,  1283,     0,     0,  1288,   675,     0,   673,     0,
       0,   671,   679,     0,   686,     0,  1104,  3069,  3058,  3075,
    3058,     0,  3076,     0,  1132,  1133,  1130,     0,     0,     0,
       0,     0,  2254,     0,     0,  2261,  2263,  2056,  1911,  1911,
       0,   634,     0,   696,  1169,     0,     0,   814,     0,     0,
       0,  1045,     0,     0,  1070,   802,   805,   979,   978,   982,
       0,   981,   836,   990,     0,  1080,   856,   881,     0,   858,
     911,   912,   913,   845,   908,   910,   997,  1199,   940,   950,
     952,   954,   953,   941,   939,     0,     0,     0,     0,     0,
       0,   959,   929,  2295,   960,  2296,  2292,     0,     0,   955,
     956,   957,   943,   936,   944,     0,     0,   938,   945,     0,
     924,     0,     0,   934,   927,   928,   838,   842,   843,   829,
       0,   830,   831,     0,  1212,  1202,  1186,  1248,     0,  3230,
    3228,   364,   352,     0,     0,  1149,  1151,     0,     0,  1152,
       0,     0,  1319,   183,     0,   192,     0,     0,   197,     0,
       0,   188,     0,   276,     0,  1034,   648,   647,   623,     0,
    1040,   328,   329,   331,     0,  3065,     0,  3066,   319,  3235,
       0,   313,   310,     0,     0,  3179,     0,   973,  3177,   416,
     414,   415,     0,   409,   411,     0,     0,  1563,   916,   914,
     917,   915,   903,     0,     0,     0,  1566,  1567,  1593,     0,
    1653,  1591,     0,  1542,  1619,     0,     0,  1598,  1573,  1576,
    1574,  1579,  1580,     0,     0,     0,     0,  1694,  1678,  1679,
       0,  1829,  1543,  1822,     0,     0,  1451,  2187,  2185,  3092,
    3095,     0,     0,  2994,  1920,  2044,  1893,  1998,     0,     0,
    2049,  2051,  2014,  2017,  2018,  2330,  2034,  2026,  2990,     0,
    1810,  1801,  1780,  1779,  1772,     0,  1774,     0,  1830,  1830,
    1839,  1907,     0,  1903,     0,  1898,  1899,  1389,  1285,     0,
       0,  1271,   688,     0,   678,   692,   670,  3220,  3073,  3077,
    3058,  1124,  1129,  2258,  2259,     0,  2256,     0,     0,  2262,
    1931,  1931,     0,  1034,     0,   716,   694,  1040,     0,  1069,
    1045,  1916,     0,  2032,  2032,  2032,   808,  1046,  1047,  1049,
    1050,  1053,  1072,     0,   989,   987,   983,     0,   983,   909,
       0,  1001,     0,   942,  2294,  2293,     0,   931,   933,   947,
     948,   940,   825,     0,     0,  1181,  1187,     0,   350,   355,
     366,   367,  1095,  3166,  3164,     0,   185,   194,   195,   199,
       0,     0,   288,     0,  1229,  1035,  1036,  1038,     0,  1229,
    1041,  1042,  1044,     0,  3067,   315,  1045,  3176,   361,     0,
     405,   407,  3185,   413,     0,     0,     0,  1522,     0,  1728,
       0,  1621,  1623,   993,     0,  1691,     0,  1715,  1714,  1716,
    1687,     0,  1664,     0,  1826,  1825,  3101,  3093,  3096,  2975,
    1999,  2043,     0,  1791,     0,     0,     0,     0,     0,     0,
       0,  1904,     0,     0,  1287,     0,   308,     0,     0,     0,
       0,  3217,  3218,  3070,  2257,  2265,  2264,     0,  2054,  2046,
    2967,   809,     0,     0,  2032,     0,     0,  2032,  2032,  2032,
    2032,   711,   717,   719,     0,   810,     0,     0,   811,  1075,
    1052,     0,     0,     0,  1048,  1916,   861,  1081,   862,     0,
    1000,     0,  1005,     0,   930,     0,  1213,  1180,   357,  1153,
     518,     0,  3165,  1317,     0,     0,     0,   335,  1037,   323,
     336,  1043,     0,  1229,   353,   362,     0,   386,   410,   973,
       0,   901,   902,  1540,  1607,  1693,     0,     0,     0,     0,
    1709,  1696,  1697,     0,     0,  2996,     0,  3102,     0,   965,
       0,  1877,  1773,  1775,     0,  1831,     0,  1843,     0,  1901,
    1900,  1289,  1272,     0,     0,  2032,     0,  3221,  1932,   705,
     698,   701,     0,     0,  2032,  2032,     0,     0,     0,     0,
       0,   695,   718,  2032,   812,  1068,  1051,  1054,  1055,  1071,
     998,     0,  1002,  1003,  1004,     0,   996,   951,     0,     0,
     359,   544,  2460,   530,   516,     0,     0,  2646,   520,   368,
     371,   369,  2047,   370,   376,     0,   377,   378,   379,   380,
     381,   372,   542,   543,   375,   373,   374,     0,  2351,     0,
    2352,  2413,  2412,  2414,     0,     0,     0,   189,     0,  1039,
     330,   334,   365,   973,  3186,   412,  3172,     0,     0,     0,
    1704,     0,     0,     0,  1702,     0,  1698,     0,  1695,  1700,
    1699,     0,  2045,  2266,  2630,     0,  1812,     0,  1809,  1833,
    1832,     0,     0,   689,     0,     0,  3222,   705,     0,   703,
       0,   699,   697,   700,   727,     0,     0,   723,   724,   722,
     720,     0,     0,   713,     0,   999,     0,     0,   826,   358,
       0,   351,     0,     0,   529,   532,     0,     0,   535,   525,
     524,   526,     0,   519,   518,   518,   572,   523,   569,   568,
     561,     0,  3167,     0,     0,     0,  3180,   396,   395,   387,
       0,   518,  3170,  3171,     0,  3174,  1523,     0,  1705,     0,
    1707,  1706,     0,     0,  1711,     0,  1712,  2874,  3100,  3099,
    3097,     0,  2252,     0,  1811,     0,     0,   973,  1837,  1836,
       0,   683,   689,  3220,   702,     0,   709,     0,   707,   710,
     725,   726,   716,   712,     0,   721,  1011,     0,  1010,     0,
    1007,  1006,   828,   827,   922,   360,   545,   556,   559,   551,
     531,     0,     0,     0,   521,   518,     0,   505,   503,   504,
     510,   511,   512,   513,   514,   515,   506,   509,   507,   508,
     518,     0,   421,     0,     0,  3168,  3169,   190,   367,   386,
     397,  3187,  3173,   518,     0,  1703,  1701,  1710,  1713,  3098,
       0,  2260,     0,  1813,  1814,  1817,   690,   684,  3219,   704,
     706,     0,   715,   714,  1013,  1014,  1012,     0,     0,   823,
       0,     0,   518,   552,     0,   527,     0,   536,     0,     0,
     419,   575,   573,   417,   563,   563,   349,  3181,  3175,  1708,
       0,  2268,  1816,  1818,     0,   708,     0,     0,   553,   559,
     549,   557,   518,     0,     0,   517,     0,   571,   420,     0,
       0,     0,   518,     0,   562,   564,   566,   518,  2267,     0,
    2272,     0,  1009,  1008,     0,   550,     0,     0,   548,   528,
     533,   518,   576,   518,   430,   429,     0,     0,   499,   570,
       0,   422,  3182,     0,     0,  2279,  1819,   554,     0,   518,
       0,   518,     0,   518,     0,     0,   973,     0,     0,   418,
    2270,  2271,  2269,  2274,     0,     0,  2276,  2277,     0,  2240,
    1823,  1815,  1821,     0,   546,   518,   534,   539,     0,     0,
     425,   500,   501,     0,   427,  2278,  2273,     0,  2280,  2282,
       0,  1824,     0,   518,   518,   535,   538,   577,   574,     0,
       0,   423,   424,   435,   434,     0,  2275,     0,     0,     0,
     518,   518,   540,   443,   441,   518,   431,   439,   433,     0,
     440,   502,   428,  2281,  2283,     0,   426,   442,   432
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -4697, -4697, -4697, -4697, -4697, -4697,   -42, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697,  1562, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697,  1816,  1824, -4697, -4159, -4697, -4697,  1825,
   -4697,   402,  1826, -4697,   400, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697,  1814, -4697,   401, -4697, -4697, -4697, -4697, -4697, -4697,
   -2908, -1605, -4697, -4697, -4697, -4697, -4697, -4697,  1173, -4697,
   -4697, -4697,   394,  1378,  3919, -4697,   384, -4697,    75, -4697,
   -4697, -4697, -4168,   -40,  -218, -4697, -4697,    32,  3414,  -216,
   -4031, -4697, -4697, -4697, -4697, -4697, -4697,   390, -4697, -4697,
     196, -4697, -4697, -1997, -4697, -4697, -4697, -4697, -4697, -4697,
    -400,  -353,  2668, -4697, -4697, -4697,  5146, -4697,  4102, -4697,
   -2859,  2200, -4697, -4697, -4697, -4697, -4697,  2268, -2764, -4697,
   -4697, -4697,  1042, -4697, -4697, -4697,  -618,   109, -4697,   110,
   -4697,   111, -4697,   112, -4697,   114,   121,   125,   126, -4697,
     127, -4697, -4697,  -352, -4697, -4697, -4697, -4697,   128, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697,  -252, -4697, -4697,  -160,
   -4697, -4697,  -250,   129, -4697,  -225,   131, -4697,   132, -4697,
    -171, -4697,  -169, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697,  1217,  2738,  4015,  2733, -2806, -4697,  1637,
   -4697, -4697,   780, -4697, -4697,   930, -1587, -4697,  2517, -2609,
   -2594, -1156, -2583, -4697, -4697, -4697, -3224, -3211, -1391, -4697,
   -1380, -2576, -2561, -2544, -2381,   762,  1792,  1794,  1789,    15,
   -4697,   985,   344, -4697, -4697, -4697, -3601,  -103, -4697, -3889,
     576, -4697, -4697, -4697, -4697, -4696, -4697, -4697,  -179, -4697,
   -4697,  -114,  -108, -4697,   183, -4697,  2780, -4697, -4697, -2501,
    -362,  2665, -4697, -2092, -1819, -2394, -1647, -1645, -4697, -4697,
   -4697,  1220,  1815,   929, -4697,   931, -1677,   878, -3760, -4697,
   -4697,  -542, -2973, -4697, -4697, -4278, -4697, -2582,  1417, -4697,
   -4697, -2552, -4697, -4697, -4697,  1386,  1388, -3394,  2274, -1632,
   -4697,   566,   840,  -605, -4697,  -100, -4697,   884, -4697, -4697,
   -4697, -3149, -4697,   -29, -2650,   138, -4697, -4697, -3179, -3761,
   -1627, -4697, -4697, -3276, -2540,  1718, -4697, -4697,   203, -4697,
   -4697, -4697, -4697, -3335, -4697, -1683, -2215, -4697, -4697,  2767,
     359, -4697,   298,   360, -4697,   291, -3685, -4697,   348, -2223,
    2074, -4697,  3349, -3150, -2566, -4697, -4308, -1953,   611, -2338,
   -4697,   928, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -2122,
   -4697, -4697,   815,  1270, -4697,  2163,  1866, -4697,  2173, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,  2705, -4697,
     544,  -794,  2708, -4697,  2715,   570, -2521, -1160, -4697, -1138,
   -4697, -1664,  3549, -2509, -1912, -4697, -4697, -4697, -4697, -4697,
    3588, -4697, -4697, -4697,  3155, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697,  2920, -4697, -4697, -4697, -4697,  4181, -4697,  2923,
   -4697, -4697, -4697, -4697, -4697,  1397, -4697,  2319, -4697, -4697,
   -4697, -4697, -4697,  2066,  3397, -4697, -4697,    54, -4697, -4697,
   -4697, -4697,  2329, -4697, -4697,  3429,  1967, -4697, -4697,  1697,
    2355, -1832,  1142, -1191,  5252,    13,    55,     5,   706, -4697,
    3036, -4697, -4697, -2295, -4697, -4697, -4697, -4697,  4291, -1097,
   -1151, -4697, -4697,  2882, -4697,  4294,  3939,  3174,  -408,  4714,
   -4697, -1343, -4697,   -50, -4697, -4697,  -889, -4697, -4697, -4697,
    -620,   833, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697,  2443, -4697, -4697, -4697,  3253,  2491, -4697,
   -4697, -2758, -4697, -2496, -2008, -4697, -2635,   306, -4697, -4697,
   -4697, -4697, -4697, -4697,   315, -4697,    17, -4697, -4697, -4697,
   -2137, -4697, -4697, -4697, -4697, -4697, -1068, -2613, -1189, -1171,
   -4697,  4037, -4697, -4697, -4697, -3153, -4697, -2774, -4697, -4697,
   -4697, -4697, -3188, -2894, -4697, -1106,  2336,  2338,  2339,  2340,
   -4697, -4697,   -66, -4697,     6, -4697,  -159, -4697,  -184, -4355,
   -4364,   470, -4697,   746, -4697, -4697, -4697,   214,  1428,   215,
   -2061, -2436, -1289,  1871, -4697, -4697, -2196,  4080, -2106, -2142,
    1126,     3,  4234,  3695, -3213, -4697,   747, -4697,   328,  1685,
     528, -4697, -4697,  1469, -1168,  -111,   361, -3194, -4697, -1066,
     -92, -4697, -2421,   453, -2428, -2387, -2352, -2209, -2174, -4697,
   -4697,  2924,   -19, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697,  -552,    38,  -554,  5354,  3217, -4697,  2483,  4175,  4179,
   -4697, -4697,  3894,  1757,  1761, -4697, -3822, -2909, -4697, -4697,
   -4697, -1021,  4362,   798,  3720,  1190,  1769, -3032,   818, -3226,
    4188, -4697, -3646,   813,  4194,  4192, -3473,  3645, -4697, -4697,
   -4697, -4697, -4697,  3031, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697,  4392,   -43, -1460, -4697, -4697, -4697,  1585,  3774,  3035,
    -816, -4697, -4697, -4697, -4697,  4205, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697,  2479,  2097, -4697, -4697, -4697,
   -4697,  3145, -4697, -4697, -4697,  3144, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,  1781,
      71, -4697,  1122,    -4, -4697,   751, -4697, -4697, -4697, -4697,
   -4697,  -139, -4697, -4697,  -158, -2700, -1170, -1137,   877,  1021,
   -3131, -1873, -2129, -3250, -1256, -4697, -4697,   838, -3454, -3047,
     529,  -786, -1258, -1293,   715,  2276,  2844, -1551, -4697,  3830,
    -896, -1693, -2329,   955,  4035,    -6, -4697, -2642, -4697,  -155,
     120,  2067,   -71,  3118, -3752, -4697,    -9,    21, -4697,   398,
       2, -4697, -4697,   269, -4697, -4697, -4697,    96, -4697, -4697,
   -4697, -4697,  3856, -4697,  2374,  5382, -4697, -4697, -4697,  3107,
    5385,  -904,  3860,  3131, -4697,  3134, -4697, -4697, -4697, -2218,
   -4697, -4697, -4697,   161, -4697,  2473, -4697, -4697, -4697, -4697,
   -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697, -4697,
   -4697, -1410,  4420,  5393,  3960, -4697, -4697,  2326, -4697, -2146,
   -1434, -1239, -2873, -4697,  2713,  3735, -4697, -4697,  2043, -4697,
    2716,   589, -4697, -4697,   424, -4697, -4697,  1258,  4424,  3918,
   -4697, -4697, -4697, -4697, -4697,  4258, -4697,    -5,    -1, -4697,
    -449, -4697, -4697, -4697,    18,  5434,  5439, -4697, -4697,   195,
   -4697,  -840, -4697, -4697, -4697, -4697, -4697,  4202, -4697, -4697,
    4209, -4697, -4697, -4697, -4697,  4212, -4697, -4697, -4697, -4697,
   -4697, -4697,  1799, -4697, -4697, -4697, -4697, -4697, -4697,    59,
   -4697, -4697, -4697,   108, -4697,  1435, -4697,  1045,  1542,   989,
     670,  1547, -2475
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    65,    66,  1153,  2408,    67,    68,    69,    70,    71,
    2240,    72,  1452,  2175,  2905,  2906,    73,   978,   733,    74,
    1893,  1892,  2612,  2613,  3927,  4428,  4429,  3936,  4443,  3930,
    4432,  4433,  3933,  4437,  4438,  2677,  2678,  2679,  2680,  2681,
    2682,  2683,  2684,  2685,  2686,  2687,  2688,  2689,  2690,  2691,
    2692,  2693,  2694,  2695,  2696,  2697,  2698,  2699,  2700,  2701,
    2702,  2703,  4444,  4445,  3943,  3949,  3954,  3975,  2704,  2705,
    2706,  2364,    75,    76,    77,    78,  2713,    79,  4002,  2727,
      80,  3423,  3177,  3178,  1938,  4030,  4418,  5088,  4422,  5180,
    5281,  5104,  3324,  4759,  5089,  5090,  5189,  2737,  2473,  5224,
    3162,  5309,  3163,    81,  1227,  4475,  4476,  4477,  4802,  4803,
    4804,  4805,  5472,  5375,  5443,  5473,  5559,  5565,  5496,  5575,
    5576,  5577,  5563,  1523,  5578,    82,  1012,  1013,  1525,  2269,
    2920,  2270,    83,    84,   940,  2201,  2202,  2203,  2204,  3606,
    2921,  3601,  3602,  4557,  5497,  5561,  5376,  5377,  5288,  5378,
    5192,  5379,  5292,  5380,  5195,  5381,  5382,  5383,  5384,  5464,
    5385,  5287,  5489,  5372,  5373,  5466,  5537,  5556,  5386,  5202,
    5282,  5430,  5203,  5283,  5459,  5368,  5460,  5484,  5533,  5369,
    5431,  5487,  5434,  5387,  5393,  5474,  5388,  5394,  5389,  5207,
    5299,  5392,  5297,  5391,  5470,  5469,  5512,  3455,  4041,  1921,
    2722,  3400,  3401,  3402,  3180,  3181,  1784,  2893,  2894,  2895,
    3989,  3990,  3991,  3782,  3783,  3784,  2484,  3319,  3169,  1785,
    1786,  1854,  1788,  3406,  3993,  3994,  3407,  3408,  1789,  3410,
    1790,  1791,  1792,  1793,  3182,  3437,  3438,  3439,  3440,  3441,
    2402,  2403,  3728,  3090,  3725,  4633,  4247,  5341,  4254,  4306,
    4307,  4915,  5262,  5150,  5258,  5151,  5260,  5347,  5348,  5161,
    5272,  5273,  5061,  5062,  5063,  2466,  2467,  3386,  3387,  2468,
    1238,  1855,  3442,  2495,  1856,  3277,  1857,  1858,  2471,  3292,
    3262,  4036,  3814,  3815,  3816,  4356,  3817,  3204,  2503,  3806,
    3807,  4375,  3864,  4732,  5364,  3865,  3866,  3867,  3868,  3869,
    3870,  3871,  4058,  3872,  4059,  4054,  4055,  4052,  1281,  4693,
    4694,  4695,  4048,  4049,  4391,  4376,  4377,  4378,  4943,  4703,
    4722,   884,  4712,  4332,  1541,  3128,  1564,  1565,  3025,  2288,
    1859,  4333,  4334,  4335,  4385,  4121,  4833,  4380,  4357,  4941,
    5079,  5082,  5176,  5360,  3205,  1885,  3198,  1639,   755,   756,
    4974,  4975,  4976,  4979,  4980,  4981,  4926,  4927,  4928,  4929,
    3207,  2732,  4930,  4931,  3429,  4918,  4314,  4315,  4316,  3208,
    3571,  4684,    85,    86,  1761,    87,  1770,    88,  1763,    89,
    1878,  1219,    90,  2588,    91,    92,    93,    94,    95,  3030,
      96,    97,  3755,  3121,  3122,  3123,  2428,  3115,  3116,  1158,
    3325,  3918,  4962,  1200,  1860,  1861,  2582,  1862,  1863,  4955,
    1864,  3236,  1865,  1866,  1867,  1868,  3587,  3588,  3213,  3589,
    3267,  2505,  1489,  2900,  4403,  2557,    98,    99,  1169,  1170,
    1171,  1172,  1173,  1174,  1097,   100,   101,  2375,  5036,   102,
    1647,  1648,  1649,  3713,  4245,  4625,  4891,  1652,  1653,  1654,
    3073,  3711,   103,  1897,   104,  2981,  2982,  2983,   105,  4762,
    2594,   106,   107,  1904,  1905,  1906,   108,   239,   109,  1510,
    1508,  2246,  2247,   110,  1223,  1224,  2596,   111,  2955,  2956,
    1886,  1887,  4174,   112,   113,  3444,   115,   885,   117,   118,
    2280,  2281,  3006,  3007,   119,   120,  1029,  1030,  1031,  1178,
    1179,  1710,  2437,  2438,  2439,   886,   887,  1391,  1278,  1888,
     889,   890,  2127,   891,  1392,  1393,  4382,   892,  1404,  2115,
     893,  4067,   894,   895,  4138,   896,   897,   898,  4090,  4091,
    4509,  2147,  2148,  2149,   899,   900,   901,  2847,  2081,  2082,
    4132,  3559,  4531,  3459,  3460,  3553,  4884,  3555,  4126,  4127,
    4526,  4837,  5010,  5120,  5230,  5122,  5231,  5238,  5011,   902,
     903,  1380,  2012,  4083,  3507,  4498,  1957,  3492,  1889,  1890,
    1303,  1304,  1269,  2753,  1963,  3008,  4208,  3009,  3670,  3671,
    3672,  4219,  4215,  2985,  2986,  3010,  3011,  3012,  3013,  3014,
    3015,  3016,  5025,  5245,  5246,  5454,  4536,  5531,  4537,  4538,
    4539,  5029,  4602,  4603,  4604,  4605,  4606,  3333,  3334,  3335,
    4180,  3237,  2002,  2003,  2010,  2219,  2220,  1958,  2950,  1579,
    4228,  1150,  1125,  1126,  1664,  2385,  4612,  4885,  4886,  3676,
    4608,  4883,  3273,  3274,  1183,  1187,  2447,  3133,  3134,  1594,
    1595,  1730,  1731,  5048,  3278,  3150,  3225,  3183,  3151,  2970,
    1714,  1715,  1180,  1716,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,  2915,  2458,  1216,   757,  2162,  2163,  2164,   139,   140,
     983,  1006,  1513,  3638,  3639,  4186,  3640,  3446,  3642,  4192,
    1122,  2485,  2486,  4193,  1123,  2380,  2381,  2382,  4566,  4568,
     141,   142,  4182,  4183,  1007,   143,  3144,  1742,  1743,   144,
    1114,  1617,  1618,  1619,  2358,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
    1592,  1098,  1794,  1598,  1100,  1101,  1102,  1599,  2331,  3054,
    1580,   190,   191,  1754,   192,  1196,  1197,  1755,   193,  1453,
    2195,  3599,  4154,  4542,  2196,  2197,  2916,   194,  1009,  1520,
    1515,  1521,  2253,  2254,  2252,  2990,  2988,   195,   999,  1506,
    2973,   196,   988,   197,   198,   992,  2232,  1497,  4175,  3447,
    3759,  4282,  4283,  4285,  4655,  4656,  5332,  5480,  5522,  5505,
    5525,  5526,  5529,  5548,  5549,   904,  1667,   905,  4713,  4714,
     906,   907,   908,   909,   910,   911,  4494,  4187,   912,  2448,
    4609,   913,  4184,   914,  3017,  2459,   723,  4439,  4440,  1159,
    1668,  2441,  2293,  4266,  1394,  1137,   968,  5209,  1049,  1161,
    1556,  1162,  2167,  1557,  2934,   725,   726,   727,  5210,   728,
     729,   972,  1054,   730,   199,  1055,   200,  2302,   201,  3691,
    3692,  1570,  1574,  2317,  2318,  2319,  1103,  2098,  2311,  1571,
    2320,  1058,  1549,  1550,  2300,  1551,  2298,  1552,  3035,  2329,
     202,   995,  1500,   736,  2236,  2237,  3625,   203,  1119,   204,
     205,   206,  1208,   207,  2224,  2948,  2949,   208,  2272,   209,
    2206,  2215,  1456,   974,   975,  2937,  3110,  2423,  2424,  2935,
    2168,  1558,  3685,  1700,  1925,  1164,  1926,  1165,  1467,  2209,
    1703,  4562,  4159,  5127,  4853,   210,   240,   739,  1236,  1911,
    2277,   211,   212,   213,   214,  1725,   917,  3018,   918,  1032,
    1257,   758,  1947,  1939,   233,   234,   235,   761,   762,   236,
    1876,  1877,  4423,  4964,  5092,  5314,  5315,  1941,  5403,  1942,
    1943,  4031,  4989,  5399,  5477,  1944,  3452,  4480,  5107,  5311,
     215,  1673,  1669,  1135,  2396,  2390,  2392,   216,   217,  1492,
     218,   219,  5041,  5042,  4017,  2587,  3909,  3910,  3265,  3322,
    3914,  2902,  3191
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     724,  1099,  1425,   121,  1184,   116,  1749,  1136,  1430,   916,
    2017,  1927,   936,   114,  1047,  1096,   977,  1542,  1546,  2442,
    1305,  1623,  1736,   971,  1188,   998,  1163,  1719,  1756,  3425,
    3136,  3137,  1014,  2968,  1050,  1019,  2577,  1575,   722,  2959,
    1014,   971,   970,  1112,  3714,  1053,  2216,  1120,  1732,  1127,
    2377,  1688,  2160,  1869,  2602,  1142,  1787,  2063,  3617,  1143,
     970,  2114,  2922,  2161,  1051,  2843,  2844,  3877,  2969,  1149,
    2923,  2892,  1211,   937,  1140,  1870,  3641,  1148,  2853,  2854,
    2855,  3898,  2951,  1721,   997,  3232,  3104,  3234,  3760,  1003,
    3562,  1160,  2062,  4063,  2274,  3251,  3246,  1189,  3049,  3303,
    3304,  1966,  1967,  2005,  4379,  4374,  3192,  3495,  3187,  3188,
    2084,  3496,  2504,  3403,  2469,  3919,  2470,  1726,  2502,  2275,
    4250,  1735,  4292,  3673,  4398,  4399,  1191,  3905,  3404,  2998,
    2019,  3980,  2533,  2510,  2472,  3647,  3296,  2514,  2951,  3405,
    3298,   969,  2032,  2033,  2034,  2351,  3412,  1264,  2036,  3497,
    2556,  2534,  1572,  2429,  2431,  2432,  3566,  3600,  3686,   969,
    3195,  3413,  2361,  2546,  3710,  3430,  3995,  3145,  3293,  3294,
     737,  3031,  3490,  4844,  3019,  2365,  1190,  4435,  3414,  3996,
    3490,  2368,  4843,  4188,  1232,  1234,  1112,  2072,  2488,  3305,
     996,  4565,  3269,  3270,  1811,  1002,  2218,  1959,  1960,  1961,
    4797,  3131,  3491,  4383,  1384,  1385,   763,  3554,  1971,  2170,
    3491,  2898,  3388,  1118,  1483,  1201,  2725,   724, -2380,  3753,
     724,  1160,  1212,  1112,  1898, -1085,  1059,  1427,  3085,  2083,
    3656,  3735,  1894,  2592,  2218,  1384,  1385,  1112,  2835,  2025,
    3432,  2415,  2029,  2363,  1427,  3087, -2216,  1384,  1385,  1590,
    4755,  3461,  3462,  3463,  1220,  1203,  1372,  1373,  1210,  1374,
    1427,  2046,  2047,  3117,  2363,  2051,  3416,  1235,  3499,  1384,
    1385,  1880,  1426, -2976,  1624,  1625,  1626,  1627,  1628,  2092,
    1630,  4407,  4770,  2065,  2066,  3201,  3200,  2751,  2070,  2071,
     973,  1384,  1385,  3515,  4291,  1528,  2285,  3517,  3895,  1384,
    1385,  2279,  3141,  2091,  1384,  1385,  1384,  1385,   973, -1100,
    3132,  1258,  2969,  3525,  3526,  2969,  2969,  1471,  5261,  3532,
    1215,  1384,  1385,  1105,  1974,  1384,  1385,  5024,  2971,  4644,
    1811, -1879,  2218,  2720,  3878,  3544,  3545,  1601,  4152,  3263,
    3687,  1899,  1384,  1385,  3551,  1900,  3799,  3915,  1912,  2451,
    1176,  1384,  1385,  1192,  5014,  1811,  1384,  1385,  3622,  1901,
    4919,  -732,  3568,  4575,  4630,  1435,  1436,  1437,  4032, -1879,
    1440,  1441,  4344,  1279,  1444,  1577,  1446,  1447,  1448,  4262,
    1450,  1384,  1385,  4264,  1539,  1109,  -733,    42,  1249,  1250,
    1384,  1385,  1254, -2976,  3594,  1384,  1385,  5432,  4326,  1811,
    1221,   986,  4505,  3744,  5425,  5294,  3768,   989,  4641,  3549,
    4327, -1993,  4678,  1778,  3202,  2978,  1645,  1940,  1948,   241,
    -604,  1175,  1796,  5323,  4328,  1384,  1385,  1384,  1385,  4269,
    5039,  3023,  4336,  -588, -2880,  1175,  1061,  1034,  1181,  1495,
    1285,  1052,  3433,  1347,  3761,   241,  1384,  1385,  2827,  -632,
    1061,  1034,  1578,  5259,  1514,  2936,  5263,  -621,  2295,  -974,
      49,  4225,  4350,  4351,  1384,  1385,  1384,  1385,  2565,  2476,
    1723,  1955,  1384,  1385,  1474,  1529,  4416,  3757,  1175,  -745,
    4220,  4699,  1384,  1385,  1895,  1708,  2394,  1176,  1175, -1879,
    1642,  4015,  4033,   241,  1955,  1902,  1650,  3623,  1384,  1385,
    2812,  2465,  1981,  1384,  1385,  3326,  1503,   243,  4207,  4211,
    3394,  2111,  1177,  3907,    54,  1139,  1305,   738,  4222,  4223,
    1247,  4564,  1882,  4020,  4700,  1175,  1177,  1000,  1384,  1385,
    1176,   990,  5324,  1384,  1385,  2144,  2145,  1719,  1384,  1385,
    2312,  3547,  1384,  1385,  1428,  2969,  1909,  4701, -2977,  4270,
    1883,  2316,  2886,  2730,  1343,  2552,  1384,  1385,  2887, -2380,
    3785,  1428,  4338,  4342,  2580,  1243,  4343,  5295,  3548,  1177,
    1719,  1643,  1387,  4326, -2150,  1388,  2731,  1428,  1484,  1177,
    1384,  1385,  4922,  1651,  4352,  4327,  4702,  5432,  4016,  1242,
    1085,  1709,  3424,  1903,  3886,  1384,  1385,  1724,  1956,  4328,
   -1879,  1933,  1606,  1387, -1879,  4966,  1388,  4038,  2553,  4009,
    1665,  1061,  1034, -1879,  1640,  1387,  1177,  4374,  1388,  4417,
    1646,  1970,  1384,  1385,  4799,  1910,  3327,  2256,  2899,  1106,
    1384,  1385,  3662,  2897,  4800,  1384,  1385,  1387,  3203,  3697,
    1388,  -974,  -745,  2477,  3142,  1384,  1385,  1496, -2151,  5419,
    5426,  3684,  3557,  1182,  3690,  5276,  4634,  3906,  4436,  1387,
    2566,  3118,  1388,  2304,  4271,  3729,  3435,  2979, -2977,  1879,
    2455,  2456,  1387,  1780,  1387,  1388,  4394,  1388,  1286,  4034,
    3684,  2332,  3590,  3739,  3740,  3741,  3742,  2239,  5325,  1387,
    3879,  1106,  1388,  1387,  2554,  1824,  1388,  2593,  2395,  3682,
    3683,  3695,  3723,  1107,  1141,  4599,  2465,  3624,  3641,  3655,
    1387,    42,  4506,  1388,  4103,  4381,  5109,  2969,  4039,  1387,
    3662,  2296,  1388,  3745,  1387,  1540,  1381,  1388,  2898,  4395,
    1112,  1112,  3751,  3752,  1578,   241,  1344,   976,  1160,  3780,
    1245,   987,  3506, -1879,  4600,  3890,  3792,  1692,  5296,  1387,
    2089, -2976,  1388,  3916,  3800,  4862,   938,  1934,  1387,  5165,
    1472,  1388,  1975,  1387,  1111,  2160,  1388,  4923,  3264,  1882,
    2752,  1384,  1385,  1600,  4488,  2896,  2161,  4801,  3643,  1259,
    4153,  3992,  2346,  5040,    49,  1289,  2349,  2452,  2120,  1143,
    1935,  2353,  1666,  1387,  4035,  1387,  1388,  1883,  1388,  2763,
    1306,  5257,  3592,  4133,  1166,  4135,  2951,  3746,  2143,  1602,
    1952,  5094,  5095,  2969,  1387,  4291,  3197,  1388,  3197,  2469,
    5105,  2470,  3674,  1486,   749,  1429,  2369,  2370,  5223,  2416,
    1530,  1193,  1387,  1390,  1387,  1388,  1881,  1388,    54,  2472,
    1387,  2776,  3614,  1388,  3565,  4322,  3764, -1879,  3902,  3883,
    1387,  2980,  3884,  1388,  3417,    55,  3688,  2922,  4259,  4957,
    3798,  4263,  3801,  3346,  1390,  2923,  1387,  -745,  4287,  1388,
    1896,  1387,  1088, -2380,  1388,  1160,  1390,  1382,  2951,  2972,
    5367, -1085,  1395,  1543,  3357,  1377,  3985,  4209,  2744,  3754,
    5015,  1561,  1566,  1376,  1932,  2169,  1387,  2173,  1390,  1388,
    2761,  1387, -2216,  1896,  1388,  2726,  1387,  1198,  4396,  1388,
    1387,  1593,  1481,  1388,  3677,  3443,  1438,  4125,  1383,  3142,
    1390,  1443,  3940,  2859,  1387,  3945,  4645,  1388,  1390, -2976,
    1509,  3956,  4345,  1390,  1088,  1390,  3961,  3962,  3963,  3964,
    3965,  1719,   991,  3762,  1213,  1384,  1385,  3972,  1387,  2238,
    1390,  1388,  3979, -1879,  1390,  3982,  2788,  1260,  1225,  2249,
    2792,  1485,  4044,  1387,  3086, -1100,  1388,  2494,  3950,  5337,
    2856,  1390,  1160,  1896,  3731,  4329,  1504,  4047,  1490,  1896,
    1390,  3088,  2814,  4136,  4573,  1390,  4586, -1879,  4673,  4679,
    1387,  3810,  1475,  1388,  1507,  1160,  3119,  3120,  1387,  4142,
    4330,  1388,  4073,  1387,  4074,  2865,  1388,  3347,   753,  1936,
    1390,  1384,  1385,  1387,  4435,  5326,  1388,  -732,  4092,  1390,
    4093,  1717,  2857,   916,  1390, -1879, -2977,  2836,  1141,  4591,
    4592,  2837,  1160,  3984,  4499,  4107,  4991,  1687,  2591,  2093,
    1160,  1160,  -733,  2094,  1248,   971,  1244,  1050,  4588,  1384,
    1385,  1687,  1768,  1896,  1390,  4682,  1390,  1188,  1053,  5304,
    1160,  2828,  3038, -2150,   970,  4686,  2469, -1993,  2470,  2494,
    5458,  4139,  3358,  4689,  1607,  1390,  -604,  1051,  2494,  1184,
    1737,  1167,  2417,  2743,  2494,  4040,  2472,  4011,  1345,  -588,
   -2880,  2494,  2494,  1390,  2406,  1390,  1451,  3747,  2093,  1738,
    2762,  1390,  2780,  1641,  2406,  -632,  3698,  2494,  1112,  1657,
    4737,  1390,  2741,  -621,  3558,  2494,  2555,  2813,  1127,  1384,
    1385,  2742,  1875,  4674,  4188,  3620,  4601,  1390,  1384,  1385,
    1189,  1762,  1390,  5277,  2816,  2494,  3415, -2151,  2817,  1387,
    4484,  4973,  1388,  2833,  1429,  2899,  1681,  2834,  1691,  1229,
    4329,  5532,  2767,  3951,  1376,  1191,  1907,  1390,  1501,  1720,
    3875,  3876,  1390,  1427,  1511,  1384,  1385,  1390,  5552,  2604,
    1160,  1390,  2478,  3573,  3100,  1658,  1937,  3574,  1924,  1733,
    4698,  1429,  3999,  1121,  4047,  1390,  2768,  4078,   939,  1185,
    2371,  4079,  1757,  5308,  1534,  -408,  1160,  4181,  1764,  1765,
     121,  1160,   116,  1769, -2977,  1190,  3875,  3876,  1871,  1390,
     114,  1873,   724,  4711,  1955,  1112,   237,  2969,  3080,  5516,
    2335,  2773,  1891,  2778,  1390,  1634,  3995,  4381,  3805,  5362,
    2866,  4715,  1913,  1914,  1915,  5068,  2786,  1918,  4086,  3996,
    1922,  4484,  4087,  1160,  4734,  1928,  4318,  4319,  1930,  1931,
    1874,  1390,   971,  4924,  4925,  2063,  4105,  1431,  4144,  1390,
    4106,   979,  4145,  4715,  1390,  3621,  1384,  1385,  2779,  3028,
    2037,   970,  2142,  2418,  1390,  1694,  4576,  1539,  2782,  1384,
    1385,  2962,  1306,  1384,  1385,  1188,  2158,  3131,  4246,  1168,
    3275,  1701,  3060, -2141,  2794,  1252,  1306,  5520,  1018,  2799,
    1181,  5103,  3946,  1377,   238,  1384,  1385,  3597,  4485,  4008,
    5363,  1376,   973,  1387,  1732,  1732,  1388,  1384,  1385,  4330,
    1008,  4922,  2211,  3453,  2803,  1427,  4922,  3451,  1787,  2804,
    4104,  3409,  1787,  1113,  4621,  4582,  3748,  3749,  2806,  1787,
    4857,  2024,  3411,  1479,  2064,  3454,  1335,  2963,  5225,  5356,
    4026,  3912,  2807,  4137,  2978,  2116,  2117,  4614,  4615,  2121,
    2085,  4274,  2122,  2123,  2124,  1695,  3913,  2128,  2129,  2131,
    2133,  2134,  2135,  2136,  2137,  4293,  2811,   916,  2964,  1387,
    2103,   993,  1388,  1384,  1385,  3644,  3645,  4636,  4637,  1635,
    4486,  2829,  3600,  4639,  2006,  4642,  3132,  2007,  2210,  3403,
    1390,  3730,  2119,  1117,  4261,  3493,  1143,  3047,  4268,  4485,
    1339,  2212,  4304,  2924,  3404,  1572,  5308,  1387,  2846,  2873,
    1388,  1160,  2867,  1869,  1869,  3405,  2850,  2756,  2151,  2152,
     724,  2154,  3412,  2156,   724,  1160,  1539,  2760,   724,  2166,
    1160,  1112,  3952,  2171,  2172,  1870,  1870,  3413,  2205,  2965,
     971,  1233,  1233,  2372,  1052,  4492,  2273,  4199,  4944,  4945,
    2208,  4157,  5306,  1160,  3414,  4310,  4286,  1908,  2153,   970,
    1544,  1160,  2157,  2290,  1160,  4234,  2165,  4224,  2223,  2225,
    1428,  1230,  5242,   971,  4424,  4425,  3490,  1387,  1384,  1385,
    1388,  4490,  2577,   984,  1112,  1112,  1387,  3609,  1222,  1388,
    5521,  2160,   970,  4196,  1112,  1112,  4923,  1112,  2251,  1350,
    4446,  4923,  2161,  2282,  3703,  1186,  3491,  2341,  3607,   973,
    2881,  1160,  1160,  3197,  4532,  1384,  1385,  2504,  3572,  1121,
    2286,  2966,  2350,  1387,  1516,  3058,  1388,   971,  1160,  1384,
    1385,  2412,  4861,  5254,  1047,  3063,  2226,  3426,  1480,  3066,
    4951,  4130,  3069,  2305,  4134,  3490,   970,  2719,  2443,  4230,
    4231,  2313,  2951,  3650,  1050,  2479,  1787,  4084,  4947,  2421,
    1384,  1385,  2736,  2417,  1390,  1053,  5415,   724,   724,   724,
    1112,   724,  1160,  1112,  1336,  3491,  3649,  3577,  3578,  1188,
    2084,  -817,  2463,  2347,  1051,   724,  4735,  1160,  4237,  4233,
     724,   969,  1384,  1385,  4374,  2891,  2979,  3704,  3705,  2859,
    4260,  4487,  2404,  3953,  2198,  2336,  2337,  2338,  1540,  2340,
    4462,  2903,  2951,  3699,  4460,  4461,  2504,  2533,  4523,  5020,
    2213,  2425,  2502,  2348,  1387,  1253,  3524,  1388,  2352,  2868,
    1390,  1702,  1428,  5021,  3432,  3432,  2534,  1387,  1340,  1432,
    1388,  1387,  3109, -2141,  1388,  2869,  1127,  2386,  4289,  2343,
    5076,  1748,  5078,  1384,  1385,  5357,  3947,  3948,  4863,  1720,
    1228,  2397,  1204,  1387,  4533,  1115,  1388,  1160,  1390,  1384,
    1385,  1085,  4683,  1176,  4297,  1387,  1596,  1205,  1388,  2095,
    1160,  4301,  3785,  2620,  2621,  4522,  1160,  3583, -3042,  3027,
     994,  3494,  1264,   735,  2526,  1384,  1385,  1160,    25,  2083,
    2538,  4534,  4487,  1185,  1384,  1385,  3427,   973,  5227,  1384,
    1385,  2344,   734,  1689,  1698,   735,  3220,  5069,  1185,  1517,
    2449,  5146,  3247,  4519,  1384,  1385,  2460,  2769,  1597,  2453,
    2469,  1160,  2470,  4881,  3257,   985,  1410,  1411,  1390,   816,
     973,  1387,  2967,  2504,  1388,  5542,  5007,  1390,  2474,  2475,
    2472,  5124,  2096,  1141,  2418,  4898,  5358,  4899,  1384,  1385,
    5312,  3550,  4999,  4840,  4719,  3299,  2214,  1540,  3786,  -664,
    1481,  1547,  3678,  3679,  3680,  1384,  1385,  4172,  4720,  3787,
    2980,   731,  3221,  5172,  1390,  1384,  1385,  5359,  3939,   788,
    3941,  1384,  1385,  3096,   973,  4298,  3331,  4085,  5008,  3957,
    3958,  3959,  3960,  4533,  1699,  4216,  2962,  4411,  3966,  3967,
    3968,  3969,  3970,  3971,  1181,  3973,  3976,  3977,  3978,  1656,
    2579,  2969,  2969,  3983,  4653,  1384,  1385,  2637,  2638,  1181,
    2730,  3992,   816,  2962,  4736,  4098,  4617,  4738,  4217,  1739,
    4534,  4963,  1384,  1385,  3433,  3433,  1387,  2008,  1545,  1388,
    2009,  1384,  1385,  2731,  1778,   793,  5233,  2527,  4654,  4632,
    1758,  1139,  2419,  2539,  2597,  1112,  2306,  2581,  1882,  3102,
   -2057,  5169,  2963,  4643,  3616,  4869,  1384,  1385,  4647, -3042,
    1112,  1151,  4158,  1387,  3222,  1390,  1388,  5147,  4450,  3875,
    3876,  1427,  4454,  1776,  3875,  3876,  1883,  1387,  1390,  2963,
    1388,  1740,  1390,  2964,  2345,  4109,  2871,  1384,  1385,  4882,
    4535,   367,    36,   369,  4110,  2851,  1112,  1116,  2896,  2738,
     724,   724,   732,  4638,  1390,  3974,  1233,  1955,  1387,   724,
    3146,  1388,  5361,  2863,  1535,    42,  1390,  1384,  1385,  2307,
    2754,  4401,  1384,  1385,  2755,  4278,  1384,  1385,  1548,    42,
    4414,  4585,  1384,  1385,  3097,   840,  4279,   805,  2739,  2740,
    1387,  1052,  1518,  1388,  1384,  1385,  3223,  2097,  1152,  1578,
    4721,  1384,  1385,  1206,  2965,  3428,  1384,  1385,  3696,  3604,
    3422,  5313,  4924,  4925,  5173,  3581,  3701,  4924,  4925,  3997,
    1384,  1385,  1384,  1385,  1519,  4820,  1384,  1385,  5009,  4415,
    3998,  3147,  1390,  1154,  1207,  5134,  1306,  2787,    49,  1384,
    1385,  1384,  1385,  1139,  2896,  1955,  3693,  5043,  1384,  1385,
    4934,  1387,    49,  4447,  1388,  1778,  1384,  1385,  1406,  1186,
    3103,  1085,  2420,  1884,  1934,  2925,  1741,  1387,  4453,   821,
    1388,  1384,  1385,  4218,  1186,  1384,  1385,  2922,   840,  4535,
    2421,  5135,  4822,  1766,  2028,  2923,  2966,  4776,  4777,  5233,
    2897,  2770,    54,  1387,  1160,  2874,  1388,  1945,  3435,  3435,
   -2057,  3763,  1387,  3422,  2961,  1388,    54,  1387,  2878,    55,
    1388,  2882,  1160,  3148,  1384,  1385,  4235,  2777,  1384,  1385,
    3605,  1767,  1387,    55,  5174,  1388,  1536,  1759,  4561,  2790,
    2870,  1384,  1385,  3131,  1143,    42,    42,  1390,  1004,  3396,
    1429,  5482,  5483,  1377,  1780,  4528,  1199,  4529,  4402,  5129,
    3091,  1376,  3026,  1760,  2880,   241,  1387,  4787,  1143,  1388,
    1395,  1384,  1385,  4935,  2951,  2951,  1384,  1385,  3039,  1112,
    2951,  2422,  2050,  1387,  1390,  3259,  1388,  2658,  2659,  4573,
    5052,  4724,  1233,  1387,  2308, -2141,  1388,  1112,  1390,  1387,
    1384,  1385,  1388,  2974,  2975,  2791,  2886,  3092,  4163,  4013,
    4657,  4658,  3083,  5053, -2057, -3042,  4659,  4280,    49,    49,
    5136,  5214,  1112,  1306,  1160,  4346,  2969,  3224,  4347,  1390,
   -2141,  2896,  5215,  1387,  1384,  1385,  1388,  4472,  2924,  2933,
    1176,  4690,  1085,  2938,  4381,  2235,  1233,  4197,  1428,  2292,
    1387,  1112,  3132,  1388,  1112,  2248,  1233,  2292,  2250,  1387,
    3564,  1390,  1388,  1160,  2292,  3260,  4143,  5285,  1160,  1160,
    1185,  1409,    54,    54,  1776,  3736,  4838,  1689,  1384,  1385,
    4949,  4950,  2757,  3575,  1387,  3576,   367,  1388,   369,    55,
      55,  3105,    64,  4455,  4456,  4457,  1384,  1385,  4236,  2933,
     848,  2999,  3737,  1112,  2969,  2969,    64,   980,  1143,  1776,
    2795,  1160,  1209,  1005,  1175,  1387,  2897,  2967,  1388,  1717,
    3537,  3064,  1390,  1384,  1385,  1780,  1936,  1160,  1384,  1385,
     881,  2339,  1050,   971,  2342,  4761,   971,  1202,  1390,  4691,
    1050,  4893,  4900,  1053,  3149,  1387,  1406,  2802,  1388,  2309,
    1387,  1053,   970,  1388,  1387,   970,  4839,  1388,  1214,  3056,
    1387,  2805,  1051,  1388,  1390,  1215,  1176,  3261,  2310,  3620,
    1051,  2063,  1387,  1390,  2063,  1388,  4446,  4027,  1390,  1387,
    4662,  1181,  1388,  4692,  1387,  4666,  1160,  1388,  4894,  4669,
    1112,  1112,  2808,  1390,  1218,  1128,  1384,  1385,  1387,   981,
    1387,  1388,  4281,  1388,  1387,  1177,  1778,  1388,  1955,  4189,
    4010,  3255,  3079,  1406, -2057,  4290,  1143,  1387,  4267,  1387,
    1388,  4870,  1388,  1217,  2820,  4786,  1387,  1390,   222,  1388,
    1413,  1414,  5286,  4141,  1387,  3399,  5004,  1388,  1144,  1875,
    1160,  1778,  1129,  3127,  1390,   971,  2138,  3750,  3302,  1387,
    5216,  2951,  1388,  1387,  1390,  3880,  1388,  1228,  2460,  4149,
    1390,  2450,  1141,  1141,   970,  -664,  1685,  2494,  1160,  4181,
    2454,  4181,   982,  2579,  4697,  1733,  1733,  1145,  2758,  4465,
    4148,  3140,  2604,  5097,  3155,  2838,  1112,  4854,  5100,  1384,
    1385,  1143,  1387,  1937,  1390,  1388,  1387,  1384,  1385,  1388,
    3156,  2845,  3124,  3464,  1226,  2063,  4466,  5517,  3896,  1387,
    3987,  1390,  1388,  3883,  4745,  3189,  3899,  1130,  1231,  4716,
    1390,  3903,  3196,  3244,  1235,  3138,  5518,  2848,  3209,  3211,
    3214,  3215,  3216,  3217,  3218,  2090,  3084,  1239,  3233,  1387,
    3238,  4043,  1388,  1237,  1387,  1390,  4790,  1388,  3663,  1409,
    3238,  4716,  3248,  3249,  2507,  3238,  4077,  3253,  3254,  1430,
    1160,  3256,  3238,  1240,  2497,  1466,  5584,  3268,  1387,  1477,
    3271,  1388,  2064,  5289,  5290,  3539,  1390,  3281,  4165,  2508,
    3282,  1112,  4977,  1085,  3199,  4210,  1241,  4982,  5318,  3170,
    4080,  3297,  1246,  3238,  4221,  3219,  1186,  1160,  4420,  5236,
     973,  3239,  1387,   973,  1251,  1388,  1390,  4088,  1384,  1385,
    1256,  1390,  5221,  4421,  1112,  1390,  1409,  4094,  1085,  3579,
    4799,  1390,   220,  4095,  3238,  3336,  2599,  5167,  5168,  1255,
    4800,  3272,  1543,  1390,  2063,  3280,  1543,  1697,  1061,  1034,
    1390,  2707,  3284,  3285,    42,  1390,  1387,  3409,  2578,  1388,
    1698,   734,  3634,   220,   735,  3396,  5148,  4096,  3411,  1390,
    3032,  1390,  2139,  5412,  1387,  1390,  1780,  1388,  2504,  3275,
    3988,  2759,  3157,  5166,  4097,  2604,  3541,  2734,  1390,  2962,
    1390,  3033,  3443,  4099,  1261,  1924,  3664,  1390,  2140,  2107,
    4716,  1387,  3808,  1262,  1388,  1390,  1387,  1773,  1263,  1388,
    1430,  1780,  3171,  3873,  3874,  5320,  3665,  2781,  4102,  1265,
    1390,  1266,   973,  2781,  1390,  4807,  5239,    49,   740,  3666,
    4977,  4828,  1267,  3034,  4982,  2509,  1417,  1418,  1419,  1420,
    1421,  1422,  1423,  1424,  1270,  5321,  1011,   222,  1112,  1052,
    1699,  1406,  1112,  1772,  1011,  2963,  5240,  1052,  3396,  3158,
    1160,  2399,  2783,  1390,  2400,  1774,  2604,  1390,   734,  3448,
     724,   735,  1773,  1773,  1387,  3513,  2435,  1388,  2436,  3445,
    1390,  3635,  3636,  4801,  4108,  3159,  3146,  1131,  4111,  3595,
    1271,  1160,  4977,  4482,  4113,  1160,  4739,  4982,    55,  4741,
    4742,  4583,  1636,  1637,  1272,  5449,  4115,  1273,  3449,  1132,
    1390,  5269,  3667,  4117,  1274,  1390,  5406,  1001,  4118,   741,
    2784,  5506,  1275,  4326,  2022,  1776,  4495,  4496,  1276,  1638,
    1774,  1774,  4119,  1429,  4516,  4327,  1061,  1034,  4517,  1390,
    1383,  2796,  5475,  5475,  1773,  2604,  2578,  3160,  1434,  4328,
    1133,  4518,  4511,  4587,  5026, -1024,  5027,  3147,  3397,  3154,
    4667,  1061,  4339,  1277,  2141,  3398,  3593,  1387,  4818,  3663,
    1388,  1846,  5012,  1390,  1847,  1387,  3556,  2797,  1388,  1280,
    2085,  2604,  1439,  4821,  3172,  1410,  1411,  4827,  1442,  2798,
    1775,  2108,  1787,  2604,  3173,  1445,  2800,  4276,  4277,   915,
    2604,  3174,  1774,  2841,  4050,   966,   742,  2604,  2929,  1449,
    2889,  1134,  2930,  2401,  2063,  3077,  1719,  1390,  1776,  3078,
    1282,  3585,  3586,   966,  1377,  4065,  4829,  1048,  1233,  4238,
    4830,  1160,  1376,  5220,  3668,  1390,  3498,  1283,  1160,  3148,
    2604,   915,  1138,  4781,  4782,  4783,  4784,   915,  1284,  3161,
    3786,  3399,  4500,  1233,  1409,  2205,  4504,  1778,  4878,  4879,
    2205,  3787,  1390,  3226,  3608,  1160,  3276,  1390,  2969,  1670,
    1671,  3637,  1674,  4831,  1675,  5248, -2141,  3569,  4832,  1384,
    1385,  2604,  2952,  1776,  1776,  2957,  1387,  5267,  5268,  1388,
    1454,  3795,  1287,  5416,  1112,  3796,  3226,  1061,  1034,  3295,
    1773,  4146,  4921,  1777,  4100,  3175,  3669,  3664,  2604,   743,
    1112,  1112,  1543,  1288,  4541,  1455,  1419,  1420,  1421,  1422,
    1423,  1424,  2969,  2969,  3317,  3318,  3987,  3665,  1306,  3227,
    3445,  1160,  3875,  3876,  1290,  1390,  5084,  3653,  1112,  1470,
    3666,  1143,  1473,  1143,  3399,  1291,  1405,  1476,  1292,  1377,
    1778,  3396,  1478,  2962,  1293,  1776,  4273,  1376,  1774,  1294,
    3228,  1047,  3227,   971,   971,   971,  4320,  3663,  1777,  1777,
    4321,  1608,  1295,  3226,  2434,  2435,  3720,  2436,  3722,  3797,
    5086,  1050,   970,   970,   970,  1421,  1422,  1423,  1424,  3111,
    3112,  1160,  1053,  3228,  3113,  3114,  4471,  1457,  5113,  3997,
    4321,  1609,  3176,  2962,  1464,  4540,  4646,  1296,  2109,  2604,
    3998,  1051,  3715,  1413,  1414,  1778,  1778,  3585,   744,  2963,
    1468,  3067,  3068,  3667,  2110,  5278,  4441,  4442,  1390,  1543,
    1582,  3229, -2141,  1317,  1085,  1297,  1390,  -815,   745,  3227,
    1777,  4563,  5554,  5555,  4577,  3076,  4595,  2497,  4578,  1300,
    3146,  3397,  1610,  1334,  1406,  5564,  1611,  1301,  3398,  4626,
    3149,  1160,  2498,  4627,  3229,  4849,  1348,  1349,  4628,  2963,
    3228,  5564,  4627,  1307,  4046,  1112,  2460,  3767,  4664,  1308,
    1143,  2218,  4665,   746,  1309, -1990,  3988,  1778,   747,  1583,
    4868,  3026,  1543,  3313,  3316,  4671,  1779,  5564,  3778,  4672,
    3146,  1310,  1406,  4574,  4763,  3664,    42,  4685,  4764,  1465,
    4765,  1776,  3139,  3230,  4766,  1311,  3226,  1780,  4685,   748,
    1406,  3147,  1584,   749,  1312,  3665,  -815,  1085,  1160,  4768,
    1313,   750,  3196,  4769,  3196,  1314,  2497,  1315,  3666,  3209,
    1469,  3229,  1108,  1110,  3818,  3668,  3230,  1390,  2053,  2054,
     768,  2498,   220,  3238,  1487,  4771,  3286,  4325,  3287,  4772,
   -1879,  1406,  1407,  1318,  2366,  2367,  -815,  3881,  4871,  1020,
    4773,  3147,  2499,   751,  4774,  2620,  2621,  4000,  1160,    49,
    1482,  1406,  3227,  4775,  3889,  4780,  1319,  4672,  1408,  4672,
    4349,  1320,  1085,  1085,  1488,  4810,  1777,  1321,  4354,  4813,
    4823,  3288,  4012,  3148,  2604,  4388,  3238,  1322,  1882,  1498,
    1780,  1612,  3283,  3228,  3238,  1323, -1879,  3669,  3238,  3238,
    2063,  3667,  4846,  3230,  3289,  2063,  2604,   752,  4705,  1406,
     973,   973,   973,    54,  1112,   788,  1883,  3399,  5390,  1324,
    1160,  1160,  4895,  1778,  4597,  3328,  4665,  4913,   221,  1325,
      55,  4672, -1879,  3148, -1879,  -815,  1326,  1409,  4917,   768,
    4189,  2499,  4672,  3290,  1085,  4920,  1406,   222,  1327,  4672,
    1328,  2597, -1879,  1329,  -973,  1780,  1780, -1879,  1410,  1411,
    4358,  1676,  1330,  4596,  3229,  1406,  1160,  1331,  1332,  1613,
    1898, -1879,   792,  1188,  1494,  4936,  1021,  1882, -1879,  4937,
    4329,   793,  1333,  1337,  1338,  1409, -1879,   753,   754,  1417,
    1418,  1419,  1420,  1421,  1422,  1423,  1424,  -815, -1879,  2637,
    2638,  4340,  3862,  1409,  4359,  1883,  1160,  1406,  4360,  1781,
    4361, -1879,   798,  1341,  3231,  4938, -1879,  4705,  1342,  4937,
     223,  1585,  2498,  3668,   788, -1879,  4986,  1780,  2924,    42,
    4672,  1160,  5066,  1614,  1412,  5087,  5067,  4167,  5099,  4665,
     971,  1346,  3796,  1350,  1409,  1112,  3230,  3231,  1112,  3389,
    3818,  5142,  1010,  3393,  1782,  5462,  1022,  3445,  4362,   970,
    1351,  1681,    42,   224,  1409,  1352,  3445,  3445,  1052,  1376,
    -815,  1353,  3445,  5170,  1781,  1781,  1354,  5171,  3707,  3708,
    3709,   792,  1355,   805,  4958,  5334,  1458,  1899,  5339,  5335,
     793,  1900,  3924,  1356, -1879,  3669,  1413,  1414,  4903,  4904,
    1085,  4906,    49,  1141,  3149,  1901,   225,  1357,  1358,  1415,
    4910,  4911,  1409,  1359,  5511,  2801,  5513, -1879,  5342,  1782,
    1782,   798,  4627,  1360,  3231,  5344,  5353, -1879,  1361,  5345,
    5354,  1362,  5535,  5420,  5546,    49,  -973,  5421,  5547,  1363,
    1364,  1365,  2500,  1366,  1413,  1414,  1781,  1367,   816,  1409,
     768,  1368,  1369,  1370,  3149,  1615,  3635,  3636,  1499,  -815,
     819,  4598,  1413,  1414,   820,   821,  3556,  1586,  1409,  1459,
    1371,  2501,  1433,    55,  1460,  1466,  5570,  5571,  4179,  1502,
    1512,  1524,  5343,  1780,  4140,  1522,  1527,  1534,  1587,  3635,
    3636,  1782,   805,  1559,  1567,  3291,  -994,  1616,  1573,  1576,
    1581,  1185,  2528,  1413,  1414,  1603,    55,  1604,  1605,  1620,
    1409,  1621,  2497,  1588,  1622,  1629, -1879,  1461,  4815,  1631,
    1633,  2933,  1632,  1413,  1414,  4162,  1160,  2529,  4705,  1589,
    1485,   915,  1112,  1462,  1659,   788,   915,  1660,  1662,   226,
   -1879,  1902,  3445,  1160,  1672,  1663,  1677,  3238,  2064,  1678,
    1679,  4190,  1680,  1682,  1683,  1684,  -815,   816,  1686,  1463,
    2501,  1690,  1681,  2933,  3663,  1160,   915,  3231,  1693,  1696,
    1376,  1413,  1414,   820,   821,  1112,  1112,  1704,  1705,  1706,
    1143,  1143,   915,  1707,  1112,  1112,  1112,  1718, -1879,  1143,
    1143,  1143,   792,  1722,  1005,  2235,  4255,  1745,  1410,  4363,
    1747,   793,  1781,  1771,  4364,  1872,  1875,   973,  1413,  1414,
    4365,  2248,  3631,  1916,  1416,  1917,  1160,  1919,   227,  2658,
    2659,  1920,  1923,  1929,  1427,  1955,  1962,  1413,  1414,  1973,
    1976,  2530,   798,  4248,  2011,  4248,  2021,  2022,  2044,  1903,
     915,   915, -1879,   915,   915,  -815,  3637,  1782,  2023,  2061,
    4366,  2099,  2073, -1879, -1879,  5044,   915,  5045,  5046,  2074,
    2086,  2087,  1023,  1024,   840,  1025,  1026,  1027,  4706,  1413,
    1414,  4707,  2088,  1882, -1879,  1112, -1879,  4288,  2118,  1141,
    1143,   846,  2064,   228,  1028,   229,   848,  5077,  2126,   849,
    2125,  2155,  1417,  1418,  1419,  1420,  1421,  1422,  1423,  1424,
    2159,  1883,  3664,   805,  2174,  2207,  2228,  2230,  5019,  2605,
    2606,  2607,  2608,  2609,  2610,  2611,  2233,  3196,  2229,   230,
    2234,  2231,  3665,  2242,  2243,  4317,  2244,  2245,  2255,  4367,
    2271,   231,  2276,  2287,  2291,  3666,  2292, -1879,  2294,  2297,
    -815,  1418,  1419,  1420,  1421,  1422,  1423,  1424,  2299,  2301,
    2304,  2334,   915,  2303,   242,  2063,  2330,  1536,  1417,  1418,
    1419,  1420,  1421,  1422,  1423,  1424,  2354,  2355,   816,  4249,
    2356,   967,  2357,   840,  2359,  2362,  2363,  4706,  2374,  4368,
    4707,  2373,  2376,  2387,  2388,   821,  2389,  2391,  2405,   967,
     846,  2393,  2407,   915,  5123,   848,  2409,  4397,   849,  1417,
    1418,  1419,  1420,  1421,  1422,  1423,  1424,   966,  2410,  2411,
    4251,  2064,  2413,  2414,  4405,  4406,  2427,  2444,  3667,  2440,
    1048,  1419,  1420,  1421,  1422,  1423,  1424,   232,  2445,  -815,
    1732,  2464,  2480,  2482,  3238,  3238,  4369,  2483,  3336,  2491,
    4430,  2496,  2511,  4434,  2497,  2516,  2517,  2522,  2523,  2525,
   -1879,  2535, -1879,  2537, -1879,  2532,  2540,  2547,  2548, -1879,
    2551,  2558,  2559,  2561,  2583,  2571,  5322,  1417,  1418,  1419,
    1420,  1421,  1422,  1423,  1424,  2569,  2572,  2584,  4631,  2585,
    2586,  2589,  2590,  2603,  2604,  2600,  2601,  2708,  3875,  3876,
    2710,  2715,  2712,  1430,  4708,  4709,  2711,  2714,  2716,  5232,
    4317,  2717,  4710,  2718,  1417,  1418,  1419,  1420,  1421,  1422,
    1423,  1424,  2721,  1406,  2723,  4317,  2724,  4458,  2728,  2729,
    2772,  2745,  5330,  1417,  1418,  1419,  1420,  1421,  1422,  1423,
    1424,  2735,  2747,  2748,  5253,  1233,  1112,  2749,  4370,  2764,
    3668,  2766,  2771,  2774,  2775,  4478,  2781,  2785,  5404,  2789,
    2793,  2809,  2810,  2907,  2908,  2842,  2901,  2815,  2830,  1424,
    2909,  2831,  -817,  2818,  2832,  1417,  1418,  1419,  1420,  1421,
    1422,  1423,  1424,  2840,  2819,  2839,  2885,  2852,  2858,  2860,
    2911,  4371,  4372, -1496,   840,  2861,  2875,  2862,  4706,  2884,
     915,  4707,  2879,  2888,  2910,  2897,  2912,  2904,  2913,  2914,
    2926,   846,  2927,  4708,  4709,  2928,   848,  2931,  1578,   849,
    2958,  4743,  3669,  2960,   966,  1896,  2984,  2976,  2977,  2989,
    4373,  4089,  2993,  2987,  2994,   915,   915,  2995,  2996,  2997,
    3029,  2279,  3021,  3022,   915,   915,   915,   915,   915,   915,
    1547,  1548,  3041,  3042,  3053,  3043,  3044,   915,   915,  3055,
     915,   915,  3045,  3046,  1986,   915,   915,  3050,  3059,   915,
     915,   915,   915,  3065,   915,   915,  4019,  3070,  3057,  4021,
    2205,  2218,   915,   915,  3072,   915,   915,   915,   915,   915,
    3075,  2064,   915,   915,   915,   915,   915,   915,   915,   915,
     915,  3076,   915,  3081,  1406,   915,   915,  1543,  3082,  3089,
     915,  3093,  5232,  3095,   915,   915,   915,  3101,  1306,  1160,
    3445,  3106,  3107,  3108,  3130,  1112,  1409,   915,   915,   915,
    1143,  3135,   915,  3125,  3026,   915,   915,   915,   915,   915,
    3143,  2063,  3152,  3164,   915,  3165,  3166,  3167,  3250,  3252,
    3168,  3300,  3308,  3323,   919,  3329,   915,   915,  3330,  3321,
   -1879,  3337,  2218,  3339,   915,  2063,   915,   915,  3340,  3341,
    1990,  3342,  3343,  2176,  3344,  3345,  5527,  3348,   915,   915,
     915,  4248,   915,   915,  2063,  3349,   915,   915,   915,  3350,
    2176,   915,   915,   915,   915,   915,   915,   915,   915,  5116,
    5550,  3351,   915,  3352,  2063,  3353,  5054,   915,  3354,  3355,
    5478,  3356,  3359,   920,  3360,  3361, -1879,  3362,  3363,  5527,
    3392,  3364,   966,  3365,  4708,  4709,  3366,  4317,  4680,  4663,
    3367,  3368,  4317,  3369,  3370,  3371,  4317,  3372,  3373,  5550,
    5055, -1879,  4056,  3391,  4060,  3818,   921,  3374,  5117,  3375,
    3376,  3377,  3378,  3379, -1879,   966,  1160,  3155,  3380,  3381,
    3382,  3383,  3384,  4171,  3385,  5310,  3395,   788,  3418,  5117,
    1701,  3450, -1879,  3156,  3431,  3467,  3458, -1879,  1991,  1112,
    2528,   922,  1994,  1160,  3501,  1413,  1414, -2141,   788,  1995,
    2497,  3500,  3502,  3083,  3514,  3570,  2177, -1879, -1879,  3516,
    2178,  3531,  3561,  3563,  5582,  2529, -1879,  1409,  3567,   966,
    3596,  1285,  3610,  2177,  5307,  1335,   915,  2178, -1879,  1339,
   -2367,  3611,  3615,  3613,  1112,  4747,  3648,  3612,  3618,  3629,
    3633, -1879,   923,   793,  3651, -1879, -1879,  3652,  3654,  3661,
    2179,  3662,  3675,   724,  3681, -1879,  3700,  1048,  3684,   915,
    3689,  3706,   915, -1879,   793,  3716,  2939,  2179, -1879,  3717,
    2180,  3718,  3712,  3702,  5056,  4430,  4544,  3719,  3721,  3724,
    1996,  3726,  3727,  3732,  3733,  3734,  4545,  2180,  3758, -1879,
    3142,  4756,  2940,  3772,  3777,  3773,  4546, -1879,  3774,  3802,
    5228,  3775,  3776,  4317,  3803,  3779,  3804,  2941,  3811, -1879,
    4547,  4548,  4549,  3812,  3813,  1112,  3445,  3883,  3805,  2530,
    2942,  5118, -1879,  3888, -1879,  3891,  4550, -1879,  3892,  3897,
    3900,  3901,  3894,  3917,  3922,  2181, -1879,  3923,  3908,  3926,
    3920,  4003,  3924,   915,  1998,   805,  3921, -1879,  3929,  3932,
    3935,  3938,  2181,  3986,  4001,  3157,  1430, -1879,  1345,  4018,
    5057,  1882,   915,  4029,  4037,  1543,   805,  4047,  4051,  5568,
    -154,  4053,  2943,  2944,  2257,   924,  1413,  1414,  5058,  2182,
    4062,  4061,  1396,  1397,  2258,  4057,  4064,  1184,  1184,  1883,
    4068,  4066,  4081,  1160,  2259,  4069,  2182,  4082,  5310,  4856,
    2945,  4070,  5059,  4123,  4071, -1879,   915,  2064,  2260,  2261,
    2262,  4072,  4190,  4865,  3026,  4124,  4120,  1824,  1160,  4128,
    4129,  4147,  3445,  1398,  2263,  4358,  1796,   821, -1879,  4131,
    2183,  1085,  3158,  4155,  4164,  4156,  1399,  4160, -1879,  4173,
    4177,  4178,  4191,  4194,  4195,  3556, -1879,  2183,   821,  4201,
    1430,   822,  4202,  4212,   925,  1410,  1411,  4213,  3159,  4203,
    4214,  4892,  -815,  4204,  4226,  4227,  2184,  4232,  2946,  4729,
   -1879,  4239,   822,  4360,   926,  4361,  1400,  4205,  4206,  4242,
    4240,  4241,  4243,  2184,  4244,  1999,  4252,  2498,  4253,  1401,
    2185,  1417,  1418,  1419,  1420,  1421,  1422,  1423,  1424,  4256,
    4323,  4324,  4317,  2001,  4257,  4331,  4317,  2185,  4258,  4272,
    5579,  4275,  4284,  4290,  1160,  2186,  1402,  4299, -1879,   927,
    3160,  4295,  2947,  4362,   747,  4300,  2531, -1879,  4296,  4303,
    4305,  4308,  2186,  5401,  4311,  4312,  5579,  4337,  4348,  4355,
    4389,  4353,   928,  2532,  4393,  4409,  4452,  4384,  4386,  4387,
    4464, -1879,  4056,  4551,  4400,   929,  4410,  4419,  4474,  2187,
    4469,  4479,  4481,  1160,  4489,  4508,  4491,   930,  4493,   888,
    4552,  4525, -1879,  4530,  4501,  4543,  2187,  4470,  4559,  4565,
    1403,  4507,  4520,   931, -1879,  1085,  4521,  4524,  4560,  4567,
    2188,  4571,  4572,  4570,  4573,  4590,  4579,  5439,  4430, -1879,
    4434,  4968,  5060,  4581, -1879,  3445, -1879,  2188,  4584,   932,
     734,  4589,  5439,   735,  4593,  4594, -1771,  1146, -1770,  4616,
    4623,  5018,  3161,  1384,  1385,  5448,  4624,  4611,  2399,  4635,
    4478,  4640,  4648,  4649,  4650,  4651,  3766,  4660,  4677,  4994,
    4668,  4681,   915,  4687,  -818,  4717,   915,  4718,   848,  4723,
    4727,  2264,  3201, -1879,   915,  1491,   915,  4731,  4733,  4383,
    4740,  -994,  4748,   933,  4749, -1879,  4751, -1879,  2265,   848,
    4754,  4757,  1417,  1418,  1419,  1420,  1421,  1422,  1423,  1424,
    4760,  4758,  4767,  4779,  5439, -1879,  1160, -1879,  4791,  4793,
    4794,  4553,  4825,  1112,  5500,  4796,   915,  4795,  4808,  5502,
    4819,  4824,  4809,  4810,  4811,  4812,  4816,  4817,  4554,  3238,
    4835,  3238,  5064,   967,  4826,  4834,  4836,  4842,  4845,  4847,
    4848,  1982,  1983,  1984,  1985,  1986,  4850,  4851,  4852,  4858,
    4859,  4872,  4873,  5439,  4889,  5439,  4890,  4901,  4902,  4905,
     915,   915,   915,  4866,   934,  4875,  4877,  4907, -1879,  4908,
    4896,  5229,  4627,  1181,  4912,  4914,  4933,  5439,  4942,  4940,
     819,  4948,  4952,  1410,  4363,  4953,  3915,  4959,  4813,  4364,
    4555,  4961,  5119,  4965,  5080,  4365,  4983,  4984,   915, -1879,
   -1879,  4996, -1879,   915, -1879,  4995,  1491,  4556,  4971, -1879,
    4998,  4970,  5439,  5439,  5001,  5002,  4992,  5586,  5006,  5013,
    4997,  5003,   915,  5022,  4430,  4430,  2266,  5017,  4993,   915,
    2887,  5032,  5033,  5028,   915,  4366,   915,  5035,  5047,  5081,
    5050,  5083,   915,  5075,   915,   915,  5037,  5143,  1987,  1988,
    1989,  1990,  5085,  2189,  2190,  5093,  5091,  2191,  2192,  2193,
    2194,  5096,  5102,  5106,  5110,  5111,  5112,  5126,  5114,  5014,
    2189,  2190,  5128,  5145,  2191,  2192,  2193,  2194,  4882,  5064,
    5154, -1879,  5130, -1879,  5131, -1879,  5132,  3556,  2267,  5133,
   -1879,  5137,  5138,  5152,  5155,  3552,  5144,  5149,  5160,  5163,
    5175,  1733,  5217,  5179,  5236,  2268,  5226,  5218,  5234,  5239,
    5241,  5237,  5240,  5249,  4367,  5250,  5256,  5257,  5280,  5298,
    -547,  4317,  5271,  5300,  5301,  5302,  5303,  5316,  5319,  5331,
    4696,  5333,  5338,  5370,  5340,  5367,  -565,  5177,  5395,  5396,
     967,  5397,  5398,  5400,  5406,  5407,  5408,  5414,  5410,  5040,
    5424,  5436,  5212,  5427,  5428,  5435,  5440,  5453,  5450,  1991,
    3127,  1992,  1993,  1994,  4368,  5457,  5456,  5458,  5465,  5463,
    1995, -2824,  5467,  5471,  5468,  4746,  5352,  5479,  5481,  5355,
    5488,  5493,  2064,  5491,  5247,  5501,  5503,  5504,  5508,  5510,
    5509,  3336,  3336,  5514,  5534,  5528,  5519,  5538,  4248,  5540,
    5543,  5544,  5553,  5557,  5558,   966,  5560,  5567,   966,  5569,
    5293,  1387,  5587,  5270,  1388,  1048,   915,  5015,  4151,  5402,
     915,  4369,  3937,  1048,  3928,  5275,   915,  3931,  4967,  4969,
    3934,  3955,  4451,  4978,  4302,  4972,  5284,  1946,  4988,  5222,
    5446,  5291,  5305,  5447,  2481,  5588,  4990,  5212,  5212,  5108,
    5562,  1996,  1104,  3646,  3603,   121,  4806,   116,  4558,  5190,
    5191,  5193,  5194,  5572,  5196,   114,  1644,  5485,  5433,  5486,
    5349,  5197,  4430,  3875,  3876,  5198,  5199,  5200,  5201,  5204,
    5476,  5205,  5206,  5445,  5444,  4463,  3186,  1783,  3193,  4150,
    4778,  4661,  3390,  4792,  4025,  4024,  4028,  4629,  5038,  5417,
    5423,  4916,  5455,   971,  5422,  5162,  3153,  3468,  3311,  4473,
    4675,  4023,  4728,  4676,  1997,  1998,  4341,   966,  4392,  4390,
    4939,  4730,   970,  4370,  5429,  1160,  4122,  5243,  1160,  5164,
    3206,  5101,  5051,  5098,  3469,  5074,  4688,  5065,   967,  3809,
    2733,  5371,  4788,  4932,  4467,  3756,  4014,  -817,  3743,  3314,
    4956,  1655,  3315,  2462,  3071,  2433,  5212,  5212,  3312,  3074,
    4408,  3632,  3882,  2709,  3925,  3630,  4371,  4372,  1160,  5064,
    2598,   967,  3619,  5212,  4569,  4170,  1147,  1491,  3020,  3126,
    2883,  1533,  2101,  1532,  3470,  4814,  5121,  3471,  3582,  5247,
    3184,  2849,  2241,  3184,  3184,  3472,  5405,  3560,  5139,  2020,
    3657,  5413,  3658,  3659,  3660,  4373,  5452,  5530,  5551,  5030,
    4880,  5251,  4426,  5252,  3473,  4613,  1972,  2384,  1661,  5213,
    4887,  5140,  4229,  5005,  5049,   967,  4404,  5115,  3129,  5545,
     935,  5349,  1750,  2890,  4168,  3591,  1751,  5212,  4169,  4867,
    2383,  4580,  4855,  2227,  4166,  1752,  4860,  1744,  2461,  1753,
    3061,  1505,  5212,  3598,  2360,  3062,  1999,  3904,  2991,  1746,
    2992,  3474,  4176,  5411,  4652,  5212,  4909,  5451,  5566,  5583,
    4841,  5031,  1390,  2000,  2001,  4744,  4864,  3475,  3765,  3944,
    4785,  2102,  3040,  5409,  3694,  1056,  3051,  2315,  1057,  2314,
    3037,  3036,  1017,  3626,  5212,  1526,  3738,  2426,  5016,  3419,
    5125,  2217,  1531,  3420,  1734,   759,  5212,  5212,   915,  2278,
     760,  5418,  4468,  4412,  5213,  5213,  4750,  4789,  5490,  4985,
    1949,  4413,     0,     0,  5212,  5498,     0,  1950,     0,     0,
    1951,     0,  3476,     0,  5212,     0,     0,     0,     0,  5212,
       0,     0,     0,     0,     0,     0,  1268,     0,  5211,     0,
       0,  3477,     0,  5212,     0,  5212,     0,     0,  2064,     0,
       0,     0,     0,     0,  5536,     0,     0,     0,     0,  5541,
     973,  5212,     0,  5212,     0,  5212,  1299,     0,  1160,     0,
       0,     0,  2064,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1316,     0,  2430,  2430,  2430,  5212,     0,     0,
       0,  2064,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5580,     0,  5212,  5212,     0,  3478,  3479,
    3480,  2064,     0,  5213,  5213,  3481,     0,     0,  3482,     0,
     116,     0,  5212,  5212,  5023,     0,     0,  5212,   114,  5580,
    5213,     0,     0,  5211,  5211,     0,   915,     0,  1982,  1983,
    1984,  1985,  1986,     0,  1378,   915,   915,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   915,   915,     0,   915,
    3483,  3484,   915,   915,   915,   915,   915,     0,     0,   915,
       0,     0,     0,     0,     0,     0,     0,     0,   915,     0,
       0,     0,     0,   915,  5213,   915,  3485,   915,   915,     0,
     915,   915,     0,     0,     0,   915,   915,   915,     0,  5213,
       0,   915,   915,   915,     0,   915,     0,   915,     0,   915,
       0,   915,  5213,   915,     0,     0,     0,     0,   915,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5211,  5211,   915,  1987,  1988,  1989,  1990,     0,
       0,  5213,  1493,     0,     0,     0,     0,     0,     0,  5211,
       0,     0,     0,  5213,  5213,   915,     0,   915,     0,   915,
    3486,     0,     0,   915,     0,     0,     0,     0,     0,   915,
     915,  5213,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5213,     0,   888,     0,     0,  5213,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5213,     0,  5213,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5211,     0,     0,     0,     0,  5213,     0,
    5213,     0,  5213,     0,     0,     0,     0,     0,  5211,     0,
    3487,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5211,     0,     0,  5213,     0,  1991,     0,  1992,  1993,
    1994,     0,     0,     0,     0,   915,     0,  1995,  3488,     0,
       0,     0,  5213,  5213,     0,     0,     0,     0,     0,     0,
    5211,     0,     0,     0,     0,     0,     0,     0,     0,  5213,
    5213,     0,  5211,  5211,  5213,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5211,  3489,     0,     0,     0,   966,   966,   966,     0,     0,
    5211,     0,     0,     0,     0,  5211,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5211,
       0,  5211,     0,     0,  1048,     0,     0,     0,  1996,     0,
       0,     0,     0,     0,     0,     0,     0,  5211,     0,  5211,
       0,  5211,     0,     0,     0,     0,     0,     0,     0,     0,
     915,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     915,     0,   915,  5211,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5211,  5211,     0,     0,     0,     0,     0,     0,     0,
       0,  1997,  1998,     0,     0,     0,     0,     0,  5211,  5211,
       0,     0,     0,  5211,     0,  1953,  1954,     0,     0,   915,
       0,     0,     0,     0,  1964,  1965,     0,     0,  1968,  1969,
       0,     0,     0,     0,     0,     0,     0,  1977,  1978,     0,
    1979,  1980,     0,     0,     0,  2004,     0,     0,     0,  2013,
    2014,  2015,  2016,     0,  2018,     0,     0,     0,     0,     0,
       0,     0,  2026,  2027,     0,  2030,  2031,     0,     0,     0,
       0,     0,  2035,     0,     0,  2038,  2039,  2040,  2041,  2042,
    2043,     0,  2045,     0,     0,  2048,  2049,     0,     0,     0,
    2052,     0,     0,     0,  2055,  2059,  2060,     0,  2953,  2954,
       0,     0,     0,     0,     0,     0,     0,  2067,  2068,  2069,
       0,     0,     0,     0,     0,  2075,  2076,  2077,  2078,  2079,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2100,   888,     0,     0,
       0,     0,     0,  1999,  2104,     0,  2105,  2106,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2000,  2001,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   967,     0,     0,   967,     0,  2487,     0,  2489,  2490,
       0,     0,     0,  2492,  2493,     0,     0,  2146,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2506,     0,
    3052,  2512,  2513,     0,  2515,     0,     0,  2518,  2519,  2520,
    2521,     0,     0,     0,  2524,     0,     0,     0,     0,  2536,
       0,     0,     0,     0,  2541,  2542,  2543,  2544,  2545,     0,
       0,     0,  2549,  2550,     0,     0,     0,     0,  2560,     0,
    2562,  2563,  2564,     0,  2567,  2568,     0,  2570,     0,     0,
    2573,     0,     0,  2574,  2575,  2576,     0,     0,     0,     0,
       0,     0,     0,     0,  3432,     0,     0,     0,     0,  1773,
    1799,  1800,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   967,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2289,     0,     0,     0,
       0,     0,   966,     0,     0,     0,  1802,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1805,     0,     0,     0,     0,     0,  1806,  1807,     0,  2328,
    1808,     0,  2333,     0,     0,     0,     0,     0,     0,     0,
     915,     0,     0,     0,     0,     0,     0,     0,   915,     0,
       0,     0,     0,  3179,  1810,     0,     0,  3185,     0,     0,
       0,     0,  3190,     0,     0,     0,     0,     0,  1811,     0,
       0,     0,  1812,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   915,   915,     0,  3240,  3241,
    3242,  3243,     0,     0,     0,     0,     0,     0,     0,  -664,
       0,  1817,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   915,     0,  2379,     0,     0,     0,     0,     0,     0,
    3279,   915,     0,   915,     0,   915,     0,     0,     0,     0,
       0,     0,  2398,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3190,  3190,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   915,     0,
       0,     0,     0,   915,     0,   915,     0,     0,     0,     0,
       0,     0,     0,     0,  3433,     0,  2446,     0,  1821,     0,
       0,     0,     0,     0,     0,  1822,  3432,     0,     0,     0,
       0,  1773,  1799,  1800,     0,     0,     0,     0,     0,   915,
       0,     0,     0,     0,     0,  1823,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3434,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1802,     0,
       0,     0,     0,     0,     0,     0,   915,     0,   915,     0,
       0,     0,  1805,     0,     0,     0,     0,     0,  1806,  1807,
       0,     0,  1808,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1825,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1810,   915,     0,     0,
       0,     0,  1826,     0,     0,     0,     0,     0,     0,     0,
    1811,     0,     0,     0,  1812,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     915,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  -664,     0,  1817,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1830,     0,     0,
       0,     0,     0,  1139,     0,     0,  1831,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   915,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3433,     0,  3435,     0,
    1821,     0,     0,     0,     0,     0,     0,  1822,     0,     0,
       0,     0,  2746,     0,     0,     0,  2750,     0,     0,     0,
       0,     0,     0,     0,     0,  1836,  2746,  1823,     0,     0,
       0,     0,     0,     0,     0,    42,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1837,  1838,  1839,  1840,     0,  1825,     0,     0,  1841,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1826,     0,  1842,  3094,    49,  1843,
    2822,  2824,  2826,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3819,  3820,     0,     0,     0,     0,
    3821,     0,  3822,     0,  3823,  3824,     0,     0,     0,     0,
       0,     0,  3628,     0,     0,  1845,     0,     0,     0,     0,
       0,     0,  3825,  2864,     0,     0,     0,     0,     0,  1830,
       0,     0,    54,     0,     0,  1139,     0,     0,  1831,     0,
       0,     0,  2872,     0,     0,     0,     0,     0,     0,    55,
       0,     0,     0,     0,  2876,     0,  2877,     0,     0,  3184,
    3184,   967,   967,   967,     0,     0,     0,     0,  3194,     0,
       0,     0,  3826,     0,     0,  3827,     0,     0,     0,     0,
       0,     0,     0,  3828,     0,     0,     0,     0,     0,     0,
    3435,     0,     0,     0,     0,  3245,     0,     0,     0,     0,
     915,     0,  3473,     0,     0,  2430,     0,     0,     0,     0,
       0,     0,  3258,     0,     0,     0,     0,  1836,     0,  3829,
       0,     0,     0,     0,     0,     0,     0,    42,     0,     0,
       0,     0,     0,   915,     0,   915,     0,  1848,   915,   915,
       0,   915,     0,     0,     0,     0,     0,  3830,     0,  3831,
    3306,  3307,   915,     0,     0,     0,     0,   915,  3320,     0,
     915,  1851,  1852,   915,   915,  3832,  3833,     0,     0,     0,
       0,     0,     0,  1837,  1838,  1839,  1840,     0,     0,     0,
       0,  1841,     0,     0,     0,   915,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3771,     0,     0,  1842,   915,
      49,  1843,     0,     0,     0,     0,  1853,  3834,  3781,     0,
    3788,  3789,  3790,  3791,     0,  3793,  3794,     0,     0,     0,
    3835,     0,  3436,     0,     0,  -664,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3048,  1845,     0,  3836,
    2328,     0,     0,     0,     0,   915,     0,     0,  3837,  3838,
       0,  3839,     0,     0,    54,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    55,     0,     0,     0,     0,     0,     0,     0,     0,
     915,   915,     0,     0,     0,  3887,     0,  3840,  3841,  3842,
       0,     0,     0,   915,     0,     0,     0,     0,  3893,     0,
    3421,     0,     0,     0,     0,     0,  3843,  3844,  3845,     0,
       0,     0,     0,  3846,     0,     0,  3847,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3848,  3849,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1848,
       0,     0,     0,     0,     0,     0,     0,   915,  3850,  3851,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1851,  1852,     0,     0,     0,     0,  2430,
       0,  2430,     0,     0,  3485,     0,     0,     0,     0,     0,
    2430,  2430,  2430,  2430,     0,     0,     0,     0,     0,  2430,
    2430,  2430,  2430,  2430,  2430,     0,  2430,  2430,  2430,  2430,
       0,     0,  3981,     0,  2430,     0,     0,     0,  1853,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1141,     0,     0,  -664,     0,     0,
       0,     0,     0,     0,     0,     0,  3852,     0,   967,     0,
    3853,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     915,   915,  3854,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3184,  3184,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3338,     0,
       0,     0,  3855,     0,     0,  3856,     0,     0,  3857,  3858,
    3859,  3860,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     1,     0,     0,     2,
       0,     0,  1773,  1799,  1800,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     3,     0,     0,     0,     4,     0,
       0,  3861,  3862,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     5,     6,     0,     0,     0,  -975,  -975,  1802,
       7,     0,     0,     0,     0,     8,     9,  -975,     0,  3863,
       0,     0,     0,  1805,     0,     0,     0,     0,     0,  1806,
    1807,    10,     0,  1808,     0,     0,     0,     0,   915,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    11,     0,     0,     0,     0,     0,  1810,     0,   915,
       0,   915,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1811,     0,    12,     0,  1812,  3457,     0,     0,     0,
       0,     0,     0,    13,    14,  3465,  3466,     0,     0,     0,
       0,     0,     0,     0,     0,    15,    16,     0,     0,     0,
       0,     0,     0,     0,  1817,     0,  3503,  3504,    17,  3505,
       0,     0,  3508,  3509,  3510,  3511,  3512,     0,     0,     0,
       0,     0,    18,     0,     0,     0,     0,     0,  3518,     0,
       0,     0,     0,  3519,  3769,  3520,  3770,  3521,  3522,     0,
    3523,     0,    19,     0,     0,  3528,  3529,  3530,     0,     0,
       0,  3533,  3534,  3535,     0,  3536,     0,  3538,     0,  3540,
      20,  3542,    21,  3543,     0,     0,     0,    22,  3546,     0,
      23,     0,     0,     0,   915,     0,     0,     0,     0,     0,
       0,  1821,     0,     0,  5515,    24,  4265,     0,  1822,     0,
       0,     0,     0,    25,     0,     0,    26,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   915,  1823,     0,
       0,     0,     0,  3580,     0,     0,    27,     0,     0,  2146,
    4294,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    28,     0,     0,     0,    29,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1825,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   915,     0,  1826,   915,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   915,
       0,     0,     0,  3911,     0,  3627,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    30,     0,     0,     0,     0,     0,     0,
    1830,     0,     0,     0,     0,     0,   915,     0,     0,  1831,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    31,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    32,  4004,  4005,
    4006,  4007,  2430,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    33,
       0,     0,    34,     0,    35,     0,     0,    36,     0,     0,
    2379,     0,     0,     0,     0,     0,     0,    37,    38,     0,
       0,     0,     0,     0,     0,     0,     0,    39,  1836,    40,
       0,     0,     0,     0,     0,     0,     0,     0,    41,     0,
       0,     0,     0,     0,    42,     0,     0,     0,     0,     0,
       0,     0,    43,     0,  4459,     0,     0,    44,    45,    46,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2446,
     915,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1837,  1838,  1839,  1840,     0,     0,
      47,     0,  1841,     0,     0,     0,     0,    48,     0,     0,
       0,   915,     0,     0,     0,     0,     0,     0,     0,  1842,
       0,     0,  1843,     0,     0,     0,     0,    49,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    50,     0,     0,     0,     0,     0,     0,  1845,   915,
       0,     0,     0,    51,  5208,     0,     0,    52,     0,     0,
    5219,     0,     0,     0,     0,    53,     0,     0,     0,     0,
       0,    54,     0,     0,     0,     0,     0,     0,  3309,     0,
       0,     0,   915,  1796,     0,  1797,     0,     0,    55,     0,
       0,     0,     0,     0,     0,     0,    56,  1773,  1799,  1800,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    57,    58,    59,    60,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    61,     0,  1801,
       0,     0,     0,     0,  1802,     0,     0,     0,     0,     0,
       0,     0,     0,   915,     0,     0,     0,     0,  1805,  5208,
    5208,     0,     0,     0,  1806,  1807,     0,     0,  1808,     0,
       0,     0,     0,     0,    62,     0,     0,  1809,     0,     0,
    1848,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1810,     0,  1773,  1799,  1800,     0,     0,     0,
    4619,  4620,   915,  4622,  1851,  1852,  1811,     0,     0,     0,
    1812,     0,     0,     0,    63,   966,     0,     0,  1813,     0,
       0,     0,     0,     0,     0,  3310,     0,     0,     0,     0,
       0,  1802,     0,  1816,   915,     0,     0,     0,     0,  1817,
       0,     0,     0,     0,     0,  1805,     0,     0,     0,  1853,
       0,  1806,  1807,     0,   915,  1808,   915,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   915,     0,  5208,  5208,
       0,    64,     0,  1819,     0,     0,     0,     0,     0,  1810,
       0,     0,     0,     0,     0,  5208,     0,     0,     0,     0,
       0,     0,     0,  1811,     0,     0,     0,  1812,     0,     0,
    4042,     0,     0,     0,     0,     0,     0,     0,  4045,     0,
       0,     0,     0,     0,     0,     0,  1821,     0,     0,     0,
       0,  4704,     0,  1822,     0,     0,  1817,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1823,     0,  4075,  4076,   915,     0,  5208,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5208,   915,  1824,     0,     0,     0,
       0,  4101,     0,     0,     0,     0,     0,  5208,     0,     0,
       0,  4112,     0,  4114,     0,  4116,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   915,     0,     0,     0,     0,
       0,     0,  1825,  1821,     0,   915,  5208,     0,     0,     0,
    1822,     0,     0,     0,  2430,  2430,  2430,  2430,  5208,  5208,
    1826,     0,     0,     0,  1827,  4265,     0,     0,     0,     0,
    1823,     0,     0,     0,     0,     0,  5208,     0,     0,  4798,
       0,     0,     0,   915,     0,     0,  5208,     0,     0,     0,
       0,  5208,     0,     0,     0,     0,     0,     0,   915,  2379,
       0,     0,     0,     0,     0,  5208,     0,  5208,  1829,     0,
       0,     0,     0,     0,     0,  1830,     0,     0,     0,  4448,
    4449,     0,     0,  5208,  1831,  5208,     0,  5208,     0,  1825,
       0,     0,     0,     0,     0,     0,  4198,     0,  4200,     0,
       0,     0,     0,     0,     0,     0,     0,  1826,     0,  5208,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5208,  5208,     0,
       0,  1833,     0,     0,   915,     0,     0,  2328,     0,     0,
       0,     0,   915,     0,  5208,  5208,     0,     0,     1,  5208,
       0,     2,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1830,  1836,     0,     0,     0,     0,     0,     0,
       4,  1831,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4888,     5,     6,     0,     0,     0,     0,
       0,     0,     7,     0,     0,  4897,     0,     8,     9,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    10,     0,     0,     0,     0,     0,  1837,
    1838,  1839,  1840,     0,     0,     0,     0,  1841,     0,     0,
       0,     0,     0,    11,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1842,     0,  4309,  1843,     0,     0,
    1836,     0,     0,     0,     0,    12,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    13,    14,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    16,     0,
       0,     0,     0,  1845,     0,  3190,  3190,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    18,     0,  1837,  1838,  1839,  1840,
       0,     0,     0,     0,  1841,     0,     0,  1846,  4960,     0,
    1847,     0,     0,     0,    19,     0,     0,     0,     0,  2430,
       0,  1842,     0,     0,  1843,     0,     0,     0,     0,     0,
       0,     0,    20,     0,    21,     0,     0,     0,     0,    22,
       0,     0,    23,  4987,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    24,     0,     0,
    1845,     0,     0,     0,     0,    25,     0,     0,    26,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    27,     0,
       0,     0,     0,     0,     0,  1848,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    28,     0,     0,     0,    29,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1851,
    1852,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5034,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4725,  4726,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1853,     0,     0,     0,     0,     0,
       0,     0,  5070,     0,     0,     0,     0,     0,     0,     0,
    4483,     0,  1848,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    30,  1851,  1852,     0,     0,
       0,     0,     0,  4497,     0,  2446,     0,     0,  4502,  4503,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4510,     0,     0,     0,     0,  4512,    31,     0,
    4513,     0,     0,  4514,  4515,     0,     0,     0,     0,    32,
       0,  1853,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4527,     0,     0,     0,     0,
       0,    33,     0,     0,    34,     0,    35,     0,     0,    36,
       0,     0,     0,     0,     0,  5141,     0,     0,     0,    37,
      38,     0,     0,     0,     0,     0,     0,     0,     0,    39,
       0,    40,     0,     0,     0,     0,     0,     0,     0,     0,
      41,     0,     0,     0,     0,     0,    42,     0,     0,     0,
       0,     0,  3190,  3190,    43,  2379,     0,     0,     0,    44,
      45,    46,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4607,  4610,    47,     0,     0,     0,     0,     0,     0,    48,
       0,     0,     0,  4618,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    49,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5264,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    50,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    51,     0,     0,     0,    52,
       0,  1795,     0,     0,     0,     0,  1796,    53,  1797,     0,
       0,  1798,     0,    54,     0,     0,     0,  4670,     0,     0,
    1773,  1799,  1800,     0,     0,     0,     0,     0,     0,     0,
      55,     0,     0,     0,     0,     0,     0,     0,    56,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1801,     0,     0,  -975,  -975,  1802,  1803,     0,
       0,   967,     0,  1804,     0,  -975,     0,     0,     0,    61,
       0,  1805,     0,     0,     0,     0,     0,  1806,  1807,     0,
       0,  1808,     0,     0,     0,  5350,  5351,     0,     0,     0,
    1809,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1810,    62,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1811,
    4752,  4753,     0,  1812,     0,     0,     0,     0,     0,     0,
       0,  1813,  1814,     0,     0,     0,     0,     0,  1815,     0,
       0,     0,     0,     0,     0,     0,  1816,     0,     0,     0,
       0,     0,  1817,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1818,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1819,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    64,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1820,     0,  1821,
       0,     0,  1795,     0,     0,     0,  1822,  1796,     0,  1797,
       0,     0,  1798,     0,     0,     0,     0,     0,     0,     0,
       0,  1773,  1799,  1800,     0,     0,  1823,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5071,  5072,  5073,  2379,  1824,
       0,     0,     0,  1801,     0,     0,     0,     0,  1802,  1803,
       0,     0,     0,     0,  1804,     0,     0,     0,     0,  4874,
       0,  4876,  1805,     0,     0,     0,     0,     0,  1806,  1807,
       0,     0,  1808,     0,     0,  1825,     0,     0,     0,     0,
       0,  1809,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1826,     0,     0,  1810,  1827,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1811,     0,     0,     0,  1812,     0,     0,     0,     0,     0,
       0,     0,  1813,  1814,     0,     0,     0,     0,     0,  1815,
       0,     0,     0,     0,     0,  1828,     0,  1816,     0,     0,
       0,  1829,     0,  1817,     0,     0,     0,     0,  1830,     0,
       0,     0,     0,     0,  1818,     0,     0,  1831,     0,     0,
       0,     0,     0,     0,     0,     0,  5153,     0,     0,  5156,
    5157,  5158,  5159,     0,  4946,     0,     0,  1819,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1832,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1833,  1834,  1835,  4954,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1820,     0,
    1821,     0,     0,     0,     0,     0,     0,  1822,     0,     0,
       0,     0,     0,     0,     0,     0,  1836,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1823,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5255,     0,     0,
       0,     0,     0,     0,     0,     0,  5265,  5266,     0,     0,
    1824,     0,     0,     0,     0,  5274,     0,     0,     0,     0,
       0,     0,     0,  2446,     0,     0,  5000,     0,     0,     0,
       0,     0,  1837,  1838,  1839,  1840,     0,     0,     0,  4607,
    1841,     0,     0,     0,     0,     0,  1825,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1842,     0,     0,
    1843,     0,     0,     0,  1826,     0,     0,     0,  1827,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1844,     0,     0,  4607,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1845,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1828,     0,     0,     0,
       0,     0,  1829,     0,     0,     0,     0,     0,     0,  1830,
       0,     0,     0,     0,     0,     0,     0,     0,  1831,     0,
    1846,     0,     0,  1847,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1832,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1833,  1834,  1835,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1836,     0,     0,
    2446,     0,     0,     0,     0,     0,     0,     0,  1848,  1849,
    1850,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1851,  1852,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1837,  1838,  1839,  1840,     0,     0,     0,
       0,  1841,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1853,  1842,  5178,
       0,  1843,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1844,     0,     0,     0,     0,     0,
       0,     0,  5235,     0,     0,     0,     0,  1845,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1846,     0,     0,  1847,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5279,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5317,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1848,
    1849,  1850,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1851,  1852,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5365,     0,  5366,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5374,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1853,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5437,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5442,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5461,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   244,   245,     0,   764,   247,
     248,   249,   250,  2321,     0,   251,     0,     0,     0,     0,
     252,     0,     0,   765,     0,   254,   255,   256,   257,   766,
     259,     0,   260,  5492,     0,  2322,   261,   768,   769,   770,
     262,   771,     0,   263,   264,   265,     0,   266,  5507,   267,
     268,     0,     0,   269,   772,   773,   270,   271,     0,   272,
     273,   774,   775,   275,     0,   276,   277,   278,   279,   776,
     281,     0,   777,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,   778,   779,   302,     0,
       0,     0,   780,   303,   781,     0,   304,   782,   783,     0,
     305,   306,   307,   784,   785,   786,     0,     0,     0,     0,
     787,   310,   788,     0,  5581,  2323,   311,   312,     0,   313,
       0,     0,  2379,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,   790,     0,   337,   338,   339,   340,   341,   791,   792,
     342,   343,     0,   344,   345,   346,   347,   348,   793,     0,
     349,   350,  2324,     0,     0,   794,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   795,   357,   796,     0,   359,
       0,   360,     0,   797,     0,   361,   362,     0,   363,   798,
       0,   364,   365,     0,     0,     0,   799,   367,   368,   369,
     800,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,   801,   374,   375,   376,   802,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,   803,   387,   388,     0,     0,     0,     0,     0,   804,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
     805,     0,     0,     0,     0,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,     0,   413,   414,   415,   806,   416,
     417,   418,   419,   807,   420,   421,     0,     0,     0,     0,
     422,   423,   424,   425,   808,   427,     0,     0,   809,   429,
     810,   430,     0,   431,   811,   812,   813,   814,   815,   436,
     437,   438,   439,   440,     0,   816,   441,   442,     0,     0,
     443,   444,   445,   446,   447,   817,   818,   819,   448,   449,
       0,   820,   821,   450,     0,   451,   452,  2325,   453,   454,
     455,     0,     0,   456,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   457,   458,   459,   822,   460,     0,   461,
       0,   462,   463,   464,   465,   466,   467,   468,   823,   824,
     471,   825,   472,     0,   473,   474,   475,     0,   476,     0,
     477,   478,   479,   480,   481,     0,   826,   483,   484,     0,
       0,   485,     0,     0,     0,   486,   487,     0,   488,   489,
       0,     0,   490,   491,   492,   493,   494,     0,   495,   496,
       0,   497,   498,   499,   827,   828,   500,   501,   502,   503,
     504,   505,   506,   507,     0,   508,     0,   509,   510,     0,
     511,   512,   513,     0,   829,     0,   830,   515,   516,   517,
     518,     0,   519,  2326,   832,   521,   522,   523,   524,     0,
     833,   526,     0,     0,     0,   527,   528,   529,   530,     0,
       0,     0,   531,     0,     0,     0,   532,     0,   533,   534,
     535,   536,     0,   537,   538,   539,   540,   541,     0,     0,
       0,     0,     0,   542,   543,   544,     0,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,   551,
     552,   553,   554,   834,   835,   555,   556,     0,     0,   557,
     558,   836,   560,   561,   562,   837,   838,   563,   564,   565,
     566,   839,   567,   568,     0,     0,   569,   570,   571,   572,
       0,   840,   573,   574,     0,   841,   842,   843,   844,     0,
       0,     0,     0,     0,   579,   580,     0,   845,   846,   847,
     582,   583,     0,   848,   584,   585,   849,   586,   587,     0,
     588,   589,     0,     0,   590,     0,     0,   591,     0,   592,
       0,   850,   594,     0,     0,   851,   852,   853,   595,   854,
     596,     0,     0,   597,   855,     0,   856,   598,     0,   599,
     600,   857,   858,     0,     0,     0,     0,     0,     0,   603,
     604,   605,     0,   606,   607,   608,   609,     0,     0,   859,
       0,     0,   611,   612,   613,   614,   615,     0,   616,     0,
       0,     0,     0,     0,   860,   861,     0,   617,   618,   619,
     862,   620,   621,   622,     0,   623,   863,   864,   624,   865,
     625,     0,   866,   867,   868,   869,   870,   626,   627,     0,
     871,   628,   872,   629,   873,   630,   631,     0,     0,     0,
     632,   633,   634,   635,   636,   637,   638,   639,  2327,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,     0,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,     0,   874,   675,   676,   677,   678,
     679,   680,     0,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   875,   712,   713,   714,     0,   715,   716,
     717,   718,   719,   720,   721,     0,     0,     0,     0,     0,
       0,   876,   877,     0,     0,     0,     0,   879,     0,   880,
       0,     0,     0,   881,     0,     0,     0,   882,   883,   244,
     245,     0,   764,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,     0,   765,     0,   254,
     255,   256,   257,   766,   259,     0,   260,     0,     0,   767,
     261,   768,   769,   770,   262,   771,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,   772,   773,
     270,   271,     0,   272,   273,   774,   775,   275,     0,   276,
     277,   278,   279,   776,   281,     0,   777,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
     778,   779,   302,     0,     0,     0,   780,   303,   781,     0,
     304,   782,   783,     0,   305,   306,   307,   784,   785,   786,
       0,     0,     0,     0,   787,   310,   788,     0,     0,   789,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,   790,     0,   337,   338,   339,
     340,   341,   791,   792,   342,   343,     0,   344,   345,   346,
     347,   348,   793,     0,   349,   350,     0,     0,     0,   794,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   795,
     357,   796,     0,   359,     0,   360,     0,   797,     0,   361,
     362,     0,   363,   798,     0,   364,   365,     0,     0,     0,
     799,   367,   368,   369,   800,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,   801,   374,   375,   376,   802,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,   803,   387,   388,     0,     0,
       0,     0,     0,   804,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,   805,     0,     0,     0,     0,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,     0,   413,
     414,   415,   806,   416,   417,   418,   419,   807,   420,   421,
       0,     0,     0,     0,   422,   423,   424,   425,   808,   427,
       0,     0,   809,   429,   810,   430,     0,   431,   811,   812,
     813,   814,   815,   436,   437,   438,   439,   440,     0,   816,
     441,   442,     0,     0,   443,   444,   445,   446,   447,   817,
     818,   819,   448,   449,     0,   820,   821,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   457,   458,   459,
     822,   460,     0,   461,     0,   462,   463,   464,   465,   466,
     467,   468,   823,   824,   471,   825,   472,     0,   473,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     826,   483,   484,     0,     0,   485,     0,     0,     0,   486,
     487,     0,   488,   489,     0,     0,   490,   491,   492,   493,
     494,     0,   495,   496,     0,   497,   498,   499,   827,   828,
     500,   501,   502,   503,   504,   505,   506,   507,     0,   508,
       0,   509,   510,     0,   511,   512,   513,     0,   829,     0,
     830,   515,   516,   517,   518,     0,   519,   831,   832,   521,
     522,   523,   524,     0,   833,   526,    42,     0,     0,   527,
     528,   529,   530,     0,     0,     0,   531,     0,     0,     0,
     532,     0,   533,   534,   535,   536,     0,   537,   538,   539,
     540,   541,     0,     0,     0,     0,     0,   542,   543,   544,
       0,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,   551,   552,   553,   554,   834,   835,   555,
     556,     0,     0,   557,   558,   836,   560,   561,   562,   837,
     838,   563,   564,   565,   566,   839,   567,   568,     0,    49,
     569,   570,   571,   572,     0,   840,   573,   574,     0,   841,
     842,   843,   844,     0,     0,     0,     0,     0,   579,   580,
       0,   845,   846,   847,   582,   583,     0,   848,   584,   585,
     849,   586,   587,     0,   588,   589,     0,     0,   590,     0,
       0,   591,     0,   592,     0,   850,   594,     0,     0,   851,
     852,   853,   595,  1375,   596,     0,     0,   597,   855,     0,
     856,   598,     0,   599,   600,   857,   858,     0,     0,     0,
      55,     0,     0,   603,   604,   605,     0,   606,   607,   608,
     609,     0,     0,   859,     0,     0,   611,   612,   613,   614,
     615,     0,   616,     0,     0,     0,     0,     0,   860,   861,
       0,   617,   618,   619,   862,   620,   621,   622,     0,   623,
     863,   864,   624,   865,   625,     0,   866,   867,   868,   869,
     870,   626,   627,     0,   871,   628,   872,   629,   873,   630,
     631,     0,     0,     0,   632,   633,   634,   635,   636,   637,
     638,   639,     0,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,     0,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,     0,   874,
     675,   676,   677,   678,   679,   680,     0,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   875,   712,   713,
     714,     0,   715,   716,   717,   718,   719,   720,   721,     0,
       0,     0,     0,     0,     0,   876,   877,     0,     0,     0,
       0,   879,     0,   880,     0,     0,     0,   881,     0,     0,
       0,   882,   883,   244,   245,     0,   764,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,   765,     0,   254,   255,   256,   257,   766,   259,     0,
     260,     0,     0,   767,   261,   768,   769,   770,   262,   771,
       0,   263,   264,   265,  2056,   266,     0,   267,   268,     0,
       0,   269,   772,   773,   270,   271,     0,   272,   273,   774,
     775,   275,     0,   276,   277,   278,   279,   776,   281,     0,
     777,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,   778,   779,   302,     0,     0,     0,
     780,   303,   781,     0,   304,   782,   783,     0,   305,   306,
     307,   784,   785,   786,     0,     0,     0,     0,   787,   310,
     788,     0,     0,   789,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,   790,
       0,   337,   338,   339,   340,   341,   791,   792,   342,   343,
       0,   344,   345,   346,   347,   348,   793,     0,   349,   350,
       0,     0,     0,   794,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   795,   357,   796,     0,   359,     0,   360,
       0,   797,     0,   361,   362,     0,   363,   798,     0,   364,
     365,     0,     0,     0,   799,   367,   368,   369,   800,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,   801,
     374,   375,   376,   802,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,  2057,   386,     0,   803,
     387,   388,     0,     0,     0,     0,     0,   804,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,   805,     0,
       0,     0,     0,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,     0,   413,   414,   415,   806,   416,   417,   418,
     419,   807,   420,   421,     0,     0,     0,     0,   422,   423,
     424,   425,   808,   427,     0,     0,   809,   429,   810,   430,
       0,   431,   811,   812,   813,   814,   815,   436,   437,   438,
     439,   440,     0,   816,   441,   442,     0,     0,   443,   444,
     445,   446,   447,   817,   818,   819,   448,   449,     0,   820,
     821,   450,     0,   451,   452,     0,   453,   454,   455,     0,
       0,   456,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   457,   458,   459,   822,   460,     0,   461,     0,   462,
     463,   464,   465,   466,   467,   468,   823,   824,   471,   825,
     472,     0,   473,   474,   475,     0,   476,     0,   477,   478,
     479,   480,   481,     0,   826,   483,   484,     0,     0,   485,
       0,     0,     0,   486,   487,     0,   488,   489,     0,     0,
     490,   491,   492,   493,   494,     0,   495,   496,     0,   497,
     498,   499,   827,   828,   500,   501,   502,   503,   504,   505,
     506,   507,     0,   508,     0,   509,   510,     0,   511,   512,
     513,     0,   829,     0,   830,   515,   516,   517,   518,     0,
     519,   831,   832,   521,   522,   523,   524,     0,   833,   526,
       0,     0,     0,   527,   528,   529,   530,     0,     0,     0,
     531,     0,     0,     0,   532,     0,   533,   534,   535,   536,
       0,   537,   538,   539,   540,   541,     0,     0,     0,     0,
       0,   542,   543,   544,     0,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,   551,   552,   553,
     554,   834,   835,   555,   556,     0,     0,   557,   558,   836,
     560,   561,   562,   837,   838,   563,   564,   565,   566,   839,
     567,   568,     0,     0,   569,   570,   571,   572,     0,   840,
     573,   574,     0,   841,   842,   843,   844,     0,     0,     0,
       0,  2058,   579,   580,     0,   845,   846,   847,   582,   583,
       0,   848,   584,   585,   849,   586,   587,     0,   588,   589,
       0,     0,   590,     0,     0,   591,     0,   592,     0,   850,
     594,     0,     0,   851,   852,   853,   595,   854,   596,     0,
       0,   597,   855,     0,   856,   598,     0,   599,   600,   857,
     858,     0,     0,     0,     0,     0,     0,   603,   604,   605,
       0,   606,   607,   608,   609,     0,     0,   859,     0,     0,
     611,   612,   613,   614,   615,     0,   616,     0,     0,     0,
       0,     0,   860,   861,     0,   617,   618,   619,   862,   620,
     621,   622,     0,   623,   863,   864,   624,   865,   625,     0,
     866,   867,   868,   869,   870,   626,   627,     0,   871,   628,
     872,   629,   873,   630,   631,     0,     0,     0,   632,   633,
     634,   635,   636,   637,   638,   639,     0,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,     0,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,     0,   874,   675,   676,   677,   678,   679,   680,
       0,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   875,   712,   713,   714,     0,   715,   716,   717,   718,
     719,   720,   721,     0,     0,     0,     0,     0,     0,   876,
     877,     0,     0,     0,     0,   879,     0,   880,     0,     0,
       0,   881,     0,     0,     0,   882,   883,   244,   245,     0,
     764,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,     0,   765,     0,   254,   255,   256,
     257,   766,   259,     0,   260,     0,     0,   767,   261,   768,
     769,   770,   262,   771,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,   772,   773,   270,   271,
       0,   272,   273,   774,   775,   275,     0,   276,   277,   278,
     279,   776,   281,     0,   777,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,   778,   779,
     302,     0,     0,     0,   780,   303,   781,     0,   304,   782,
     783,     0,   305,   306,   307,   784,   785,   786,     0,     0,
       0,     0,   787,   310,   788,     0,     0,   789,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   790,     0,   337,   338,   339,   340,   341,
     791,   792,   342,   343,     0,   344,   345,   346,   347,   348,
     793,     0,   349,   350,     0,     0,     0,   794,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   795,   357,   796,
       0,   359,     0,   360,     0,   797,     0,   361,   362,     0,
     363,   798,     0,   364,   365,     0,     0,     0,   799,   367,
     368,   369,   800,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,   801,   374,   375,   376,   802,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,   803,   387,   388,     0,     0,     0,     0,
       0,   804,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,   805,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
     806,   416,   417,   418,   419,   807,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   808,   427,     0,     0,
     809,   429,   810,   430,     0,   431,   811,   812,   813,   814,
     815,   436,   437,   438,   439,   440,     0,   816,   441,   442,
       0,     0,   443,   444,   445,   446,   447,   817,   818,   819,
     448,   449,     0,   820,   821,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,   822,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     823,   824,   471,   825,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   826,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,   827,   828,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   829,     0,   830,   515,
     516,   517,   518,     0,   519,   831,   832,   521,   522,   523,
     524,     0,   833,   526,     0,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,   834,   835,   555,   556,     0,
       0,   557,   558,   836,   560,   561,   562,   837,   838,   563,
     564,   565,   566,   839,   567,   568,     0,     0,   569,   570,
     571,   572,     0,   840,   573,   574,     0,   841,   842,   843,
     844,     0,     0,     0,     0,     0,   579,   580,     0,   845,
     846,   847,   582,   583,     0,   848,   584,   585,   849,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   850,   594,     0,     0,   851,   852,   853,
     595,   854,   596,     0,     0,   597,   855,     0,   856,   598,
       0,   599,   600,   857,   858,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   859,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,   860,   861,     0,   617,
     618,   619,   862,   620,   621,   622,     0,   623,   863,   864,
     624,   865,   625,     0,   866,   867,   868,   869,   870,   626,
     627,     0,   871,   628,   872,   629,   873,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   874,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   875,   712,   713,   714,     0,
     715,   716,   717,   718,   719,   720,   721,     0,     0,     0,
       0,     0,     0,   876,   877,   878,     0,     0,     0,   879,
       0,   880,     0,     0,     0,   881,     0,     0,     0,   882,
     883,   244,   245,     0,   764,   247,   248,   249,   250,     0,
       0,   251,     0,     0,     0,     0,   252,     0,     0,   765,
       0,   254,   255,   256,   257,   766,   259,     0,   260,     0,
       0,   767,   261,   768,   769,   770,   262,   771,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
     772,   773,   270,   271,     0,   272,   273,   774,   775,   275,
       0,   276,   277,   278,   279,   776,   281,     0,   777,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,   778,   779,   302,     0,     0,     0,   780,   303,
     781,     0,   304,   782,   783,     0,   305,   306,   307,   784,
     785,   786,     0,     0,     0,     0,   787,   310,   788,     0,
       0,   789,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   790,     0,   337,
     338,   339,   340,   341,   791,   792,   342,   343,     0,   344,
     345,   346,   347,   348,   793,     0,   349,   350,     0,     0,
       0,   794,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   795,   357,   796,     0,   359,     0,   360,     0,   797,
       0,   361,   362,     0,   363,   798,     0,   364,   365,     0,
       0,     0,   799,   367,   368,   369,   800,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,   801,   374,   375,
     376,   802,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,   803,   387,   388,
       0,     0,     0,     0,     0,   804,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,   805,     0,     0,     0,
       0,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
       0,   413,   414,   415,   806,   416,   417,   418,   419,   807,
     420,   421,     0,     0,     0,     0,   422,   423,   424,   425,
     808,   427,     0,     0,   809,   429,   810,   430,     0,   431,
     811,   812,   813,   814,   815,   436,   437,   438,   439,   440,
       0,   816,   441,   442,     0,     0,   443,   444,   445,   446,
     447,   817,   818,   819,   448,   449,     0,   820,   821,   450,
       0,   451,   452,     0,   453,   454,   455,     0,     0,   456,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   457,
     458,   459,   822,   460,     0,   461,     0,   462,   463,   464,
     465,   466,   467,   468,   823,   824,   471,   825,   472,     0,
     473,   474,   475,     0,   476,     0,   477,   478,   479,   480,
     481,     0,   826,   483,   484,     0,     0,   485,     0,     0,
       0,   486,   487,     0,   488,   489,     0,     0,   490,   491,
     492,   493,   494,     0,   495,   496,     0,   497,   498,   499,
     827,   828,   500,   501,   502,   503,   504,   505,   506,   507,
       0,   508,     0,   509,   510,     0,   511,   512,   513,     0,
     829,     0,   830,   515,   516,   517,   518,     0,   519,   831,
     832,   521,   522,   523,   524,     0,   833,   526,     0,     0,
       0,   527,   528,   529,   530,     0,     0,     0,   531,     0,
       0,     0,   532,     0,   533,   534,   535,   536,     0,   537,
     538,   539,   540,   541,     0,     0,     0,     0,     0,   542,
     543,   544,     0,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,   551,   552,   553,   554,   834,
     835,   555,   556,     0,     0,   557,   558,   836,   560,   561,
     562,   837,   838,   563,   564,   565,   566,   839,   567,   568,
       0,     0,   569,   570,   571,   572,     0,   840,   573,   574,
       0,   841,   842,   843,   844,     0,     0,     0,     0,     0,
     579,   580,     0,   845,   846,   847,   582,   583,     0,   848,
     584,   585,   849,   586,   587,     0,   588,   589,     0,     0,
     590,     0,     0,   591,     0,   592,     0,   850,   594,     0,
       0,   851,   852,   853,   595,   854,   596,     0,     0,   597,
     855,     0,   856,   598,     0,   599,   600,   857,   858,     0,
       0,     0,     0,     0,     0,   603,   604,   605,     0,   606,
     607,   608,   609,     0,     0,   859,     0,     0,   611,   612,
     613,   614,   615,     0,   616,     0,     0,     0,     0,     0,
     860,   861,     0,   617,   618,   619,   862,   620,   621,   622,
       0,   623,   863,   864,   624,   865,   625,     0,   866,   867,
     868,   869,   870,   626,   627,     0,   871,   628,   872,   629,
     873,   630,   631,     0,     0,     0,   632,   633,   634,   635,
     636,   637,   638,   639,     0,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,     0,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
       0,   874,   675,   676,   677,   678,   679,   680,     0,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   875,
     712,   713,   714,     0,   715,   716,   717,   718,   719,   720,
     721,     0,     0,     0,     0,     0,     0,   876,   877,  2765,
       0,     0,     0,   879,     0,   880,     0,     0,     0,   881,
       0,     0,     0,   882,   883,   244,   245,     0,   764,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,     0,   765,     0,   254,   255,   256,   257,   766,
     259,     0,   260,     0,     0,   767,   261,   768,   769,   770,
     262,   771,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,   772,   773,   270,   271,     0,   272,
     273,   774,   775,   275,     0,   276,   277,   278,   279,   776,
     281,     0,   777,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,   778,   779,   302,     0,
       0,     0,   780,   303,   781,     0,   304,   782,   783,     0,
     305,   306,   307,   784,   785,   786,     0,     0,     0,     0,
     787,   310,   788,     0,     0,   789,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,   790,     0,   337,   338,   339,   340,   341,   791,   792,
     342,   343,     0,   344,   345,   346,   347,   348,   793,     0,
     349,   350,     0,     0,     0,   794,   352,  2821,   353,     0,
       0,     0,   354,     0,   355,   795,   357,   796,     0,   359,
       0,   360,     0,   797,     0,   361,   362,     0,   363,   798,
       0,   364,   365,     0,     0,     0,   799,   367,   368,   369,
     800,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,   801,   374,   375,   376,   802,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,   803,   387,   388,     0,     0,     0,     0,     0,   804,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
     805,     0,     0,     0,     0,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,     0,   413,   414,   415,   806,   416,
     417,   418,   419,   807,   420,   421,     0,     0,     0,     0,
     422,   423,   424,   425,   808,   427,     0,     0,   809,   429,
     810,   430,     0,   431,   811,   812,   813,   814,   815,   436,
     437,   438,   439,   440,     0,   816,   441,   442,     0,     0,
     443,   444,   445,   446,   447,   817,   818,   819,   448,   449,
       0,   820,   821,   450,     0,   451,   452,     0,   453,   454,
     455,     0,     0,   456,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   457,   458,   459,   822,   460,     0,   461,
       0,   462,   463,   464,   465,   466,   467,   468,   823,   824,
     471,   825,   472,     0,   473,   474,   475,     0,   476,     0,
     477,   478,   479,   480,   481,     0,   826,   483,   484,     0,
       0,   485,     0,     0,     0,   486,   487,     0,   488,   489,
       0,     0,   490,   491,   492,   493,   494,     0,   495,   496,
       0,   497,   498,   499,   827,   828,   500,   501,   502,   503,
     504,   505,   506,   507,     0,   508,     0,   509,   510,     0,
     511,   512,   513,     0,   829,     0,   830,   515,   516,   517,
     518,     0,   519,   831,   832,   521,   522,   523,   524,     0,
     833,   526,     0,     0,     0,   527,   528,   529,   530,     0,
       0,     0,   531,     0,     0,     0,   532,     0,   533,   534,
     535,   536,     0,   537,   538,   539,   540,   541,     0,     0,
       0,     0,     0,   542,   543,   544,     0,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,   551,
     552,   553,   554,   834,   835,   555,   556,     0,     0,   557,
     558,   836,   560,   561,   562,   837,   838,   563,   564,   565,
     566,   839,   567,   568,     0,     0,   569,   570,   571,   572,
       0,   840,   573,   574,     0,   841,   842,   843,   844,     0,
       0,     0,     0,     0,   579,   580,     0,   845,   846,   847,
     582,   583,     0,   848,   584,   585,   849,   586,   587,     0,
     588,   589,     0,     0,   590,     0,     0,   591,     0,   592,
       0,   850,   594,     0,     0,   851,   852,   853,   595,   854,
     596,     0,     0,   597,   855,     0,   856,   598,     0,   599,
     600,   857,   858,     0,     0,     0,     0,     0,     0,   603,
     604,   605,     0,   606,   607,   608,   609,     0,     0,   859,
       0,     0,   611,   612,   613,   614,   615,     0,   616,     0,
       0,     0,     0,     0,   860,   861,     0,   617,   618,   619,
     862,   620,   621,   622,     0,   623,   863,   864,   624,   865,
     625,     0,   866,   867,   868,   869,   870,   626,   627,     0,
     871,   628,   872,   629,   873,   630,   631,     0,     0,     0,
     632,   633,   634,   635,   636,   637,   638,   639,     0,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,     0,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,     0,   874,   675,   676,   677,   678,
     679,   680,     0,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   875,   712,   713,   714,     0,   715,   716,
     717,   718,   719,   720,   721,     0,     0,     0,     0,     0,
       0,   876,   877,     0,     0,     0,     0,   879,     0,   880,
       0,     0,     0,   881,     0,     0,     0,   882,   883,   244,
     245,     0,   764,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,     0,   765,     0,   254,
     255,   256,   257,   766,   259,     0,   260,     0,     0,   767,
     261,   768,   769,   770,   262,   771,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,   772,   773,
     270,   271,     0,   272,   273,   774,   775,   275,     0,   276,
     277,   278,   279,   776,   281,     0,   777,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
     778,   779,   302,     0,     0,     0,   780,   303,   781,     0,
     304,   782,   783,     0,   305,   306,   307,   784,   785,   786,
       0,     0,     0,     0,   787,   310,   788,     0,     0,   789,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,   790,     0,   337,   338,   339,
     340,   341,   791,   792,   342,   343,     0,   344,   345,   346,
     347,   348,   793,     0,   349,   350,     0,     0,     0,   794,
     352,  2823,   353,     0,     0,     0,   354,     0,   355,   795,
     357,   796,     0,   359,     0,   360,     0,   797,     0,   361,
     362,     0,   363,   798,     0,   364,   365,     0,     0,     0,
     799,   367,   368,   369,   800,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,   801,   374,   375,   376,   802,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,   803,   387,   388,     0,     0,
       0,     0,     0,   804,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,   805,     0,     0,     0,     0,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,     0,   413,
     414,   415,   806,   416,   417,   418,   419,   807,   420,   421,
       0,     0,     0,     0,   422,   423,   424,   425,   808,   427,
       0,     0,   809,   429,   810,   430,     0,   431,   811,   812,
     813,   814,   815,   436,   437,   438,   439,   440,     0,   816,
     441,   442,     0,     0,   443,   444,   445,   446,   447,   817,
     818,   819,   448,   449,     0,   820,   821,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   457,   458,   459,
     822,   460,     0,   461,     0,   462,   463,   464,   465,   466,
     467,   468,   823,   824,   471,   825,   472,     0,   473,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     826,   483,   484,     0,     0,   485,     0,     0,     0,   486,
     487,     0,   488,   489,     0,     0,   490,   491,   492,   493,
     494,     0,   495,   496,     0,   497,   498,   499,   827,   828,
     500,   501,   502,   503,   504,   505,   506,   507,     0,   508,
       0,   509,   510,     0,   511,   512,   513,     0,   829,     0,
     830,   515,   516,   517,   518,     0,   519,   831,   832,   521,
     522,   523,   524,     0,   833,   526,     0,     0,     0,   527,
     528,   529,   530,     0,     0,     0,   531,     0,     0,     0,
     532,     0,   533,   534,   535,   536,     0,   537,   538,   539,
     540,   541,     0,     0,     0,     0,     0,   542,   543,   544,
       0,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,   551,   552,   553,   554,   834,   835,   555,
     556,     0,     0,   557,   558,   836,   560,   561,   562,   837,
     838,   563,   564,   565,   566,   839,   567,   568,     0,     0,
     569,   570,   571,   572,     0,   840,   573,   574,     0,   841,
     842,   843,   844,     0,     0,     0,     0,     0,   579,   580,
       0,   845,   846,   847,   582,   583,     0,   848,   584,   585,
     849,   586,   587,     0,   588,   589,     0,     0,   590,     0,
       0,   591,     0,   592,     0,   850,   594,     0,     0,   851,
     852,   853,   595,   854,   596,     0,     0,   597,   855,     0,
     856,   598,     0,   599,   600,   857,   858,     0,     0,     0,
       0,     0,     0,   603,   604,   605,     0,   606,   607,   608,
     609,     0,     0,   859,     0,     0,   611,   612,   613,   614,
     615,     0,   616,     0,     0,     0,     0,     0,   860,   861,
       0,   617,   618,   619,   862,   620,   621,   622,     0,   623,
     863,   864,   624,   865,   625,     0,   866,   867,   868,   869,
     870,   626,   627,     0,   871,   628,   872,   629,   873,   630,
     631,     0,     0,     0,   632,   633,   634,   635,   636,   637,
     638,   639,     0,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,     0,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,     0,   874,
     675,   676,   677,   678,   679,   680,     0,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   875,   712,   713,
     714,     0,   715,   716,   717,   718,   719,   720,   721,     0,
       0,     0,     0,     0,     0,   876,   877,     0,     0,     0,
       0,   879,     0,   880,     0,     0,     0,   881,     0,     0,
       0,   882,   883,   244,   245,     0,   764,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,   765,     0,   254,   255,   256,   257,   766,   259,     0,
     260,     0,     0,   767,   261,   768,   769,   770,   262,   771,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,   772,   773,   270,   271,     0,   272,   273,   774,
     775,   275,     0,   276,   277,   278,   279,   776,   281,     0,
     777,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,   778,   779,   302,     0,     0,     0,
     780,   303,   781,     0,   304,   782,   783,     0,   305,   306,
     307,   784,   785,   786,     0,     0,     0,     0,   787,   310,
     788,     0,     0,   789,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,   790,
       0,   337,   338,   339,   340,   341,   791,   792,   342,   343,
       0,   344,   345,   346,   347,   348,   793,     0,   349,   350,
       0,     0,     0,   794,   352,  2825,   353,     0,     0,     0,
     354,     0,   355,   795,   357,   796,     0,   359,     0,   360,
       0,   797,     0,   361,   362,     0,   363,   798,     0,   364,
     365,     0,     0,     0,   799,   367,   368,   369,   800,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,   801,
     374,   375,   376,   802,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,   803,
     387,   388,     0,     0,     0,     0,     0,   804,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,   805,     0,
       0,     0,     0,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,     0,   413,   414,   415,   806,   416,   417,   418,
     419,   807,   420,   421,     0,     0,     0,     0,   422,   423,
     424,   425,   808,   427,     0,     0,   809,   429,   810,   430,
       0,   431,   811,   812,   813,   814,   815,   436,   437,   438,
     439,   440,     0,   816,   441,   442,     0,     0,   443,   444,
     445,   446,   447,   817,   818,   819,   448,   449,     0,   820,
     821,   450,     0,   451,   452,     0,   453,   454,   455,     0,
       0,   456,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   457,   458,   459,   822,   460,     0,   461,     0,   462,
     463,   464,   465,   466,   467,   468,   823,   824,   471,   825,
     472,     0,   473,   474,   475,     0,   476,     0,   477,   478,
     479,   480,   481,     0,   826,   483,   484,     0,     0,   485,
       0,     0,     0,   486,   487,     0,   488,   489,     0,     0,
     490,   491,   492,   493,   494,     0,   495,   496,     0,   497,
     498,   499,   827,   828,   500,   501,   502,   503,   504,   505,
     506,   507,     0,   508,     0,   509,   510,     0,   511,   512,
     513,     0,   829,     0,   830,   515,   516,   517,   518,     0,
     519,   831,   832,   521,   522,   523,   524,     0,   833,   526,
       0,     0,     0,   527,   528,   529,   530,     0,     0,     0,
     531,     0,     0,     0,   532,     0,   533,   534,   535,   536,
       0,   537,   538,   539,   540,   541,     0,     0,     0,     0,
       0,   542,   543,   544,     0,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,   551,   552,   553,
     554,   834,   835,   555,   556,     0,     0,   557,   558,   836,
     560,   561,   562,   837,   838,   563,   564,   565,   566,   839,
     567,   568,     0,     0,   569,   570,   571,   572,     0,   840,
     573,   574,     0,   841,   842,   843,   844,     0,     0,     0,
       0,     0,   579,   580,     0,   845,   846,   847,   582,   583,
       0,   848,   584,   585,   849,   586,   587,     0,   588,   589,
       0,     0,   590,     0,     0,   591,     0,   592,     0,   850,
     594,     0,     0,   851,   852,   853,   595,   854,   596,     0,
       0,   597,   855,     0,   856,   598,     0,   599,   600,   857,
     858,     0,     0,     0,     0,     0,     0,   603,   604,   605,
       0,   606,   607,   608,   609,     0,     0,   859,     0,     0,
     611,   612,   613,   614,   615,     0,   616,     0,     0,     0,
       0,     0,   860,   861,     0,   617,   618,   619,   862,   620,
     621,   622,     0,   623,   863,   864,   624,   865,   625,     0,
     866,   867,   868,   869,   870,   626,   627,     0,   871,   628,
     872,   629,   873,   630,   631,     0,     0,     0,   632,   633,
     634,   635,   636,   637,   638,   639,     0,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,     0,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,     0,   874,   675,   676,   677,   678,   679,   680,
       0,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   875,   712,   713,   714,     0,   715,   716,   717,   718,
     719,   720,   721,     0,     0,     0,     0,     0,     0,   876,
     877,     0,     0,     0,     0,   879,     0,   880,     0,     0,
       0,   881,     0,     0,     0,   882,   883,   244,   245,     0,
     764,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,     0,   765,     0,   254,   255,   256,
     257,   766,   259,     0,   260,     0,     0,   767,   261,   768,
     769,   770,   262,   771,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,   772,   773,   270,   271,
       0,   272,   273,   774,   775,   275,     0,   276,   277,   278,
     279,   776,   281,     0,   777,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,   778,   779,
     302,     0,     0,     0,   780,   303,   781,     0,   304,   782,
     783,     0,   305,   306,   307,   784,   785,   786,     0,     0,
       0,     0,   787,   310,   788,     0,     0,   789,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   790,     0,   337,   338,   339,   340,   341,
     791,   792,   342,   343,     0,   344,   345,   346,   347,   348,
     793,     0,   349,   350,     0,     0,     0,   794,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   795,   357,   796,
       0,   359,     0,   360,     0,   797,     0,   361,   362,     0,
     363,   798,     0,   364,   365,     0,     0,     0,   799,   367,
     368,   369,   800,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,   801,   374,   375,   376,   802,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,   803,   387,   388,     0,     0,     0,     0,
       0,   804,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,   805,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
     806,   416,   417,   418,   419,   807,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   808,   427,     0,     0,
     809,   429,   810,   430,     0,   431,   811,   812,   813,   814,
     815,   436,   437,   438,   439,   440,     0,   816,   441,   442,
       0,     0,   443,   444,   445,   446,   447,   817,   818,   819,
     448,   449,     0,   820,   821,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,   822,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     823,   824,   471,   825,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   826,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,   827,   828,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   829,     0,   830,   515,
     516,   517,   518,     0,   519,   831,   832,   521,   522,   523,
     524,     0,   833,   526,     0,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,   834,   835,   555,   556,     0,
       0,   557,   558,   836,   560,   561,   562,   837,   838,   563,
     564,   565,   566,   839,   567,   568,     0,     0,   569,   570,
     571,   572,     0,   840,   573,   574,     0,   841,   842,   843,
     844,     0,     0,     0,     0,     0,   579,   580,     0,   845,
     846,   847,   582,   583,     0,   848,   584,   585,   849,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   850,   594,     0,     0,   851,   852,   853,
     595,   854,   596,     0,     0,   597,   855,     0,   856,   598,
       0,   599,   600,   857,   858,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   859,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,   860,   861,     0,   617,
     618,   619,   862,   620,   621,   622,     0,   623,   863,   864,
     624,   865,   625,     0,   866,   867,   868,   869,   870,   626,
     627,     0,   871,   628,   872,   629,   873,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   874,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   875,   712,   713,   714,     0,
     715,   716,   717,   718,   719,   720,   721,     0,     0,     0,
       0,     0,     0,   876,   877,     0,     0,     0,     0,   879,
       0,   880,     0,     0,     0,   881,     0,     0,     0,   882,
     883,   244,   245,     0,   764,   247,   248,   249,   250,     0,
       0,   251,     0,     0,     0,     0,   252,     0,     0,   765,
       0,   254,   255,   256,   257,   766,   259,     0,   260,     0,
       0,   767,   261,   768,   769,   770,   262,   771,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
     772,   773,   270,   271,     0,   272,   273,   774,   775,   275,
       0,   276,   277,   278,   279,   776,   281,     0,   777,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,   778,   779,   302,     0,     0,     0,   780,   303,
     781,     0,   304,   782,   783,     0,   305,   306,   307,   784,
     785,   786,     0,     0,     0,     0,   787,   310,   788,     0,
       0,   789,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   790,     0,   337,
     338,   339,   340,   341,   791,   792,   342,   343,     0,   344,
     345,   346,   347,   348,   793,     0,   349,   350,     0,     0,
       0,   794,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   795,   357,   796,     0,   359,     0,   360,     0,   797,
       0,   361,   362,     0,   363,   798,     0,   364,   365,     0,
       0,     0,   799,   367,   368,   369,   800,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,   801,   374,   375,
     376,   802,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,   803,   387,   388,
       0,     0,     0,     0,     0,   804,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,   805,     0,     0,     0,
       0,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
       0,   413,   414,   415,   806,   416,   417,   418,   419,   807,
     420,   421,     0,     0,     0,     0,   422,   423,   424,   425,
     808,   427,     0,     0,   809,   429,   810,   430,     0,   431,
     811,   812,   813,   814,   815,   436,   437,   438,   439,   440,
       0,   816,   441,   442,     0,     0,   443,   444,   445,   446,
     447,   817,   818,   819,   448,   449,     0,   820,   821,   450,
       0,   451,   452,     0,   453,   454,   455,     0,     0,   456,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   457,
     458,   459,   822,   460,     0,   461,     0,   462,   463,   464,
     465,   466,   467,   468,   823,   824,   471,   825,   472,     0,
     473,   474,   475,     0,   476,     0,   477,   478,   479,   480,
     481,     0,   826,   483,   484,     0,     0,   485,     0,     0,
       0,   486,   487,     0,   488,   489,     0,     0,   490,   491,
     492,   493,   494,     0,   495,   496,     0,   497,   498,   499,
     827,   828,   500,   501,   502,   503,   504,   505,   506,   507,
       0,   508,     0,   509,   510,     0,   511,   512,   513,     0,
     829,     0,   830,   515,   516,   517,   518,     0,   519,   831,
     832,   521,   522,   523,   524,     0,   833,   526,     0,     0,
       0,   527,   528,   529,   530,     0,     0,     0,   531,     0,
       0,     0,   532,     0,   533,   534,   535,   536,     0,   537,
     538,   539,   540,   541,     0,     0,     0,     0,     0,   542,
     543,   544,     0,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,   551,   552,   553,   554,   834,
     835,   555,   556,     0,     0,   557,   558,   836,   560,   561,
     562,   837,   838,   563,   564,   565,   566,   839,   567,   568,
       0,     0,   569,   570,   571,   572,     0,   840,   573,   574,
       0,   841,   842,   843,   844,     0,     0,     0,     0,     0,
     579,   580,     0,   845,   846,   847,   582,   583,     0,   848,
     584,   585,   849,   586,   587,     0,   588,   589,     0,     0,
     590,     0,     0,   591,     0,   592,     0,   850,   594,     0,
       0,   851,   852,   853,   595,   854,   596,     0,     0,   597,
     855,     0,   856,   598,     0,   599,   600,   857,   858,     0,
       0,     0,     0,     0,     0,   603,   604,   605,     0,   606,
     607,   608,   609,     0,     0,   859,     0,     0,   611,   612,
     613,   614,   615,     0,   616,     0,     0,     0,     0,     0,
     860,   861,     0,   617,   618,   619,   862,   620,   621,   622,
       0,   623,   863,   864,   624,   865,   625,     0,   866,   867,
     868,   869,   870,   626,   627,     0,   871,   628,   872,   629,
     873,   630,   631,     0,     0,     0,   632,   633,   634,   635,
     636,   637,   638,   639,     0,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,     0,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
       0,   874,   675,   676,   677,   678,   679,   680,     0,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   875,
     712,   713,   714,     0,   715,   716,   717,   718,   719,   720,
     721,     0,     0,     0,     0,     0,     0,   876,   877,     0,
       0,     0,     0,   879,     0,  1298,     0,     0,     0,   881,
       0,     0,     0,   882,   883,   244,   245,     0,   764,   247,
     248,   249,   250,  2112,     0,   251,     0,     0,     0,     0,
    2113,     0,     0,   765,     0,   254,   255,   256,   257,   766,
     259,     0,   260,     0,     0,   767,   261,   768,   769,   770,
     262,   771,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,   772,   773,   270,   271,     0,   272,
     273,   774,   775,   275,     0,   276,   277,   278,   279,   776,
     281,     0,   777,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,   778,   779,   302,     0,
       0,     0,   780,   303,   781,     0,   304,   782,   783,     0,
     305,   306,   307,   784,   785,   786,     0,     0,     0,     0,
     787,   310,   788,     0,     0,   789,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,   790,     0,   337,   338,   339,   340,   341,   791,   792,
     342,   343,     0,   344,   345,   346,   347,   348,   793,     0,
     349,   350,     0,     0,     0,   794,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   795,   357,   796,     0,   359,
       0,   360,     0,   797,     0,   361,   362,     0,   363,   798,
       0,   364,   365,     0,     0,     0,   799,   367,   368,   369,
     800,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,   801,   374,   375,   376,   802,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,   803,   387,   388,     0,     0,     0,     0,     0,   804,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
     805,     0,     0,     0,     0,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,     0,   413,   414,   415,   806,   416,
     417,   418,   419,   807,   420,   421,     0,     0,     0,     0,
     422,   423,   424,   425,   808,   427,     0,     0,   809,   429,
     810,   430,     0,   431,   811,   812,   813,   814,   815,   436,
     437,   438,   439,   440,     0,   816,   441,   442,     0,     0,
     443,   444,   445,   446,   447,   817,     0,   819,   448,   449,
       0,   820,   821,   450,     0,   451,   452,     0,   453,   454,
     455,     0,     0,   456,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   457,   458,   459,   822,   460,     0,   461,
       0,   462,   463,   464,   465,   466,   467,   468,   823,   824,
     471,   825,   472,     0,   473,   474,   475,     0,   476,     0,
     477,   478,   479,   480,   481,     0,   826,   483,   484,     0,
       0,   485,     0,     0,     0,   486,   487,     0,   488,   489,
       0,     0,   490,   491,   492,   493,   494,     0,   495,   496,
       0,   497,   498,   499,   827,   828,   500,   501,   502,   503,
     504,   505,   506,   507,     0,   508,     0,   509,   510,     0,
     511,   512,   513,     0,   829,     0,   830,   515,   516,   517,
     518,     0,   519,   831,   832,   521,   522,   523,   524,     0,
     833,   526,     0,     0,     0,   527,   528,   529,   530,     0,
       0,     0,   531,     0,     0,     0,   532,     0,   533,   534,
     535,   536,     0,   537,   538,   539,   540,   541,     0,     0,
       0,     0,     0,   542,   543,   544,     0,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,   551,
     552,   553,   554,   834,   835,   555,   556,     0,     0,   557,
     558,   836,   560,   561,   562,   837,   838,   563,   564,   565,
     566,   839,   567,   568,     0,     0,   569,   570,   571,   572,
       0,   840,   573,   574,     0,   841,   842,   843,   844,     0,
       0,     0,     0,     0,   579,   580,     0,   845,   846,   847,
     582,   583,     0,   848,   584,   585,   849,   586,   587,     0,
     588,   589,     0,     0,   590,     0,     0,   591,     0,   592,
       0,   850,   594,     0,     0,   851,   852,   853,   595,   854,
     596,     0,     0,   597,   855,     0,   856,   598,     0,   599,
     600,   857,   858,     0,     0,     0,     0,     0,     0,   603,
     604,   605,     0,   606,   607,   608,   609,     0,     0,   859,
       0,     0,   611,   612,   613,   614,   615,     0,   616,     0,
       0,     0,     0,     0,   860,   861,     0,   617,   618,   619,
     862,   620,   621,   622,     0,   623,   863,   864,   624,   865,
     625,     0,   866,   867,   868,   869,   870,   626,   627,     0,
     871,   628,   872,   629,   873,   630,   631,     0,     0,     0,
     632,   633,   634,   635,   636,   637,   638,   639,     0,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,     0,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,     0,   874,   675,   676,   677,   678,
     679,   680,     0,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   875,   712,   713,   714,     0,   715,   716,
     717,   718,   719,   720,   721,     0,     0,     0,     0,     0,
       0,   876,   877,     0,     0,     0,     0,   879,     0,   880,
       0,     0,     0,   881,     0,     0,     0,   882,   883,   244,
     245,     0,   764,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,     0,   765,     0,   254,
     255,   256,   257,   766,   259,     0,   260,     0,     0,   767,
     261,   768,   769,   770,   262,   771,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,   772,   773,
     270,   271,     0,   272,   273,   774,   775,   275,     0,   276,
     277,   278,   279,   776,   281,     0,   777,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
     778,   779,   302,     0,     0,     0,   780,   303,   781,     0,
     304,   782,   783,     0,   305,   306,   307,   784,   785,   786,
       0,     0,     0,     0,   787,   310,   788,     0,     0,  2378,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,   790,     0,   337,   338,   339,
     340,   341,   791,   792,   342,   343,     0,   344,   345,   346,
     347,   348,   793,     0,   349,   350,     0,     0,     0,   794,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   795,
     357,   796,     0,   359,     0,   360,     0,   797,     0,   361,
     362,     0,   363,   798,     0,   364,   365,     0,     0,     0,
     799,   367,   368,   369,   800,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,   801,   374,   375,   376,   802,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,   803,   387,   388,     0,     0,
       0,     0,     0,   804,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,   805,     0,     0,     0,     0,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,     0,   413,
     414,   415,   806,   416,   417,   418,   419,   807,   420,   421,
       0,     0,     0,     0,   422,   423,   424,   425,   808,   427,
       0,     0,   809,   429,   810,   430,     0,   431,   811,   812,
     813,   814,   815,   436,   437,   438,   439,   440,     0,   816,
     441,   442,     0,     0,   443,   444,   445,   446,   447,   817,
     818,   819,   448,   449,     0,   820,   821,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   457,   458,   459,
     822,   460,     0,   461,     0,   462,   463,   464,   465,   466,
     467,   468,   823,   824,   471,   825,   472,     0,   473,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     826,   483,   484,     0,     0,   485,     0,     0,     0,   486,
     487,     0,   488,   489,     0,     0,   490,   491,   492,   493,
     494,     0,   495,   496,     0,   497,   498,   499,   827,   828,
     500,   501,   502,   503,   504,   505,   506,   507,     0,   508,
       0,   509,   510,     0,   511,   512,   513,     0,   829,     0,
     830,   515,   516,   517,   518,     0,   519,   831,   832,   521,
     522,   523,   524,     0,   833,   526,     0,     0,     0,   527,
     528,   529,   530,     0,     0,     0,   531,     0,     0,     0,
     532,     0,   533,   534,   535,   536,     0,   537,   538,   539,
     540,   541,     0,     0,     0,     0,     0,   542,   543,   544,
       0,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,   551,   552,   553,   554,   834,   835,   555,
     556,     0,     0,   557,   558,   836,   560,   561,   562,   837,
     838,   563,   564,   565,   566,   839,   567,   568,     0,     0,
     569,   570,   571,   572,     0,   840,   573,   574,     0,   841,
     842,   843,   844,     0,     0,     0,     0,     0,   579,   580,
       0,   845,   846,   847,   582,   583,     0,   848,   584,   585,
     849,   586,   587,     0,   588,   589,     0,     0,   590,     0,
       0,   591,     0,   592,     0,   850,   594,     0,     0,   851,
     852,   853,   595,   854,   596,     0,     0,   597,   855,     0,
     856,   598,     0,   599,   600,   857,   858,     0,     0,     0,
       0,     0,     0,   603,   604,   605,     0,   606,   607,   608,
     609,     0,     0,   859,     0,     0,   611,   612,   613,   614,
     615,     0,   616,     0,     0,     0,     0,     0,   860,   861,
       0,   617,   618,   619,   862,   620,   621,   622,     0,   623,
     863,   864,   624,   865,   625,     0,   866,   867,   868,   869,
     870,   626,   627,     0,   871,   628,   872,   629,   873,   630,
     631,     0,     0,     0,   632,   633,   634,   635,   636,   637,
     638,   639,     0,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,     0,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,     0,   874,
     675,   676,   677,   678,   679,   680,     0,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   875,   712,   713,
     714,     0,   715,   716,   717,   718,   719,   720,   721,     0,
       0,     0,     0,     0,     0,   876,   877,     0,     0,     0,
       0,   879,     0,   880,     0,     0,     0,   881,     0,     0,
       0,   882,   883,   244,   245,     0,   764,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,   765,     0,   254,   255,   256,   257,   766,   259,     0,
     260,     0,     0,   767,   261,   768,   769,   770,   262,   771,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,   772,   773,   270,   271,     0,   272,   273,   774,
     775,   275,     0,   276,   277,   278,   279,   776,   281,     0,
     777,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,   778,   779,   302,     0,     0,     0,
     780,   303,   781,     0,   304,   782,   783,     0,   305,   306,
     307,   784,   785,   786,     0,     0,     0,     0,   787,   310,
     788,     0,     0,   789,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,   790,
       0,   337,   338,   339,   340,   341,   791,   792,   342,   343,
       0,   344,   345,   346,   347,   348,   793,     0,   349,   350,
       0,     0,     0,   794,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   795,   357,   796,     0,   359,     0,   360,
       0,   797,     0,   361,   362,     0,   363,   798,     0,   364,
     365,     0,     0,     0,   799,   367,   368,   369,   800,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,   801,
     374,   375,   376,  3456,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,   803,
     387,   388,     0,     0,     0,     0,     0,   804,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,   805,     0,
       0,     0,     0,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,     0,   413,   414,   415,   806,   416,   417,   418,
     419,   807,   420,   421,     0,     0,     0,     0,   422,   423,
     424,   425,   808,   427,     0,     0,   809,   429,   810,   430,
       0,   431,   811,   812,   813,   814,   815,   436,   437,   438,
     439,   440,     0,   816,   441,   442,     0,     0,   443,   444,
     445,   446,   447,   817,   818,   819,   448,   449,     0,   820,
     821,   450,     0,   451,   452,     0,   453,   454,   455,     0,
       0,   456,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   457,   458,   459,   822,   460,     0,   461,     0,   462,
     463,   464,   465,   466,   467,   468,   823,   824,   471,   825,
     472,     0,   473,   474,   475,     0,   476,     0,   477,   478,
     479,   480,   481,     0,   826,   483,   484,     0,     0,   485,
       0,     0,     0,   486,   487,     0,   488,   489,     0,     0,
     490,   491,   492,   493,   494,     0,   495,   496,     0,   497,
     498,   499,   827,   828,   500,   501,   502,   503,   504,   505,
     506,   507,     0,   508,     0,   509,   510,     0,   511,   512,
     513,     0,   829,     0,   830,   515,   516,   517,   518,     0,
     519,   831,   832,   521,   522,   523,   524,     0,   833,   526,
       0,     0,     0,   527,   528,   529,   530,     0,     0,     0,
     531,     0,     0,     0,   532,     0,   533,   534,   535,   536,
       0,   537,   538,   539,   540,   541,     0,     0,     0,     0,
       0,   542,   543,   544,     0,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,   551,   552,   553,
     554,   834,   835,   555,   556,     0,     0,   557,   558,   836,
     560,   561,   562,   837,   838,   563,   564,   565,   566,   839,
     567,   568,     0,     0,   569,   570,   571,   572,     0,   840,
     573,   574,     0,   841,   842,   843,   844,     0,     0,     0,
       0,     0,   579,   580,     0,   845,   846,   847,   582,   583,
       0,   848,   584,   585,   849,   586,   587,     0,   588,   589,
       0,     0,   590,     0,     0,   591,     0,   592,     0,   850,
     594,     0,     0,   851,   852,   853,   595,   854,   596,     0,
       0,   597,   855,     0,   856,   598,     0,   599,   600,   857,
     858,     0,     0,     0,     0,     0,     0,   603,   604,   605,
       0,   606,   607,   608,   609,     0,     0,   859,     0,     0,
     611,   612,   613,   614,   615,     0,   616,     0,     0,     0,
       0,     0,   860,   861,     0,   617,   618,   619,   862,   620,
     621,   622,     0,   623,   863,   864,   624,   865,   625,     0,
     866,   867,   868,   869,   870,   626,   627,     0,   871,   628,
     872,   629,   873,   630,   631,     0,     0,     0,   632,   633,
     634,   635,   636,   637,   638,   639,     0,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,     0,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,     0,   874,   675,   676,   677,   678,   679,   680,
       0,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   875,   712,   713,   714,     0,   715,   716,   717,   718,
     719,   720,   721,     0,     0,     0,     0,     0,     0,   876,
     877,     0,     0,     0,     0,   879,     0,   880,     0,     0,
       0,   881,     0,     0,     0,   882,   883,   244,   245,     0,
     764,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,     0,   765,     0,   254,   255,   256,
     257,   766,   259,     0,   260,     0,     0,   767,   261,   768,
     769,   770,   262,   771,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,   772,   773,   270,   271,
       0,   272,   273,   774,   775,   275,     0,   276,   277,   278,
     279,   776,   281,     0,   777,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,   778,   779,
     302,     0,     0,     0,   780,   303,   781,     0,   304,   782,
     783,     0,   305,   306,   307,   784,   785,   786,     0,     0,
       0,     0,   787,   310,   788,     0,     0,   789,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,   790,     0,   337,   338,   339,   340,   341,
     791,   792,   342,   343,     0,   344,   345,   346,   347,   348,
     793,     0,   349,   350,     0,     0,     0,   794,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   795,   357,   796,
       0,   359,     0,   360,     0,   797,     0,   361,   362,     0,
     363,   798,     0,   364,   365,     0,     0,     0,   799,   367,
     368,   369,   800,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,   801,   374,   375,   376,  3527,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,   803,   387,   388,     0,     0,     0,     0,
       0,   804,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,   805,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
     806,   416,   417,   418,   419,   807,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   808,   427,     0,     0,
     809,   429,   810,   430,     0,   431,   811,   812,   813,   814,
     815,   436,   437,   438,   439,   440,     0,   816,   441,   442,
       0,     0,   443,   444,   445,   446,   447,   817,   818,   819,
     448,   449,     0,   820,   821,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,   822,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     823,   824,   471,   825,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   826,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,   827,   828,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   829,     0,   830,   515,
     516,   517,   518,     0,   519,   831,   832,   521,   522,   523,
     524,     0,   833,   526,     0,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,   834,   835,   555,   556,     0,
       0,   557,   558,   836,   560,   561,   562,   837,   838,   563,
     564,   565,   566,   839,   567,   568,     0,     0,   569,   570,
     571,   572,     0,   840,   573,   574,     0,   841,   842,   843,
     844,     0,     0,     0,     0,     0,   579,   580,     0,   845,
     846,   847,   582,   583,     0,   848,   584,   585,   849,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   850,   594,     0,     0,   851,   852,   853,
     595,   854,   596,     0,     0,   597,   855,     0,   856,   598,
       0,   599,   600,   857,   858,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   859,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,   860,   861,     0,   617,
     618,   619,   862,   620,   621,   622,     0,   623,   863,   864,
     624,   865,   625,     0,   866,   867,   868,   869,   870,   626,
     627,     0,   871,   628,   872,   629,   873,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   874,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   875,   712,   713,   714,     0,
     715,   716,   717,   718,   719,   720,   721,     0,     0,     0,
       0,     0,     0,   876,   877,     0,     0,     0,     0,   879,
       0,   880,     0,     0,     0,   881,     0,     0,     0,   882,
     883,   244,   245,     0,   764,   247,   248,   249,   250,     0,
       0,   251,     0,     0,     0,     0,   252,     0,     0,   765,
       0,   254,   255,   256,   257,   766,   259,     0,   260,     0,
       0,   767,   261,   768,   769,   770,   262,   771,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
     772,   773,   270,   271,     0,   272,   273,   774,   775,   275,
       0,   276,   277,   278,   279,   776,   281,     0,   777,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,   778,   779,   302,     0,     0,     0,   780,   303,
     781,     0,   304,   782,   783,     0,   305,   306,   307,   784,
     785,   786,     0,     0,     0,     0,   787,   310,   788,     0,
       0,   789,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,   336,   790,     0,   337,
     338,   339,   340,   341,   791,   792,   342,   343,     0,   344,
     345,   346,   347,   348,   793,     0,   349,   350,     0,     0,
       0,   794,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   795,   357,   796,     0,   359,     0,   360,     0,   797,
       0,   361,   362,     0,   363,   798,     0,   364,   365,     0,
       0,     0,   799,   367,   368,   369,   800,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,   801,   374,   375,
     376,   802,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,   803,   387,   388,
       0,     0,     0,     0,     0,   804,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,   805,     0,     0,     0,
       0,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
       0,   413,   414,   415,   806,   416,   417,   418,   419,   807,
     420,   421,  5346,     0,     0,     0,   422,   423,   424,   425,
     808,   427,     0,     0,   809,   429,   810,   430,     0,   431,
     811,   812,   813,   814,   815,   436,   437,   438,   439,   440,
       0,   816,   441,   442,     0,     0,   443,   444,   445,   446,
     447,   817,     0,   819,   448,   449,     0,   820,   821,   450,
       0,   451,   452,     0,   453,   454,   455,     0,     0,   456,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   457,
     458,   459,   822,   460,     0,   461,     0,   462,   463,   464,
     465,   466,   467,   468,   823,   824,   471,   825,   472,     0,
     473,   474,   475,     0,   476,     0,   477,   478,   479,   480,
     481,     0,   826,   483,   484,     0,     0,   485,     0,     0,
       0,   486,   487,     0,   488,   489,     0,     0,   490,   491,
     492,   493,   494,     0,   495,   496,     0,   497,   498,   499,
     827,   828,   500,   501,   502,   503,   504,   505,   506,   507,
       0,   508,     0,   509,   510,     0,   511,   512,   513,     0,
     829,     0,   830,   515,   516,   517,   518,     0,   519,   831,
     832,   521,   522,   523,   524,     0,   833,   526,     0,     0,
       0,   527,   528,   529,   530,     0,     0,     0,   531,     0,
       0,     0,   532,     0,   533,   534,   535,   536,     0,   537,
     538,   539,   540,   541,     0,     0,     0,     0,     0,   542,
     543,   544,     0,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,   551,   552,   553,   554,   834,
     835,   555,   556,     0,     0,   557,   558,   836,   560,   561,
     562,   837,   838,   563,   564,   565,   566,   839,   567,   568,
       0,     0,   569,   570,   571,   572,     0,   840,   573,   574,
       0,   841,   842,   843,   844,     0,     0,     0,     0,     0,
     579,   580,     0,   845,   846,   847,   582,   583,     0,   848,
     584,   585,   849,   586,   587,     0,   588,   589,     0,     0,
     590,     0,     0,   591,     0,   592,     0,   850,   594,     0,
       0,   851,   852,   853,   595,   854,   596,     0,     0,   597,
     855,     0,   856,   598,     0,   599,   600,   857,   858,     0,
       0,     0,     0,     0,     0,   603,   604,   605,     0,   606,
     607,   608,   609,     0,     0,   859,     0,     0,   611,   612,
     613,   614,   615,     0,   616,     0,     0,     0,     0,     0,
     860,   861,     0,   617,   618,   619,   862,   620,   621,   622,
       0,   623,   863,   864,   624,   865,   625,     0,   866,   867,
     868,   869,   870,   626,   627,     0,   871,   628,   872,   629,
     873,   630,   631,     0,     0,     0,   632,   633,   634,   635,
     636,   637,   638,   639,     0,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,     0,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
       0,   874,   675,   676,   677,   678,   679,   680,     0,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   875,
     712,   713,   714,     0,   715,   716,   717,   718,   719,   720,
     721,     0,     0,     0,     0,     0,     0,   876,   877,     0,
       0,     0,     0,   879,     0,   880,     0,     0,     0,   881,
       0,     0,     0,   882,   883,   244,   245,     0,   764,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,     0,   765,     0,   254,   255,   256,   257,   766,
     259,     0,   260,     0,     0,   767,   261,   768,   769,   770,
     262,   771,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,   772,   773,   270,   271,     0,   272,
     273,   774,   775,   275,     0,   276,   277,   278,   279,   776,
     281,     0,   777,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,   778,   779,   302,     0,
       0,     0,   780,   303,   781,     0,   304,   782,   783,     0,
     305,   306,   307,   784,   785,   786,     0,     0,     0,     0,
     787,   310,   788,     0,     0,   789,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,   790,     0,   337,   338,   339,   340,   341,   791,   792,
     342,   343,     0,   344,   345,   346,   347,   348,   793,     0,
     349,   350,     0,     0,     0,   794,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   795,   357,   796,     0,   359,
       0,   360,     0,   797,     0,   361,   362,     0,   363,   798,
       0,   364,   365,     0,     0,     0,   799,   367,   368,   369,
     800,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,   801,   374,   375,   376,   802,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,   803,   387,   388,     0,     0,     0,     0,     0,   804,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
     805,     0,     0,     0,     0,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,     0,   413,   414,   415,   806,   416,
     417,   418,   419,   807,   420,   421,     0,     0,     0,     0,
     422,   423,   424,   425,   808,   427,     0,     0,   809,   429,
     810,   430,     0,   431,   811,   812,   813,   814,   815,   436,
     437,   438,   439,   440,     0,   816,   441,   442,     0,     0,
     443,   444,   445,   446,   447,   817,     0,   819,   448,   449,
       0,   820,   821,   450,     0,   451,   452,     0,   453,   454,
     455,     0,     0,   456,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   457,   458,   459,   822,   460,     0,   461,
       0,   462,   463,   464,   465,   466,   467,   468,   823,   824,
     471,   825,   472,     0,   473,   474,   475,     0,   476,     0,
     477,   478,   479,   480,   481,     0,   826,   483,   484,     0,
       0,   485,     0,     0,     0,   486,   487,     0,   488,   489,
       0,     0,   490,   491,   492,   493,   494,     0,   495,   496,
       0,   497,   498,   499,   827,   828,   500,   501,   502,   503,
     504,   505,   506,   507,     0,   508,     0,   509,   510,     0,
     511,   512,   513,     0,   829,     0,   830,   515,   516,   517,
     518,     0,   519,   831,   832,   521,   522,   523,   524,     0,
     833,   526,     0,     0,     0,   527,   528,   529,   530,     0,
       0,     0,   531,     0,     0,     0,   532,     0,   533,   534,
     535,   536,     0,   537,   538,   539,   540,   541,     0,     0,
       0,     0,     0,   542,   543,   544,     0,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,   551,
     552,   553,   554,   834,   835,   555,   556,     0,     0,   557,
     558,   836,   560,   561,   562,   837,   838,   563,   564,   565,
     566,   839,   567,   568,     0,     0,   569,   570,   571,   572,
       0,   840,   573,   574,     0,   841,   842,   843,   844,     0,
       0,     0,     0,     0,   579,   580,     0,   845,   846,   847,
     582,   583,     0,   848,   584,   585,   849,   586,   587,     0,
     588,   589,     0,     0,   590,     0,     0,   591,     0,   592,
       0,   850,   594,     0,     0,   851,   852,   853,   595,   854,
     596,     0,     0,   597,   855,     0,   856,   598,     0,   599,
     600,   857,   858,     0,     0,     0,     0,     0,     0,   603,
     604,   605,     0,   606,   607,   608,   609,     0,     0,   859,
       0,     0,   611,   612,   613,   614,   615,     0,   616,     0,
       0,     0,     0,     0,   860,   861,     0,   617,   618,   619,
     862,   620,   621,   622,     0,   623,   863,   864,   624,   865,
     625,     0,   866,   867,   868,   869,   870,   626,   627,     0,
     871,   628,   872,   629,   873,   630,   631,     0,     0,     0,
     632,   633,   634,   635,   636,   637,   638,   639,     0,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,     0,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,     0,   874,   675,   676,   677,   678,
     679,   680,     0,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   875,   712,   713,   714,     0,   715,   716,
     717,   718,   719,   720,   721,     0,     0,     0,     0,     0,
       0,   876,   877,     0,     0,     0,     0,   879,     0,   880,
       0,     0,     0,   881,     0,     0,     0,   882,   883,   244,
     245,     0,   764,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,     0,   765,     0,   254,
     255,   256,   257,   766,   259,     0,   260,     0,     0,   767,
     261,   768,   769,   770,   262,   771,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,   772,   773,
     270,   271,     0,   272,   273,   774,   775,   275,     0,   276,
     277,   278,   279,   776,   281,     0,   777,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
     778,   779,   302,     0,     0,     0,   780,   303,   781,     0,
     304,   782,   783,     0,   305,   306,   307,   784,   785,   786,
       0,     0,     0,     0,   787,   310,   788,     0,     0,   789,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,   790,     0,   337,   338,   339,
     340,   341,   791,   792,   342,   343,     0,   344,   345,   346,
     347,   348,   793,     0,   349,   350,     0,     0,     0,   794,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   795,
     357,   796,     0,   359,     0,   360,     0,   797,     0,   361,
     362,     0,   363,   798,     0,   364,   365,     0,     0,     0,
     799,   367,   368,   369,   800,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,   801,   374,   375,   376,  2130,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,   803,   387,   388,     0,     0,
       0,     0,     0,   804,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,   805,     0,     0,     0,     0,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,     0,   413,
     414,   415,   806,   416,   417,   418,   419,   807,   420,   421,
       0,     0,     0,     0,   422,   423,   424,   425,   808,   427,
       0,     0,   809,   429,   810,   430,     0,   431,   811,   812,
     813,   814,   815,   436,   437,   438,   439,   440,     0,   816,
     441,   442,     0,     0,   443,   444,   445,   446,   447,   817,
       0,   819,   448,   449,     0,   820,   821,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   457,   458,   459,
     822,   460,     0,   461,     0,   462,   463,   464,   465,   466,
     467,   468,   823,   824,   471,   825,   472,     0,   473,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     826,   483,   484,     0,     0,   485,     0,     0,     0,   486,
     487,     0,   488,   489,     0,     0,   490,   491,   492,   493,
     494,     0,   495,   496,     0,   497,   498,   499,   827,   828,
     500,   501,   502,   503,   504,   505,   506,   507,     0,   508,
       0,   509,   510,     0,   511,   512,   513,     0,   829,     0,
     830,   515,   516,   517,   518,     0,   519,   831,   832,   521,
     522,   523,   524,     0,   833,   526,     0,     0,     0,   527,
     528,   529,   530,     0,     0,     0,   531,     0,     0,     0,
     532,     0,   533,   534,   535,   536,     0,   537,   538,   539,
     540,   541,     0,     0,     0,     0,     0,   542,   543,   544,
       0,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,   551,   552,   553,   554,   834,   835,   555,
     556,     0,     0,   557,   558,   836,   560,   561,   562,   837,
     838,   563,   564,   565,   566,   839,   567,   568,     0,     0,
     569,   570,   571,   572,     0,   840,   573,   574,     0,   841,
     842,   843,   844,     0,     0,     0,     0,     0,   579,   580,
       0,   845,   846,   847,   582,   583,     0,   848,   584,   585,
     849,   586,   587,     0,   588,   589,     0,     0,   590,     0,
       0,   591,     0,   592,     0,   850,   594,     0,     0,   851,
     852,   853,   595,   854,   596,     0,     0,   597,   855,     0,
     856,   598,     0,   599,   600,   857,   858,     0,     0,     0,
       0,     0,     0,   603,   604,   605,     0,   606,   607,   608,
     609,     0,     0,   859,     0,     0,   611,   612,   613,   614,
     615,     0,   616,     0,     0,     0,     0,     0,   860,   861,
       0,   617,   618,   619,   862,   620,   621,   622,     0,   623,
     863,   864,   624,   865,   625,     0,   866,   867,   868,   869,
     870,   626,   627,     0,   871,   628,   872,   629,   873,   630,
     631,     0,     0,     0,   632,   633,   634,   635,   636,   637,
     638,   639,     0,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,     0,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,     0,   874,
     675,   676,   677,   678,   679,   680,     0,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   875,   712,   713,
     714,     0,   715,   716,   717,   718,   719,   720,   721,     0,
       0,     0,     0,     0,     0,   876,   877,     0,     0,     0,
       0,   879,     0,   880,     0,     0,     0,   881,     0,     0,
       0,   882,   883,   244,   245,     0,   764,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,   765,     0,   254,   255,   256,   257,   766,   259,     0,
     260,     0,     0,   767,   261,   768,   769,   770,   262,   771,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,   772,   773,   270,   271,     0,   272,   273,   774,
     775,   275,     0,   276,   277,   278,   279,   776,   281,     0,
     777,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,   778,   779,   302,     0,     0,     0,
     780,   303,   781,     0,   304,   782,   783,     0,   305,   306,
     307,   784,   785,   786,     0,     0,     0,     0,   787,   310,
     788,     0,     0,   789,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,   790,
       0,   337,   338,   339,   340,   341,   791,   792,   342,   343,
       0,   344,   345,   346,   347,   348,   793,     0,   349,   350,
       0,     0,     0,   794,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   795,   357,   796,     0,   359,     0,   360,
       0,   797,     0,   361,   362,     0,   363,   798,     0,   364,
     365,     0,     0,     0,   799,   367,   368,   369,   800,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,   801,
     374,   375,   376,  2132,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,   803,
     387,   388,     0,     0,     0,     0,     0,   804,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,   805,     0,
       0,     0,     0,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,     0,   413,   414,   415,   806,   416,   417,   418,
     419,   807,   420,   421,     0,     0,     0,     0,   422,   423,
     424,   425,   808,   427,     0,     0,   809,   429,   810,   430,
       0,   431,   811,   812,   813,   814,   815,   436,   437,   438,
     439,   440,     0,   816,   441,   442,     0,     0,   443,   444,
     445,   446,   447,   817,     0,   819,   448,   449,     0,   820,
     821,   450,     0,   451,   452,     0,   453,   454,   455,     0,
       0,   456,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   457,   458,   459,   822,   460,     0,   461,     0,   462,
     463,   464,   465,   466,   467,   468,   823,   824,   471,   825,
     472,     0,   473,   474,   475,     0,   476,     0,   477,   478,
     479,   480,   481,     0,   826,   483,   484,     0,     0,   485,
       0,     0,     0,   486,   487,     0,   488,   489,     0,     0,
     490,   491,   492,   493,   494,     0,   495,   496,     0,   497,
     498,   499,   827,   828,   500,   501,   502,   503,   504,   505,
     506,   507,     0,   508,     0,   509,   510,     0,   511,   512,
     513,     0,   829,     0,   830,   515,   516,   517,   518,     0,
     519,   831,   832,   521,   522,   523,   524,     0,   833,   526,
       0,     0,     0,   527,   528,   529,   530,     0,     0,     0,
     531,     0,     0,     0,   532,     0,   533,   534,   535,   536,
       0,   537,   538,   539,   540,   541,     0,     0,     0,     0,
       0,   542,   543,   544,     0,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,   551,   552,   553,
     554,   834,   835,   555,   556,     0,     0,   557,   558,   836,
     560,   561,   562,   837,   838,   563,   564,   565,   566,   839,
     567,   568,     0,     0,   569,   570,   571,   572,     0,   840,
     573,   574,     0,   841,   842,   843,   844,     0,     0,     0,
       0,     0,   579,   580,     0,   845,   846,   847,   582,   583,
       0,   848,   584,   585,   849,   586,   587,     0,   588,   589,
       0,     0,   590,     0,     0,   591,     0,   592,     0,   850,
     594,     0,     0,   851,   852,   853,   595,   854,   596,     0,
       0,   597,   855,     0,   856,   598,     0,   599,   600,   857,
     858,     0,     0,     0,     0,     0,     0,   603,   604,   605,
       0,   606,   607,   608,   609,     0,     0,   859,     0,     0,
     611,   612,   613,   614,   615,     0,   616,     0,     0,     0,
       0,     0,   860,   861,     0,   617,   618,   619,   862,   620,
     621,   622,     0,   623,   863,   864,   624,   865,   625,     0,
     866,   867,   868,   869,   870,   626,   627,     0,   871,   628,
     872,   629,   873,   630,   631,     0,     0,     0,   632,   633,
     634,   635,   636,   637,   638,   639,     0,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,     0,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,     0,   874,   675,   676,   677,   678,   679,   680,
       0,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   875,   712,   713,   714,     0,   715,   716,   717,   718,
     719,   720,   721,     0,     0,     0,     0,     0,     0,   876,
     877,     0,     0,     0,     0,   879,     0,   880,     0,     0,
       0,   881,     0,     0,     0,   882,   883,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,     0,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
       0,   416,   417,   418,   419,     0,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   426,   427,     0,     0,
     428,   429,     0,   430,     0,   431,     0,   432,   433,   434,
     435,   436,   437,   438,   439,   440,     0,     0,   441,   442,
       0,     0,   443,   444,   445,   446,   447,     0,     0,     0,
     448,   449,     0,     0,     0,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,     0,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,     0,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   514,     0,     0,   515,
     516,   517,   518,     0,   519,     0,   520,   521,   522,   523,
     524,     0,   525,   526,    42,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,     0,     0,   555,   556,     0,
       0,   557,   558,   559,   560,   561,   562,     0,     0,   563,
     564,   565,   566,     0,   567,   568,     0,    49,   569,   570,
     571,   572,     0,     0,   573,   574,     0,   575,   576,   577,
     578,     0,     0,     0,     0,     0,   579,   580,     0,     0,
       0,   581,   582,   583,     0,     0,   584,   585,     0,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   593,   594,     0,     0,     0,     0,     0,
     595,    54,   596,     0,     0,   597,     0,     0,     0,   598,
       0,   599,   600,   601,   602,     0,     0,     0,    55,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   610,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,     0,     0,     0,   617,
     618,   619,     0,   620,   621,   622,     0,   623,     0,     0,
     624,     0,   625,     0,     0,     0,     0,     0,     0,   626,
     627,     0,     0,   628,     0,   629,     0,   630,   631,     0,
       0,  3001,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,  3002,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   674,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,     0,
     715,   716,   717,   718,   719,   720,   721,  3003,     0,     0,
       0,     0,     0,   244,   245,     0,   246,   247,   248,   249,
     250,  3004,     0,   251,     0,     0,     0,     0,   252,     0,
    3005,   253,     0,   254,   255,   256,   257,   258,   259,     0,
     260,     0,     0,     0,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,   272,   273,   274,
       0,   275,     0,   276,   277,   278,   279,   280,   281,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,     0,     0,   302,     0,     0,     0,
       0,   303,     0,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,   310,
       0,     0,     0,     0,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,  3000,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,   344,   345,   346,   347,   348,     0,     0,   349,   350,
       0,     0,     0,   351,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   356,   357,   358,     0,   359,     0,   360,
       0,     0,     0,   361,   362,     0,   363,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,     0,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,     0,
     374,   375,   376,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,     0,
     387,   388,     0,     0,     0,     0,     0,   389,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,     0,     0,
       0,     0,     0,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,     0,   413,   414,   415,     0,   416,   417,   418,
     419,     0,   420,   421,     0,     0,     0,     0,   422,   423,
     424,   425,   426,   427,     0,     0,   428,   429,     0,   430,
       0,   431,     0,   432,   433,   434,   435,   436,   437,   438,
     439,   440,     0,     0,   441,   442,     0,     0,   443,   444,
     445,   446,   447,     0,     0,     0,   448,   449,     0,     0,
       0,   450,     0,   451,   452,     0,   453,   454,   455,     0,
       0,   456,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   457,   458,   459,     0,   460,     0,   461,     0,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,     0,
     472,     0,   473,   474,   475,     0,   476,     0,   477,   478,
     479,   480,   481,     0,   482,   483,   484,     0,     0,   485,
       0,     0,     0,   486,   487,     0,   488,   489,     0,     0,
     490,   491,   492,   493,   494,     0,   495,   496,     0,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,   507,     0,   508,     0,   509,   510,     0,   511,   512,
     513,     0,   514,     0,     0,   515,   516,   517,   518,     0,
     519,     0,   520,   521,   522,   523,   524,     0,   525,   526,
       0,     0,     0,   527,   528,   529,   530,     0,     0,     0,
     531,     0,     0,     0,   532,     0,   533,   534,   535,   536,
       0,   537,   538,   539,   540,   541,     0,     0,     0,     0,
       0,   542,   543,   544,     0,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,   551,   552,   553,
     554,     0,     0,   555,   556,     0,     0,   557,   558,   559,
     560,   561,   562,     0,     0,   563,   564,   565,   566,     0,
     567,   568,     0,     0,   569,   570,   571,   572,     0,     0,
     573,   574,     0,   575,   576,   577,   578,     0,     0,     0,
       0,     0,   579,   580,     0,     0,     0,   581,   582,   583,
       0,     0,   584,   585,     0,   586,   587,     0,   588,   589,
       0,     0,   590,     0,     0,   591,     0,   592,     0,   593,
     594,     0,     0,     0,     0,     0,   595,     0,   596,     0,
       0,   597,     0,     0,     0,   598,     0,   599,   600,   601,
     602,     0,     0,     0,     0,     0,     0,   603,   604,   605,
       0,   606,   607,   608,   609,     0,     0,   610,     0,     0,
     611,   612,   613,   614,   615,     0,   616,     0,     0,     0,
       0,     0,     0,     0,     0,   617,   618,   619,     0,   620,
     621,   622,     0,   623,     0,     0,   624,     0,   625,     0,
       0,     0,     0,     0,     0,   626,   627,     0,     0,   628,
       0,   629,     0,   630,   631,     0,     0,  3001,   632,   633,
     634,   635,   636,   637,   638,   639,     0,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,  3002,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,     0,   674,   675,   676,   677,   678,   679,   680,
       0,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,     0,   715,   716,   717,   718,
     719,   720,   721,  3003,     0,     0,     0,     0,     0,   244,
     245,     0,   246,   247,   248,   249,   250,  3004,     0,   251,
       0,     0,     0,     0,   252,     0,  3005,   253,     0,   254,
     255,   256,   257,   258,   259,     0,   260,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,   272,   273,   274,     0,   275,     0,   276,
     277,   278,   279,   280,   281,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,   310,     0,     0,     0,     0,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,   345,   346,
     347,   348,     0,     0,   349,   350,     0,     0,     0,   351,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,     0,   360,     0,     0,     0,   361,
     362,     0,   363,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,     0,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,   376,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,     0,   387,   388,     0,     0,
       0,     0,     0,   389,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,     0,     0,     0,     0,     0,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,     0,   413,
     414,   415,     0,   416,   417,   418,   419,     0,   420,   421,
       0,     0,     0,     0,   422,   423,   424,   425,   426,   427,
       0,     0,   428,   429,     0,   430,     0,   431,     0,   432,
     433,   434,   435,   436,   437,   438,   439,   440,     0,     0,
     441,   442,     0,     0,   443,   444,   445,   446,   447,     0,
       0,     0,   448,   449,     0,     0,     0,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   457,   458,   459,
       0,   460,     0,   461,     0,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,     0,   472,     0,   473,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     482,   483,   484,     0,     0,   485,     0,     0,     0,   486,
     487,     0,   488,   489,     0,     0,   490,   491,   492,   493,
     494,     0,   495,   496,     0,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,   507,     0,   508,
       0,   509,   510,     0,   511,   512,   513,     0,   514,     0,
       0,   515,   516,   517,   518,     0,   519,     0,   520,   521,
     522,   523,   524,     0,   525,   526,     0,     0,     0,   527,
     528,   529,   530,     0,     0,     0,   531,     0,     0,     0,
     532,     0,   533,   534,   535,   536,     0,   537,   538,   539,
     540,   541,     0,     0,     0,     0,     0,   542,   543,   544,
       0,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,   551,   552,   553,   554,     0,     0,   555,
     556,     0,     0,   557,   558,   559,   560,   561,   562,     0,
       0,   563,   564,   565,   566,     0,   567,   568,     0,     0,
     569,   570,   571,   572,     0,     0,   573,   574,     0,   575,
     576,   577,   578,     0,     0,     0,     0,     0,   579,   580,
       0,     0,     0,   581,   582,   583,     0,     0,   584,   585,
       0,   586,   587,     0,   588,   589,     0,     0,   590,     0,
       0,   591,     0,   592,     0,   593,   594,     0,     0,     0,
       0,     0,   595,     0,   596,     0,     0,   597,     0,     0,
       0,   598,     0,   599,   600,   601,   602,     0,     0,     0,
       0,     0,     0,   603,   604,   605,     0,   606,   607,   608,
     609,     0,     0,   610,     0,     0,   611,   612,   613,   614,
     615,     0,   616,     0,     0,     0,     0,     0,     0,     0,
       0,   617,   618,   619,     0,   620,   621,   622,     0,   623,
       0,     0,   624,     0,   625,     0,     0,     0,     0,     0,
       0,   626,   627,     0,     0,   628,     0,   629,     0,   630,
     631,     0,     0,  3001,   632,   633,   634,   635,   636,   637,
     638,   639,     0,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,  3002,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,     0,   674,
     675,   676,   677,   678,   679,   680,     0,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,     0,   715,   716,   717,   718,   719,   720,   721,  3003,
       0,     0,     0,     0,   244,   245,     0,   246,   247,   248,
     249,   250,     0,  3004,   251,     0,     0,     0,     0,   252,
       0,     0,  3005,     0,   254,   255,   256,   257,   258,   259,
       0,  -567,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,     0,     0,
       0,     0,   269,  5181,     0,   270,   271,     0,   272,   273,
       0,     0,     0,     0,   276,   277,   278,  5182,   280,   281,
       0,   282,   283,     0,   284,   285,     0,   287,     0,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,     0,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
       0,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,     0,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,     0,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,     0,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,  5183,   344,   345,   346,   347,   348,     0,     0,     0,
       0,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,     0,   362,     0,     0,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,  5184,
       0,   370,     0,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,     0,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,  5185,     0,     0,   382,
       0,   383,     0,     0,     0,   385,     0,     0,   386,  5186,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,  -522,     0,     0,   395,     0,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,     0,   413,   414,   415,     0,   416,   417,
     418,   419,     0,   420,   421,     0,     0,     0,     0,   422,
     423,   424,   425,   426,   427,     0,     0,   428,   429,     0,
     430,     0,   431,     0,   432,   433,   434,   435,   436,   437,
     438,   439,   440,     0,     0,   441,   442,     0,     0,   443,
     444,   445,   446,   447,     0,     0,     0,     0,   449,     0,
       0,     0,   450,     0,   451,   452,     0,   453,   454,  5187,
       0,     0,   456,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   457,   458,   459,     0,   460,     0,   461,     0,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
       0,     0,     0,     0,   474,   475,     0,   476,     0,   477,
     478,   479,   480,   481,     0,   482,   483,   484,     0,     0,
     485,     0,     0,     0,   486,   487,     0,   488,   489,     0,
       0,   490,   491,   492,   493,   494,     0,   495,   496,     0,
     497,     0,   499,  -522,     0,   500,   501,   502,   503,   504,
     505,   506,   507,     0,     0,     0,   509,   510,     0,   511,
     512,   513,  5188,   514,     0,     0,     0,   516,   517,   518,
       0,   519,     0,   520,   521,     0,   523,   524,     0,   525,
     526,     0,     0,     0,   527,   528,   529,   530,     0,     0,
       0,   531,     0,     0,     0,     0,     0,     0,   534,     0,
     536,     0,   537,   538,   539,   540,   541,     0,     0,     0,
       0,     0,   542,   543,   544,     0,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,     0,   551,   552,
     553,   554,     0,     0,     0,   556,     0,     0,   557,   558,
     559,   560,   561,   562,     0,     0,   563,   564,   565,   566,
       0,   567,   568,     0,     0,   569,   570,   571,   572,     0,
       0,   573,   574,     0,   575,   576,   577,   578,     0,     0,
       0,     0,     0,   579,   580,     0,     0,     0,     0,   582,
     583,     0,     0,   584,   585,     0,   586,   587,     0,     0,
       0,     0,     0,   590,     0,     0,   591,     0,   592,     0,
     593,   594,     0,     0,     0,     0,     0,   595,     0,   596,
       0,     0,   597,     0,     0,     0,   598,     0,   599,   600,
     601,   602,     0,     0,  -522,     0,     0,     0,   603,   604,
     605,     0,   606,     0,   608,   609,     0,     0,   610,     0,
       0,   611,   612,   613,   614,   615,     0,   616,     0,     0,
       0,     0,     0,     0,     0,     0,   617,   618,   619,     0,
     620,   621,   622,     0,     0,     0,     0,   624,     0,   625,
       0,     0,     0,     0,     0,     0,   626,   627,     0,     0,
     628,     0,   629,     0,   630,   631,     0,     0,     0,   632,
     633,   634,   635,   636,   637,   638,   639,     0,   640,   641,
     642,     0,   644,   645,   646,   647,   648,   649,     0,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,     0,   674,   675,   676,   677,   678,   679,
     680,     0,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,     0,     0,   716,   717,
     718,   719,   720,   721,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,   253,  5585,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,   768,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,  2917,     0,     0,     0,     0,   309,
     310,   788,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
       0,     0,   337,   338,   339,   340,   341,     0,   792,   342,
     343,     0,   344,   345,   346,   347,   348,   793,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,   361,   362,     0,   363,   798,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,   805,
       0,     0,     0,     0,   395,     0,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,     0,   413,   414,   415,     0,   416,   417,
     418,   419,     0,   420,   421,     0,     0,     0,     0,   422,
     423,   424,   425,   426,   427,     0,     0,   428,   429,     0,
     430,     0,   431,     0,   432,   433,   434,   435,   436,   437,
     438,   439,   440,     0,   816,   441,   442,     0,     0,   443,
     444,   445,   446,   447,     0,     0,     0,   448,   449,     0,
     820,   821,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   457,   458,   459,     0,   460,     0,   461,     0,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
       0,   472,     0,   473,   474,   475,     0,   476,     0,   477,
     478,   479,   480,   481,     0,   482,   483,   484,     0,     0,
     485,     0,     0,     0,   486,   487,     0,   488,   489,     0,
       0,   490,   491,   492,   493,   494,     0,   495,   496,     0,
     497,   498,   499,     0,     0,   500,   501,   502,   503,   504,
     505,   506,   507,     0,   508,     0,   509,   510,     0,   511,
     512,   513,     0,   514,     0,     0,   515,   516,   517,   518,
       0,   519,     0,   520,   521,   522,   523,   524,     0,   525,
     526,     0,     0,     0,   527,   528,   529,   530,     0,     0,
       0,   531,     0,     0,     0,   532,     0,   533,   534,   535,
     536,     0,   537,   538,   539,   540,   541,     0,     0,     0,
       0,     0,   542,   543,   544,     0,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,   550,   551,   552,
     553,   554,     0,     0,   555,   556,     0,     0,   557,   558,
     559,   560,   561,   562,     0,     0,   563,   564,   565,   566,
       0,   567,   568,     0,     0,   569,   570,   571,   572,     0,
     840,   573,   574,     0,  2918,   576,   577,  2919,     0,     0,
       0,     0,     0,   579,   580,     0,     0,   846,   581,   582,
     583,     0,   848,   584,   585,   849,   586,   587,     0,   588,
     589,     0,     0,   590,     0,     0,   591,     0,   592,     0,
     593,   594,     0,     0,     0,     0,     0,   595,     0,   596,
       0,     0,   597,     0,     0,     0,   598,     0,   599,   600,
     601,   602,     0,     0,     0,     0,     0,     0,   603,   604,
     605,     0,   606,   607,   608,   609,     0,     0,   610,     0,
       0,   611,   612,   613,   614,   615,     0,   616,     0,     0,
       0,     0,     0,     0,     0,     0,   617,   618,   619,     0,
     620,   621,   622,     0,   623,     0,     0,   624,     0,   625,
       0,     0,     0,     0,     0,     0,   626,   627,     0,     0,
     628,     0,   629,     0,   630,   631,     0,     0,     0,   632,
     633,   634,   635,   636,   637,   638,   639,     0,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,     0,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,     0,   674,   675,   676,   677,   678,   679,
     680,     0,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,     0,   715,   716,   717,
     718,   719,   720,   721,     0,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,   881,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,     0,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
     805,     0,     0,     0,     0,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,     0,   413,   414,   415,     0,   416,
     417,   418,   419,     0,   420,   421,     0,     0,     0,     0,
     422,   423,   424,   425,   426,   427,     0,     0,   428,   429,
       0,   430,     0,   431,     0,   432,   433,   434,   435,   436,
     437,   438,   439,   440,     0,     0,   441,   442,     0,     0,
     443,   444,   445,   446,   447,     0,     0,     0,   448,   449,
       0,     0,   821,   450,     0,   451,   452,     0,   453,   454,
     455,     0,     0,   456,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   457,   458,   459,   822,   460,     0,   461,
       0,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,     0,   472,     0,   473,   474,   475,     0,   476,     0,
     477,   478,   479,   480,   481,     0,   482,   483,   484,     0,
       0,   485,     0,     0,     0,   486,   487,     0,   488,   489,
       0,     0,   490,   491,   492,   493,   494,     0,   495,   496,
       0,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,   507,     0,   508,     0,   509,   510,     0,
     511,   512,   513,     0,   514,     0,     0,   515,   516,   517,
     518,     0,   519,     0,   520,   521,   522,   523,   524,     0,
     525,   526,     0,     0,     0,   527,   528,   529,   530,     0,
       0,     0,   531,     0,     0,     0,   532,     0,   533,   534,
     535,   536,     0,   537,   538,   539,   540,   541,     0,     0,
       0,     0,     0,   542,   543,   544,     0,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,   551,
     552,   553,   554,     0,     0,   555,   556,     0,     0,   557,
     558,   559,   560,   561,   562,     0,     0,   563,   564,   565,
     566,     0,   567,   568,     0,     0,   569,   570,   571,   572,
       0,     0,   573,   574,     0,   575,   576,   577,   578,     0,
       0,     0,     0,     0,   579,   580,     0,     0,     0,   581,
     582,   583,     0,   848,   584,   585,     0,   586,   587,     0,
     588,   589,     0,     0,   590,     0,     0,   591,     0,   592,
       0,   593,   594,     0,     0,     0,     0,     0,   595,     0,
     596,     0,     0,   597,     0,     0,     0,   598,     0,   599,
     600,   601,   602,     0,     0,     0,     0,     0,     0,   603,
     604,   605,     0,   606,   607,   608,   609,     0,     0,   610,
       0,     0,   611,   612,   613,   614,   615,     0,   616,     0,
       0,     0,     0,     0,     0,     0,     0,   617,   618,   619,
       0,   620,   621,   622,     0,   623,     0,     0,   624,     0,
     625,     0,     0,     0,     0,     0,     0,   626,   627,     0,
       0,   628,     0,   629,     0,   630,   631,     0,     0,     0,
     632,   633,   634,   635,   636,   637,   638,   639,     0,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,     0,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,     0,   674,   675,   676,   677,   678,
     679,   680,     0,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,     0,   715,   716,
     717,   718,   719,   720,   721,     0,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,  2080,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,  1711,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,  1156,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,  1712,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,     0,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,  1713,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,  1033,  1034,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,  1035,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,  1036,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,  1037,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
       0,   416,   417,   418,   419,     0,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   426,   427,     0,     0,
     428,   429,     0,   430,     0,   431,     0,   432,   433,   434,
     435,   436,   437,  1038,   439,   440,     0,     0,   441,   442,
       0,     0,   443,   444,   445,   446,   447,     0,     0,     0,
     448,   449,     0,     0,     0,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,     0,   460,
       0,   461,     0,   462,   463,  1039,   465,   466,   467,   468,
     469,   470,   471,     0,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   514,     0,     0,   515,
     516,   517,   518,     0,   519,     0,   520,   521,   522,   523,
     524,     0,   525,   526,     0,     0,     0,   527,   528,  1040,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,     0,     0,   555,   556,     0,
       0,   557,   558,   559,   560,   561,   562,     0,     0,   563,
     564,   565,   566,     0,   567,   568,     0,     0,   569,   570,
     571,   572,     0,     0,   573,   574,     0,   575,   576,   577,
     578,     0,     0,     0,     0,     0,  1041,   580,     0,     0,
       0,   581,   582,   583,     0,     0,   584,   585,     0,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   593,   594,     0,     0,     0,     0,     0,
     595,     0,   596,     0,     0,   597,     0,     0,     0,   598,
       0,   599,   600,   601,   602,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   610,     0,     0,  1042,  1043,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,     0,     0,     0,   617,
     618,   619,     0,  1044,   621,   622,     0,   623,     0,     0,
     624,     0,   625,     0,     0,     0,     0,     0,     0,   626,
     627,     0,     0,   628,     0,   629,     0,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,  1045,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   674,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,     0,
     715,   716,   717,   718,   719,   720,   721,     0,   244,   245,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,     0,   252,     0,  1046,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,     0,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,  1156,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,     0,     0,     0,   395,     0,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,     0,   413,   414,
     415,     0,   416,   417,   418,   419,     0,   420,   421,     0,
       0,     0,     0,   422,   423,   424,   425,   426,   427,     0,
       0,   428,   429,     0,   430,     0,   431,     0,   432,   433,
     434,   435,   436,   437,   438,   439,   440,     0,     0,   441,
     442,     0,     0,   443,   444,   445,   446,   447,     0,     0,
       0,   448,   449,     0,     0,     0,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   457,   458,   459,     0,
     460,     0,   461,     0,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,     0,   472,     0,   473,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,   484,     0,     0,   485,     0,     0,     0,   486,   487,
       0,   488,   489,     0,     0,   490,   491,   492,   493,   494,
       0,   495,   496,     0,   497,   498,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,   507,     0,   508,     0,
     509,   510,     0,   511,   512,   513,     0,   514,     0,     0,
     515,   516,   517,   518,     0,   519,     0,   520,   521,   522,
     523,   524,     0,   525,   526,     0,     0,     0,   527,   528,
     529,   530,     0,     0,     0,   531,     0,     0,     0,   532,
       0,   533,   534,   535,   536,     0,   537,   538,   539,   540,
     541,     0,     0,     0,     0,     0,   542,   543,   544,     0,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,   550,   551,   552,   553,   554,     0,     0,   555,   556,
       0,     0,   557,   558,   559,   560,   561,   562,     0,     0,
     563,   564,   565,   566,     0,   567,   568,     0,     0,   569,
     570,   571,   572,     0,   241,   573,   574,     0,   575,   576,
     577,   578,     0,     0,     0,     0,     0,   579,   580,     0,
       0,     0,   581,   582,   583,     0,     0,   584,   585,     0,
     586,   587,     0,   588,   589,     0,     0,   590,     0,     0,
     591,     0,   592,     0,   593,   594,     0,     0,     0,     0,
       0,   595,     0,   596,     0,     0,   597,     0,     0,     0,
     598,     0,   599,   600,   601,   602,     0,     0,     0,     0,
       0,     0,   603,   604,   605,     0,   606,   607,   608,   609,
       0,     0,   610,     0,     0,   611,   612,   613,   614,   615,
       0,   616,     0,     0,     0,     0,     0,     0,     0,     0,
     617,   618,   619,     0,   620,   621,   622,     0,   623,     0,
       0,   624,     0,   625,     0,     0,     0,     0,     0,     0,
     626,   627,     0,     0,   628,     0,   629,     0,   630,   631,
       0,     0,     0,   632,   633,   634,   635,   636,   637,   638,
     639,     0,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,     0,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,     0,   674,   675,
     676,   677,   678,   679,   680,     0,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
       0,   715,   716,   717,   718,   719,   720,   721,     0,   244,
     245,     0,   246,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,  1379,   253,     0,   254,
     255,   256,   257,   258,   259,     0,   260,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,   272,   273,   274,     0,   275,     0,   276,
     277,   278,   279,   280,   281,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,   310,     0,     0,     0,     0,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,   345,   346,
     347,   348,     0,     0,   349,   350,     0,     0,     0,   351,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,     0,   360,     0,     0,     0,   361,
     362,     0,   363,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,     0,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,   376,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,     0,   387,   388,  1156,     0,
       0,     0,     0,   389,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,     0,     0,     0,     0,     0,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,     0,   413,
     414,   415,     0,   416,   417,   418,   419,     0,   420,   421,
       0,     0,     0,     0,   422,   423,   424,   425,   426,   427,
       0,     0,   428,   429,     0,   430,     0,   431,     0,   432,
     433,   434,   435,   436,   437,   438,   439,   440,     0,     0,
     441,   442,     0,     0,   443,   444,   445,   446,   447,     0,
       0,     0,   448,   449,     0,     0,     0,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   457,   458,   459,
       0,   460,     0,   461,     0,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,     0,   472,     0,   473,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     482,   483,   484,     0,     0,   485,     0,     0,     0,   486,
     487,     0,   488,   489,     0,     0,   490,   491,   492,   493,
     494,     0,   495,   496,     0,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,   507,     0,   508,
       0,   509,   510,     0,   511,   512,   513,     0,   514,     0,
       0,   515,   516,   517,   518,     0,   519,     0,   520,   521,
     522,   523,   524,     0,   525,   526,     0,     0,     0,   527,
     528,   529,   530,     0,     0,     0,   531,     0,     0,     0,
     532,     0,   533,   534,   535,   536,     0,   537,   538,   539,
     540,   541,     0,     0,     0,     0,     0,   542,   543,   544,
       0,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,   551,   552,   553,   554,     0,     0,   555,
     556,     0,     0,   557,   558,   559,   560,   561,   562,     0,
       0,   563,   564,   565,   566,     0,   567,   568,     0,     0,
     569,   570,   571,   572,     0,   241,   573,   574,     0,   575,
     576,   577,   578,     0,     0,     0,     0,     0,   579,   580,
       0,     0,     0,   581,   582,   583,     0,     0,   584,   585,
       0,   586,   587,     0,   588,   589,     0,     0,   590,     0,
       0,   591,     0,   592,     0,   593,   594,     0,     0,     0,
       0,     0,   595,     0,   596,     0,     0,   597,     0,     0,
       0,   598,     0,   599,   600,   601,   602,     0,     0,     0,
       0,     0,     0,   603,   604,   605,     0,   606,   607,   608,
     609,     0,     0,   610,     0,     0,   611,   612,   613,   614,
     615,     0,   616,     0,     0,     0,     0,     0,     0,     0,
       0,   617,   618,   619,     0,   620,   621,   622,     0,   623,
       0,     0,   624,     0,   625,     0,     0,     0,     0,     0,
       0,   626,   627,     0,     0,   628,     0,   629,     0,   630,
     631,     0,     0,     0,   632,   633,   634,   635,   636,   637,
     638,   639,     0,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,     0,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,     0,   674,
     675,   676,   677,   678,   679,   680,     0,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,     0,   715,   716,   717,   718,   719,   720,   721,     0,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,  1560,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,  1033,  1034,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
    1568,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,  1036,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,  1037,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,  1038,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,   447,
       0,     0,     0,   448,   449,     0,     0,     0,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,   472,     0,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   514,
       0,     0,   515,   516,   517,   518,     0,   519,     0,   520,
     521,   522,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,  1040,   530,     0,     0,     0,   531,     0,     0,
       0,   532,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,     0,     0,
     555,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,     0,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,     0,     0,     0,   581,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   610,     0,     0,  1042,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,  1044,   621,   622,     0,
     623,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,     0,   715,   716,   717,   718,   719,   720,   721,
       0,   244,   245,     0,   246,   247,   248,   249,   250,     0,
       0,   251,     0,     0,     0,     0,   252,     0,  1046,   253,
       0,   254,   255,   256,   257,   258,   259,     0,   260,     0,
       0,     0,   261,     0,     0,     0,   262,     0,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,   272,   273,   274,     0,   275,
       0,   276,   277,   278,   279,   280,   281,     0,   282,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,     0,     0,   302,     0,     0,     0,     0,   303,
       0,     0,   304,     0,     0,     0,   305,   306,   307,     0,
       0,   308,     0,     0,     0,     0,   309,   310,     0,     0,
       0,     0,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,   336,     0,     0,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   344,
     345,   346,   347,   348,     0,     0,   349,   350,     0,     0,
       0,   351,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   356,   357,   358,     0,   359,     0,   360,     0,     0,
       0,   361,   362,     0,   363,     0,     0,   364,   365,     0,
       0,     0,   366,   367,   368,   369,     0,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,     0,   374,   375,
     376,     0,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,     0,   387,   388,
    1156,     0,     0,     0,     0,   389,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,     0,     0,     0,     0,
       0,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
       0,   413,   414,   415,     0,   416,   417,   418,   419,     0,
     420,   421,     0,     0,     0,     0,   422,   423,   424,   425,
     426,   427,     0,     0,   428,   429,     0,   430,     0,   431,
       0,   432,   433,   434,   435,   436,   437,   438,   439,   440,
       0,     0,   441,   442,     0,     0,   443,   444,   445,   446,
     447,     0,     0,     0,   448,   449,     0,     0,     0,   450,
       0,   451,   452,     0,   453,   454,   455,     0,     0,   456,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   457,
     458,   459,     0,   460,     0,   461,     0,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,     0,   472,     0,
     473,   474,   475,     0,   476,     0,   477,   478,   479,   480,
     481,     0,   482,   483,   484,     0,     0,   485,     0,     0,
       0,   486,   487,     0,   488,   489,     0,     0,   490,   491,
     492,   493,   494,     0,   495,   496,     0,   497,   498,   499,
       0,     0,   500,   501,   502,   503,   504,   505,   506,   507,
       0,   508,     0,   509,   510,     0,   511,   512,   513,     0,
     514,     0,     0,   515,   516,   517,   518,     0,   519,     0,
     520,   521,   522,   523,   524,     0,   525,   526,     0,     0,
       0,   527,   528,   529,   530,     0,     0,     0,   531,     0,
       0,     0,   532,     0,   533,   534,   535,   536,     0,   537,
     538,   539,   540,   541,     0,     0,     0,     0,     0,   542,
     543,   544,     0,   545,     0,     0,   546,     0,     0,   547,
       0,   548,     0,   549,   550,   551,   552,   553,   554,     0,
       0,   555,   556,     0,     0,   557,   558,   559,   560,   561,
     562,     0,     0,   563,   564,   565,   566,     0,   567,   568,
       0,     0,   569,   570,   571,   572,     0,   241,   573,   574,
       0,   575,   576,   577,   578,     0,     0,     0,     0,     0,
     579,   580,     0,     0,     0,   581,   582,   583,     0,     0,
     584,   585,     0,   586,   587,     0,   588,   589,     0,     0,
     590,     0,     0,   591,     0,   592,     0,   593,   594,     0,
       0,     0,     0,     0,   595,     0,   596,     0,     0,   597,
       0,     0,     0,   598,     0,   599,   600,   601,   602,     0,
       0,     0,     0,     0,     0,   603,   604,   605,     0,   606,
     607,   608,   609,     0,     0,   610,     0,     0,   611,   612,
     613,   614,   615,     0,   616,     0,     0,     0,     0,     0,
       0,     0,     0,   617,   618,   619,     0,   620,   621,   622,
       0,   623,     0,     0,   624,     0,   625,     0,     0,     0,
       0,     0,     0,   626,   627,     0,     0,   628,     0,   629,
       0,   630,   631,     0,     0,     0,   632,   633,   634,   635,
     636,   637,   638,   639,     0,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,     0,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
       0,   674,   675,   676,   677,   678,   679,   680,     0,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,     0,   715,   716,   717,   718,   719,   720,
     721,     0,   244,   245,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,  1713,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,  2199,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,     0,   413,   414,   415,     0,   416,   417,   418,   419,
       0,   420,   421,     0,     0,     0,     0,   422,   423,   424,
     425,   426,   427,     0,     0,   428,   429,     0,   430,     0,
     431,     0,   432,   433,   434,   435,   436,   437,   438,   439,
     440,     0,     0,   441,   442,     0,     0,   443,   444,   445,
     446,   447,     0,     0,     0,   448,   449,     0,     0,     0,
     450,     0,   451,   452,     0,   453,   454,   455,     0,     0,
     456,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     457,   458,   459,     0,   460,     0,   461,     0,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,     0,   472,
       0,   473,   474,   475,     0,   476,     0,   477,   478,   479,
     480,   481,     0,   482,   483,   484,     0,     0,   485,     0,
       0,     0,   486,   487,     0,   488,   489,     0,     0,   490,
     491,   492,   493,   494,     0,   495,   496,     0,   497,   498,
     499,     0,     0,   500,   501,   502,   503,   504,   505,   506,
     507,     0,   508,     0,   509,   510,     0,   511,   512,   513,
       0,   514,     0,     0,   515,   516,   517,   518,     0,   519,
       0,   520,   521,   522,   523,   524,     0,   525,   526,     0,
       0,     0,   527,   528,   529,   530,     0,     0,     0,   531,
       0,     0,     0,   532,     0,   533,   534,   535,   536,     0,
     537,   538,   539,   540,   541,     0,     0,     0,     0,     0,
     542,   543,   544,     0,   545,     0,     0,   546,     0,     0,
     547,     0,   548,     0,   549,   550,   551,   552,   553,   554,
       0,     0,   555,   556,     0,     0,   557,   558,   559,   560,
     561,   562,     0,     0,   563,   564,   565,   566,     0,   567,
     568,     0,     0,   569,   570,   571,   572,     0,     0,   573,
     574,     0,   575,   576,   577,   578,     0,     0,     0,     0,
       0,   579,   580,     0,     0,     0,   581,   582,   583,     0,
       0,   584,   585,     0,   586,   587,     0,   588,   589,     0,
       0,   590,     0,     0,   591,     0,   592,     0,   593,   594,
       0,     0,     0,     0,     0,   595,     0,   596,     0,     0,
     597,     0,     0,     0,   598,     0,   599,   600,   601,   602,
       0,     0,     0,     0,     0,     0,   603,   604,   605,     0,
     606,   607,   608,   609,     0,     0,   610,     0,     0,   611,
     612,   613,   614,   615,     0,   616,     0,     0,     0,     0,
       0,     0,     0,     0,   617,   618,   619,     0,   620,   621,
     622,     0,   623,     0,     0,   624,     0,   625,     0,     0,
       0,     0,     0,     0,   626,   627,     0,     0,   628,     0,
     629,     0,   630,   631,     0,     0,     0,   632,   633,   634,
     635,   636,   637,   638,   639,     0,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,     0,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,     0,   674,   675,   676,   677,   678,   679,   680,     0,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,     0,   715,   716,   717,   718,   719,
     720,   721,     0,   244,   245,     0,   246,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
    2200,   253,     0,   254,   255,   256,   257,   258,   259,     0,
     260,     0,     0,     0,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,   272,   273,   274,
       0,   275,     0,   276,   277,   278,   279,   280,   281,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,     0,     0,   302,     0,     0,     0,
       0,   303,     0,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,   310,
       0,     0,     0,     0,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,   344,   345,   346,   347,   348,     0,     0,   349,   350,
       0,     0,     0,   351,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   356,   357,   358,     0,   359,     0,   360,
       0,     0,     0,   361,   362,     0,   363,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,     0,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,     0,
     374,   375,   376,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,     0,
     387,   388,     0,     0,     0,     0,     0,   389,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,     0,     0,
       0,     0,     0,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,     0,   413,   414,   415,     0,   416,   417,   418,
     419,     0,   420,   421,     0,     0,     0,     0,   422,   423,
     424,   425,   426,   427,     0,     0,   428,   429,     0,   430,
       0,   431,     0,   432,   433,   434,   435,   436,   437,   438,
     439,   440,     0,     0,   441,   442,     0,     0,   443,   444,
     445,   446,   447,     0,     0,     0,   448,   449,     0,     0,
       0,   450,     0,   451,   452,     0,   453,   454,   455,     0,
       0,   456,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   457,   458,   459,     0,   460,     0,   461,     0,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,     0,
     472,     0,   473,   474,   475,     0,   476,     0,   477,   478,
     479,   480,   481,     0,   482,   483,   484,     0,     0,   485,
       0,     0,     0,   486,   487,     0,   488,   489,     0,     0,
     490,   491,   492,   493,   494,     0,   495,   496,     0,   497,
     498,   499,     0,     0,   500,   501,   502,   503,   504,   505,
     506,   507,     0,   508,     0,   509,   510,     0,   511,   512,
     513,     0,   514,     0,     0,   515,   516,   517,   518,     0,
     519,     0,   520,   521,   522,   523,   524,     0,   525,   526,
       0,     0,     0,   527,   528,   529,   530,     0,     0,     0,
     531,     0,     0,     0,   532,     0,   533,   534,   535,   536,
       0,   537,   538,   539,   540,   541,     0,     0,     0,     0,
       0,   542,   543,   544,     0,   545,     0,     0,   546,     0,
       0,   547,     0,   548,     0,   549,   550,   551,   552,   553,
     554,     0,     0,   555,   556,     0,     0,   557,   558,   559,
     560,   561,   562,     0,     0,   563,   564,   565,   566,     0,
     567,   568,     0,     0,   569,   570,   571,   572,     0,     0,
     573,   574,     0,   575,   576,   577,   578,     0,     0,     0,
       0,     0,   579,   580,     0,     0,     0,   581,   582,   583,
       0,     0,   584,   585,     0,   586,   587,     0,   588,   589,
       0,     0,   590,     0,     0,   591,     0,   592,     0,   593,
     594,     0,     0,     0,     0,     0,   595,     0,   596,     0,
       0,   597,     0,     0,     0,   598,     0,   599,   600,   601,
     602,     0,     0,     0,     0,     0,     0,   603,   604,   605,
       0,   606,   607,   608,   609,     0,     0,   610,     0,     0,
     611,   612,   613,   614,   615,     0,   616,     0,     0,     0,
       0,     0,     0,     0,     0,   617,   618,   619,     0,   620,
     621,   622,     0,   623,     0,     0,   624,     0,   625,     0,
       0,     0,     0,     0,     0,   626,   627,     0,     0,   628,
       0,   629,     0,   630,   631,     0,     0,     0,   632,   633,
     634,   635,   636,   637,   638,   639,     0,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,     0,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,     0,   674,   675,   676,   677,   678,   679,   680,
       0,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,     0,   715,   716,   717,   718,
     719,   720,   721,     0,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,  5523,   252,
       0,  5524,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,   345,   346,   347,   348,     0,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,   361,   362,     0,   363,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,     0,     0,     0,   395,     0,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,     0,   413,   414,   415,     0,   416,   417,
     418,   419,     0,   420,   421,     0,     0,     0,     0,   422,
     423,   424,   425,   426,   427,     0,     0,   428,   429,     0,
     430,     0,   431,     0,   432,   433,   434,   435,   436,   437,
     438,   439,   440,     0,     0,   441,   442,     0,     0,   443,
     444,   445,   446,   447,     0,     0,     0,   448,   449,     0,
       0,     0,   450,     0,   451,   452,     0,   453,   454,   455,
       0,     0,   456,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   457,   458,   459,     0,   460,     0,   461,     0,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
       0,   472,     0,   473,   474,   475,     0,   476,     0,   477,
     478,   479,   480,   481,     0,   482,   483,   484,     0,     0,
     485,     0,     0,     0,   486,   487,     0,   488,   489,     0,
       0,   490,   491,   492,   493,   494,     0,   495,   496,     0,
     497,   498,   499,     0,     0,   500,   501,   502,   503,   504,
     505,   506,   507,     0,   508,     0,   509,   510,     0,   511,
     512,   513,     0,   514,     0,     0,   515,   516,   517,   518,
       0,   519,     0,   520,   521,   522,   523,   524,     0,   525,
     526,     0,     0,     0,   527,   528,   529,   530,     0,     0,
       0,   531,     0,     0,     0,   532,     0,   533,   534,   535,
     536,     0,   537,   538,   539,   540,   541,     0,     0,     0,
       0,     0,   542,   543,   544,     0,   545,     0,     0,   546,
       0,     0,   547,     0,   548,     0,   549,   550,   551,   552,
     553,   554,     0,     0,   555,   556,     0,     0,   557,   558,
     559,   560,   561,   562,     0,     0,   563,   564,   565,   566,
       0,   567,   568,     0,     0,   569,   570,   571,   572,     0,
       0,   573,   574,     0,   575,   576,   577,   578,     0,     0,
       0,     0,     0,   579,   580,     0,     0,     0,   581,   582,
     583,     0,     0,   584,   585,     0,   586,   587,     0,   588,
     589,     0,     0,   590,     0,     0,   591,     0,   592,     0,
     593,   594,     0,     0,     0,     0,     0,   595,     0,   596,
       0,     0,   597,     0,     0,     0,   598,     0,   599,   600,
     601,   602,     0,     0,     0,     0,     0,     0,   603,   604,
     605,     0,   606,   607,   608,   609,     0,     0,   610,     0,
       0,   611,   612,   613,   614,   615,     0,   616,     0,     0,
       0,     0,     0,     0,     0,     0,   617,   618,   619,     0,
     620,   621,   622,     0,   623,     0,     0,   624,     0,   625,
       0,     0,     0,     0,     0,     0,   626,   627,     0,     0,
     628,     0,   629,     0,   630,   631,     0,     0,     0,   632,
     633,   634,   635,   636,   637,   638,   639,     0,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,     0,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,     0,   674,   675,   676,   677,   678,   679,
     680,     0,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,     0,   715,   716,   717,
     718,   719,   720,   721,     0,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,  2200,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,     0,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,     0,   413,   414,   415,     0,   416,
     417,   418,   419,     0,   420,   421,     0,     0,     0,     0,
     422,   423,   424,   425,   426,   427,     0,     0,   428,   429,
       0,   430,     0,   431,     0,   432,   433,   434,   435,   436,
     437,   438,   439,   440,     0,     0,   441,   442,     0,     0,
     443,   444,   445,   446,   447,     0,     0,     0,   448,   449,
       0,     0,     0,   450,     0,   451,   452,     0,   453,   454,
     455,     0,     0,   456,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   457,   458,   459,     0,   460,     0,   461,
       0,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,     0,   472,     0,   473,   474,   475,     0,   476,     0,
     477,   478,   479,   480,   481,     0,   482,   483,   484,     0,
       0,   485,     0,     0,     0,   486,   487,     0,   488,   489,
       0,     0,   490,   491,   492,   493,   494,     0,   495,   496,
       0,   497,   498,   499,     0,     0,   500,   501,   502,   503,
     504,   505,   506,   507,     0,   508,     0,   509,   510,     0,
     511,   512,   513,     0,   514,     0,     0,   515,   516,   517,
     518,     0,   519,     0,   520,   521,   522,   523,   524,     0,
     525,   526,     0,     0,     0,   527,   528,   529,   530,     0,
       0,     0,   531,     0,     0,     0,   532,     0,   533,   534,
     535,   536,     0,   537,   538,   539,   540,   541,     0,     0,
       0,     0,     0,   542,   543,   544,     0,   545,     0,     0,
     546,     0,     0,   547,     0,   548,     0,   549,   550,   551,
     552,   553,   554,     0,     0,   555,   556,     0,     0,   557,
     558,   559,   560,   561,   562,     0,     0,   563,   564,   565,
     566,     0,   567,   568,     0,     0,   569,   570,   571,   572,
       0,     0,   573,   574,     0,   575,   576,   577,   578,     0,
       0,     0,     0,     0,   579,   580,     0,     0,     0,   581,
     582,   583,     0,     0,   584,   585,     0,   586,   587,     0,
     588,   589,     0,     0,   590,     0,     0,   591,     0,   592,
       0,   593,   594,     0,     0,     0,     0,     0,   595,     0,
     596,     0,     0,   597,     0,     0,     0,   598,     0,   599,
     600,   601,   602,     0,     0,     0,     0,     0,     0,   603,
     604,   605,     0,   606,   607,   608,   609,     0,     0,   610,
       0,     0,   611,   612,   613,   614,   615,     0,   616,     0,
       0,     0,     0,     0,     0,     0,     0,   617,   618,   619,
       0,   620,   621,   622,     0,   623,     0,     0,   624,     0,
     625,     0,     0,     0,     0,     0,     0,   626,   627,     0,
       0,   628,     0,   629,     0,   630,   631,     0,     0,     0,
     632,   633,   634,   635,   636,   637,   638,   639,     0,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,     0,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,     0,   674,   675,   676,   677,   678,
     679,   680,     0,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,     0,   715,   716,
     717,   718,   719,   720,   721,     0,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,  5524,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,    42,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,    49,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
      54,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,    55,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,     0,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
    1141,  4185,   252,     0,     0,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,     0,   413,   414,   415,
       0,   416,   417,   418,   419,     0,   420,   421,     0,     0,
       0,     0,   422,   423,   424,   425,   426,   427,     0,     0,
     428,   429,     0,   430,     0,   431,     0,   432,   433,   434,
     435,   436,   437,   438,   439,   440,     0,     0,   441,   442,
       0,     0,   443,   444,   445,   446,   447,     0,     0,     0,
     448,   449,     0,     0,     0,   450,     0,   451,   452,     0,
     453,   454,   455,     0,     0,   456,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   457,   458,   459,     0,   460,
       0,   461,     0,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,     0,   472,     0,   473,   474,   475,     0,
     476,     0,   477,   478,   479,   480,   481,     0,   482,   483,
     484,     0,     0,   485,     0,     0,     0,   486,   487,     0,
     488,   489,     0,     0,   490,   491,   492,   493,   494,     0,
     495,   496,     0,   497,   498,   499,     0,     0,   500,   501,
     502,   503,   504,   505,   506,   507,     0,   508,     0,   509,
     510,     0,   511,   512,   513,     0,   514,     0,     0,   515,
     516,   517,   518,     0,   519,     0,   520,   521,   522,   523,
     524,     0,   525,   526,     0,     0,     0,   527,   528,   529,
     530,     0,     0,     0,   531,     0,     0,     0,   532,     0,
     533,   534,   535,   536,     0,   537,   538,   539,   540,   541,
       0,     0,     0,     0,     0,   542,   543,   544,     0,   545,
       0,     0,   546,     0,     0,   547,     0,   548,     0,   549,
     550,   551,   552,   553,   554,     0,     0,   555,   556,     0,
       0,   557,   558,   559,   560,   561,   562,     0,     0,   563,
     564,   565,   566,     0,   567,   568,     0,     0,   569,   570,
     571,   572,     0,     0,   573,   574,     0,   575,   576,   577,
     578,     0,     0,     0,     0,     0,   579,   580,     0,     0,
       0,   581,   582,   583,     0,     0,   584,   585,     0,   586,
     587,     0,   588,   589,     0,     0,   590,     0,     0,   591,
       0,   592,     0,   593,   594,     0,     0,     0,     0,     0,
     595,     0,   596,     0,     0,   597,     0,     0,     0,   598,
       0,   599,   600,   601,   602,     0,     0,     0,     0,     0,
       0,   603,   604,   605,     0,   606,   607,   608,   609,     0,
       0,   610,     0,     0,   611,   612,   613,   614,   615,     0,
     616,     0,     0,     0,     0,     0,     0,     0,     0,   617,
     618,   619,     0,   620,   621,   622,     0,   623,     0,     0,
     624,     0,   625,     0,     0,     0,     0,     0,     0,   626,
     627,     0,     0,   628,     0,   629,     0,   630,   631,     0,
       0,     0,   632,   633,   634,   635,   636,   637,   638,   639,
       0,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,     0,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,     0,   674,   675,   676,
     677,   678,   679,   680,     0,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,     0,
     715,   716,   717,   718,   719,   720,   721,     0,   244,   245,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,  4427,   252,     0,     0,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,     0,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,     0,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,     0,     0,     0,   395,     0,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,     0,   413,   414,
     415,     0,   416,   417,   418,   419,     0,   420,   421,     0,
       0,     0,     0,   422,   423,   424,   425,   426,   427,     0,
       0,   428,   429,     0,   430,     0,   431,     0,   432,   433,
     434,   435,   436,   437,   438,   439,   440,     0,     0,   441,
     442,     0,     0,   443,   444,   445,   446,   447,     0,     0,
       0,   448,   449,     0,     0,     0,   450,     0,   451,   452,
       0,   453,   454,   455,     0,     0,   456,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   457,   458,   459,     0,
     460,     0,   461,     0,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,     0,   472,     0,   473,   474,   475,
       0,   476,     0,   477,   478,   479,   480,   481,     0,   482,
     483,   484,     0,     0,   485,     0,     0,     0,   486,   487,
       0,   488,   489,     0,     0,   490,   491,   492,   493,   494,
       0,   495,   496,     0,   497,   498,   499,     0,     0,   500,
     501,   502,   503,   504,   505,   506,   507,     0,   508,     0,
     509,   510,     0,   511,   512,   513,     0,   514,     0,     0,
     515,   516,   517,   518,     0,   519,     0,   520,   521,   522,
     523,   524,     0,   525,   526,     0,     0,     0,   527,   528,
     529,   530,     0,     0,     0,   531,     0,     0,     0,   532,
       0,   533,   534,   535,   536,     0,   537,   538,   539,   540,
     541,     0,     0,     0,     0,     0,   542,   543,   544,     0,
     545,     0,     0,   546,     0,     0,   547,     0,   548,     0,
     549,   550,   551,   552,   553,   554,     0,     0,   555,   556,
       0,     0,   557,   558,   559,   560,   561,   562,     0,     0,
     563,   564,   565,   566,     0,   567,   568,     0,     0,   569,
     570,   571,   572,     0,     0,   573,   574,     0,   575,   576,
     577,   578,     0,     0,     0,     0,     0,   579,   580,     0,
       0,     0,   581,   582,   583,     0,     0,   584,   585,     0,
     586,   587,     0,   588,   589,     0,     0,   590,     0,     0,
     591,     0,   592,     0,   593,   594,     0,     0,     0,     0,
       0,   595,     0,   596,     0,     0,   597,     0,     0,     0,
     598,     0,   599,   600,   601,   602,     0,     0,     0,     0,
       0,     0,   603,   604,   605,     0,   606,   607,   608,   609,
       0,     0,   610,     0,     0,   611,   612,   613,   614,   615,
       0,   616,     0,     0,     0,     0,     0,     0,     0,     0,
     617,   618,   619,     0,   620,   621,   622,     0,   623,     0,
       0,   624,     0,   625,     0,     0,     0,     0,     0,     0,
     626,   627,     0,     0,   628,     0,   629,     0,   630,   631,
       0,     0,     0,   632,   633,   634,   635,   636,   637,   638,
     639,     0,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,     0,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,     0,   674,   675,
     676,   677,   678,   679,   680,     0,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
       0,   715,   716,   717,   718,   719,   720,   721,     0,   244,
     245,     0,   246,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,  4431,   252,     0,     0,   253,     0,   254,
     255,   256,   257,   258,   259,     0,   260,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,   272,   273,   274,     0,   275,     0,   276,
     277,   278,   279,   280,   281,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,  2498,   297,   298,   299,   300,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,   310,     0,     0,     0,     0,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,   345,   346,
     347,   348,     0,     0,   349,   350,     0,     0,     0,   351,
     352,     0,   353,  2499,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,     0,   360,     0,     0,     0,   361,
     362,     0,   363,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,     0,     0,   370,   371,   372,  1882,
       0,   373,     0,     0,     0,     0,   374,   375,   376,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,  1883,     0,   384,
     385,     0,     0,   386,     0,     0,   387,   388,     0,  4022,
       0,     0,     0,   389,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,     0,     0,     0,     0,     0,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,     0,   413,
     414,   415,     0,   416,   417,   418,   419,     0,   420,   421,
       0,     0,     0,     0,   422,   423,   424,   425,   426,   427,
       0,     0,   428,   429,     0,   430,     0,   431,     0,   432,
     433,   434,   435,   436,   437,   438,   439,   440,     0,     0,
     441,   442,     0,     0,   443,   444,   445,   446,   447,     0,
       0,     0,   448,   449,     0,     0,     0,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   457,   458,   459,
       0,   460,     0,   461,     0,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,     0,   472,     0,   473,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     482,   483,   484,     0,     0,   485,     0,     0,     0,   486,
     487,     0,   488,   489,     0,     0,   490,   491,   492,   493,
     494,     0,   495,   496,     0,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,   507,     0,   508,
       0,   509,   510,     0,   511,   512,   513,     0,   514,     0,
       0,   515,   516,   517,   518,     0,   519,     0,   520,   521,
     522,   523,   524,     0,   525,   526,    42,     0,     0,   527,
     528,   529,   530,     0,     0,     0,   531,     0,     0,     0,
     532,     0,   533,   534,   535,   536,     0,   537,   538,   539,
     540,   541,  2501,     0,     0,     0,     0,   542,   543,   544,
       0,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,   551,   552,   553,   554,     0,     0,   555,
     556,     0,     0,   557,   558,   559,   560,   561,   562,     0,
       0,   563,   564,   565,   566,     0,   567,   568,     0,    49,
     569,   570,   571,   572,     0,     0,   573,   574,     0,   575,
     576,   577,   578,     0,     0,     0,     0,     0,   579,   580,
       0,     0,     0,   581,   582,   583,     0,     0,   584,   585,
       0,   586,   587,     0,   588,   589,     0,     0,   590,     0,
       0,   591,     0,   592,     0,   593,   594,     0,     0,     0,
       0,     0,   595,    54,   596,     0,     0,   597,     0,     0,
       0,   598,     0,   599,   600,   601,   602,     0,     0,     0,
      55,     0,     0,   603,   604,   605,     0,   606,   607,   608,
     609,     0,     0,   610,     0,     0,   611,   612,   613,   614,
     615,     0,   616,     0,     0,     0,     0,     0,     0,     0,
       0,   617,   618,   619,     0,   620,   621,   622,     0,   623,
       0,     0,   624,     0,   625,     0,     0,     0,     0,     0,
       0,   626,   627,     0,     0,   628,     0,   629,     0,   630,
     631,     0,     0,     0,   632,   633,   634,   635,   636,   637,
     638,   639,     0,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,     0,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,     0,   674,
     675,   676,   677,   678,   679,   680,     0,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,     0,   715,   716,   717,   718,   719,   720,   721,   244,
     245,     0,   246,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,  1141,   252,     0,     0,   253,     0,   254,
     255,   256,   257,   258,   259,     0,   260,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,   272,   273,   274,     0,   275,     0,   276,
     277,   278,   279,   280,   281,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,   310,     0,     0,     0,     0,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,   345,   346,
     347,   348,     0,     0,   349,   350,     0,     0,     0,   351,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,     0,   360,     0,     0,     0,   361,
     362,     0,   363,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,     0,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,   376,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,     0,   387,   388,     0,     0,
       0,     0,     0,   389,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,     0,     0,     0,     0,     0,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,     0,   413,
     414,   415,     0,   416,   417,   418,   419,     0,   420,   421,
       0,     0,     0,     0,   422,   423,   424,   425,   426,   427,
       0,     0,   428,   429,     0,   430,     0,   431,     0,   432,
     433,   434,   435,   436,   437,   438,   439,   440,     0,     0,
     441,   442,     0,     0,   443,   444,   445,   446,   447,     0,
       0,     0,   448,   449,     0,     0,     0,   450,     0,   451,
     452,     0,   453,   454,   455,     0,     0,   456,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   457,   458,   459,
       0,   460,     0,   461,     0,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,     0,   472,     0,   473,   474,
     475,     0,   476,     0,   477,   478,   479,   480,   481,     0,
     482,   483,   484,     0,     0,   485,     0,     0,     0,   486,
     487,     0,   488,   489,     0,     0,   490,   491,   492,   493,
     494,     0,   495,   496,     0,   497,   498,   499,     0,     0,
     500,   501,   502,   503,   504,   505,   506,   507,     0,   508,
       0,   509,   510,     0,   511,   512,   513,     0,   514,     0,
       0,   515,   516,   517,   518,     0,   519,     0,   520,   521,
     522,   523,   524,     0,   525,   526,     0,     0,     0,   527,
     528,   529,   530,     0,     0,     0,   531,     0,     0,     0,
     532,     0,   533,   534,   535,   536,     0,   537,   538,   539,
     540,   541,     0,     0,     0,     0,     0,   542,   543,   544,
       0,   545,     0,     0,   546,     0,     0,   547,     0,   548,
       0,   549,   550,   551,   552,   553,   554,     0,     0,   555,
     556,     0,     0,   557,   558,   559,   560,   561,   562,     0,
       0,   563,   564,   565,   566,     0,   567,   568,     0,     0,
     569,   570,   571,   572,     0,     0,   573,   574,     0,   575,
     576,   577,   578,     0,     0,     0,     0,     0,   579,   580,
       0,     0,     0,   581,   582,   583,     0,     0,   584,   585,
       0,   586,   587,     0,   588,   589,     0,     0,   590,     0,
       0,   591,     0,   592,     0,   593,   594,     0,     0,     0,
       0,     0,   595,     0,   596,     0,     0,   597,     0,     0,
       0,   598,     0,   599,   600,   601,   602,     0,     0,     0,
       0,     0,     0,   603,   604,   605,     0,   606,   607,   608,
     609,     0,     0,   610,     0,     0,   611,   612,   613,   614,
     615,     0,   616,     0,     0,     0,     0,     0,     0,     0,
       0,   617,   618,   619,     0,   620,   621,   622,     0,   623,
       0,     0,   624,     0,   625,     0,     0,     0,     0,     0,
       0,   626,   627,     0,     0,   628,     0,   629,     0,   630,
     631,     0,     0,  3001,   632,   633,   634,   635,   636,   637,
     638,   639,     0,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,  3002,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,     0,   674,
     675,   676,   677,   678,   679,   680,     0,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,     0,   715,   716,   717,   718,   719,   720,   721,  3003,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,  3004,     0,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,   447,
       0,     0,     0,   448,   449,     0,     0,     0,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,   472,     0,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   514,
       0,     0,   515,   516,   517,   518,     0,   519,     0,   520,
     521,   522,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,   532,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,     0,     0,
     555,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,     0,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,     0,     0,     0,   581,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
     623,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,     0,   715,   716,   717,   718,   719,   720,   721,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,  1302,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,   447,
       0,     0,     0,   448,   449,     0,     0,     0,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,   472,     0,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   514,
       0,     0,   515,   516,   517,   518,     0,   519,     0,   520,
     521,   522,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,   532,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,     0,     0,
     555,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,     0,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,     0,     0,     0,   581,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
     623,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,     0,   715,   716,   717,   718,   719,   720,   721,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,  3210,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,   447,
       0,     0,     0,   448,   449,     0,     0,     0,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,   472,     0,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   514,
       0,     0,   515,   516,   517,   518,     0,   519,     0,   520,
     521,   522,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,   532,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,     0,     0,
     555,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,     0,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,     0,     0,     0,   581,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
     623,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,     0,   715,   716,   717,   718,   719,   720,   721,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,  3552,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,   447,
       0,     0,     0,   448,   449,     0,     0,     0,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,   472,     0,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   514,
       0,     0,   515,   516,   517,   518,     0,   519,     0,   520,
     521,   522,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,   532,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,     0,     0,
     555,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,     0,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,     0,     0,     0,   581,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
     623,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,     0,   715,   716,   717,   718,   719,   720,   721,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,  4313,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,   447,
       0,     0,     0,   448,   449,     0,     0,     0,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,   472,     0,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   514,
       0,     0,   515,   516,   517,   518,     0,   519,     0,   520,
     521,   522,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,   532,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,     0,     0,
     555,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,     0,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,     0,     0,     0,   581,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
     623,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,     0,   715,   716,   717,   718,   719,   720,   721,
     244,   245,     0,   246,   247,   248,   249,   250,  2150,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,   447,
       0,     0,     0,   448,   449,     0,     0,     0,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,   472,     0,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   514,
       0,     0,   515,   516,   517,   518,     0,   519,     0,   520,
     521,   522,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,   532,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,     0,     0,
     555,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,     0,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,     0,     0,     0,   581,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
     623,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,     0,   715,   716,   717,   718,   719,   720,   721,
     244,   245,     0,   246,   247,   248,   249,   250,  2932,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,   447,
       0,     0,     0,   448,   449,     0,     0,     0,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,   472,     0,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   514,
       0,     0,   515,   516,   517,   518,     0,   519,     0,   520,
     521,   522,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,   532,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,     0,     0,
     555,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,     0,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,     0,     0,     0,   581,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
     623,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,     0,   715,   716,   717,   718,   719,   720,   721,
     244,   245,     0,   246,   247,   248,   249,   250,  3584,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,   447,
       0,     0,     0,   448,   449,     0,     0,     0,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,   472,     0,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   514,
       0,     0,   515,   516,   517,   518,     0,   519,     0,   520,
     521,   522,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,   532,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,     0,     0,
     555,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,     0,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,     0,     0,     0,   581,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
     623,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,     0,   715,   716,   717,   718,   719,   720,   721,
     244,   245,     0,   246,   247,   248,   249,   250,  3766,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,     0,   416,   417,   418,   419,     0,   420,
     421,     0,     0,     0,     0,   422,   423,   424,   425,   426,
     427,     0,     0,   428,   429,     0,   430,     0,   431,     0,
     432,   433,   434,   435,   436,   437,   438,   439,   440,     0,
       0,   441,   442,     0,     0,   443,   444,   445,   446,   447,
       0,     0,     0,   448,   449,     0,     0,     0,   450,     0,
     451,   452,     0,   453,   454,   455,     0,     0,   456,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   457,   458,
     459,     0,   460,     0,   461,     0,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,     0,   472,     0,   473,
     474,   475,     0,   476,     0,   477,   478,   479,   480,   481,
       0,   482,   483,   484,     0,     0,   485,     0,     0,     0,
     486,   487,     0,   488,   489,     0,     0,   490,   491,   492,
     493,   494,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   500,   501,   502,   503,   504,   505,   506,   507,     0,
     508,     0,   509,   510,     0,   511,   512,   513,     0,   514,
       0,     0,   515,   516,   517,   518,     0,   519,     0,   520,
     521,   522,   523,   524,     0,   525,   526,     0,     0,     0,
     527,   528,   529,   530,     0,     0,     0,   531,     0,     0,
       0,   532,     0,   533,   534,   535,   536,     0,   537,   538,
     539,   540,   541,     0,     0,     0,     0,     0,   542,   543,
     544,     0,   545,     0,     0,   546,     0,     0,   547,     0,
     548,     0,   549,   550,   551,   552,   553,   554,     0,     0,
     555,   556,     0,     0,   557,   558,   559,   560,   561,   562,
       0,     0,   563,   564,   565,   566,     0,   567,   568,     0,
       0,   569,   570,   571,   572,     0,     0,   573,   574,     0,
     575,   576,   577,   578,     0,     0,     0,     0,     0,   579,
     580,     0,     0,     0,   581,   582,   583,     0,     0,   584,
     585,     0,   586,   587,     0,   588,   589,     0,     0,   590,
       0,     0,   591,     0,   592,     0,   593,   594,     0,     0,
       0,     0,     0,   595,     0,   596,     0,     0,   597,     0,
       0,     0,   598,     0,   599,   600,   601,   602,     0,     0,
       0,     0,     0,     0,   603,   604,   605,     0,   606,   607,
     608,   609,     0,     0,   610,     0,     0,   611,   612,   613,
     614,   615,     0,   616,     0,     0,     0,     0,     0,     0,
       0,     0,   617,   618,   619,     0,   620,   621,   622,     0,
     623,     0,     0,   624,     0,   625,     0,     0,     0,     0,
       0,     0,   626,   627,     0,     0,   628,     0,   629,     0,
     630,   631,     0,     0,     0,   632,   633,   634,   635,   636,
     637,   638,   639,     0,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,     0,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,     0,
     674,   675,   676,   677,   678,   679,   680,     0,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,     0,   715,   716,   717,   718,   719,   720,   721,
       0,     0,     0,     0,     0,     0,   244,   245,  4161,   246,
     247,   248,   249,   250,   941,   942,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
     943,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,   944,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,   945,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   946,   334,
     335,   947,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   948,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,   949,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,   950,     0,   373,     0,
       0,     0,   951,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,   952,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,   953,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,     0,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   954,   478,   479,   480,   955,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,   956,     0,   490,   491,   492,   493,   494,     0,   957,
     496,     0,   497,   498,   499,     0,     0,   958,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,   959,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,   960,   961,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   962,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,   963,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,   964,
     592,   965,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,     0,     0,
     640,   641,   642,     0,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,  1015,   942,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
     943,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,   944,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,   945,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   946,   334,
     335,   947,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   948,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,   949,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,   950,     0,   373,     0,
       0,     0,   951,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,   952,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,   953,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,     0,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   954,   478,   479,   480,  1016,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,   956,     0,   490,   491,   492,   493,   494,     0,   957,
     496,     0,   497,   498,   499,     0,     0,   958,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,   959,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,   960,   961,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   962,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,   963,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,   964,
     592,   965,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,     0,     0,
     640,   641,   642,     0,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,   942,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
     943,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,   944,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,   945,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   946,   334,
     335,   947,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   948,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,   949,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,   950,     0,   373,     0,
       0,     0,   951,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,   952,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,   953,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,     0,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   954,   478,   479,   480,     0,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,   956,     0,   490,   491,   492,   493,   494,     0,   957,
     496,     0,   497,   498,   499,     0,     0,   958,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,   959,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,   960,   961,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   962,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,   963,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,   964,
     592,   965,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,     0,     0,
     640,   641,   642,     0,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,  3226,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,  3227,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
    3228,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,  3229,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,  1410,  1411,     0,   448,
     449,     0,     0,  3230,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,  5573,  1010,  5574,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,  3231,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,  1384,
    1385,   252,  1386,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,  1387,     0,     0,
    1388,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,  1389,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,  1390,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,  1537,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,  1538,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,  1539,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,  1156,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,  1540,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
    2498,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
    2499,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,  1882,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,  1883,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,  2501,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,  1562,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,  1563,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,  1156,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,  1727,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,  1728,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,   822,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,  1729,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,  1537,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,  3885,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,  1156,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,  1155,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,  1156,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,  1157,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,  1155,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,  1156,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,  1591,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,  1156,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,  1665,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
    1666,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,  1429,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,  3024,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,  1156,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,  1156,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,  3301,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,  1537,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,  1156,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,  1156,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,  3942,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,  1156,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,  5494,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,  5495,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,  1010,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
    1124,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,  1194,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,  1195,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,  1389,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,  2457,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,  2595,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,  3212,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,  3235,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,  3266,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,  3332,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,  2221,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,  2222,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,  5244,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,  1568,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
       0,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,     0,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,     0,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,  1569,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,     0,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,     0,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,  1568,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
       0,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,     0,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,     0,   530,
       0,     0,     0,   531,     0,     0,     0,   532,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,     0,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,     0,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,  1553,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,  1554,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,     0,   334,
     335,     0,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,     0,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,   952,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,  1555,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,     0,   478,   479,   480,     0,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,     0,
     496,     0,   497,   498,   499,     0,     0,     0,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,     0,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,     0,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,     0,     0,
     640,   641,   642,     0,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,  5327,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,  5328,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,     0,   334,
     335,     0,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,     0,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,   952,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,  5329,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,     0,   478,   479,   480,     0,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,     0,
     496,     0,   497,   498,   499,     0,     0,     0,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,     0,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,     0,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,     0,     0,
     640,   641,   642,     0,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,  2283,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,     0,   334,
     335,     0,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,     0,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,   952,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,  2284,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,     0,   478,   479,   480,     0,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,     0,
     496,     0,   497,   498,   499,     0,     0,     0,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,     0,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,     0,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,     0,     0,
     640,   641,   642,     0,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,  3098,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,     0,   334,
     335,     0,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,     0,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,   952,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,  3099,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,     0,   478,   479,   480,     0,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,     0,
     496,     0,   497,   498,   499,     0,     0,     0,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,     0,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,     0,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,     0,     0,
     640,   641,   642,     0,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,     0,   334,
     335,     0,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,     0,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,   952,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,     0,     0,     0,     0,   448,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,   472,     0,   473,   474,   475,     0,   476,
       0,     0,   478,   479,   480,     0,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,     0,
     496,     0,   497,   498,   499,     0,     0,     0,   501,   502,
     503,   504,   505,   506,   507,     0,   508,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,   515,   516,
     517,   518,     0,   519,     0,   520,   521,   522,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,     0,     0,   533,
     534,   535,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,   550,
     551,   552,   553,   554,     0,     0,   555,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,     0,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,   241,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
     581,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,   588,   589,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,   607,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,   623,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,     0,     0,
     640,   641,   642,     0,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,   715,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,     0,     0,   254,   255,   256,   257,
     258,   259,     0,  -567,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
       0,     0,     0,     0,   269,  5181,     0,   270,   271,     0,
     272,   273,     0,     0,     0,     0,   276,   277,   278,  5182,
     280,   281,     0,   282,   283,     0,   284,   285,     0,   287,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,     0,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,     0,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,     0,     0,     0,   320,   321,   322,
       0,  -537,  -537,   323,     0,  -537,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,     0,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,  5183,   344,   345,   346,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,     0,   362,     0,     0,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,  5184,     0,   370,     0,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,     0,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,  5185,     0,
       0,   382,     0,   383,     0,     0,     0,   385,     0,     0,
     386,  5186,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,  -522,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,     0,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,  5187,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,     0,     0,     0,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,     0,   499,  -522,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,     0,     0,   509,   510,
       0,   511,   512,   513,  5188,   514,     0,     0,     0,   516,
     517,   518,     0,   519,     0,   520,   521,     0,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,     0,     0,     0,
     534,     0,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,     0,
     551,   552,   553,   554,     0,     0,     0,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
       0,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,     0,     0,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,  -522,     0,     0,     0,
     603,   604,   605,     0,   606,     0,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,     0,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,     0,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,     0,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,     0,     0,   254,   255,   256,   257,
     258,   259,     0,  -567,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
       0,     0,     0,     0,   269,  5181,     0,   270,   271,     0,
     272,   273,     0,     0,     0,     0,   276,   277,   278,  5182,
     280,   281,     0,   282,   283,     0,   284,   285,     0,   287,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,     0,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,     0,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,     0,     0,     0,   320,   321,   322,
       0,  -558,     0,   323,     0,  -558,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,     0,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,  5183,   344,   345,   346,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,     0,   362,     0,     0,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,  5184,     0,   370,     0,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,     0,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,  5185,     0,
       0,   382,     0,   383,     0,     0,     0,   385,     0,     0,
     386,  5186,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,  -522,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,     0,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,  5187,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,     0,     0,     0,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,     0,   499,  -522,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,     0,     0,   509,   510,
       0,   511,   512,   513,  5188,   514,     0,     0,     0,   516,
     517,   518,     0,   519,     0,   520,   521,     0,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,     0,     0,     0,
     534,     0,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,     0,
     551,   552,   553,   554,     0,     0,     0,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
       0,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,     0,     0,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,  -558,     0,  -522,     0,     0,     0,
     603,   604,   605,     0,   606,     0,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,     0,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,     0,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,     0,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,     0,     0,   254,   255,   256,   257,
     258,   259,     0,  -567,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
       0,     0,     0,     0,   269,  5181,     0,   270,   271,     0,
     272,   273,     0,     0,     0,     0,   276,   277,   278,  5182,
     280,   281,     0,   282,   283,     0,   284,   285,     0,   287,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,     0,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,     0,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,     0,     0,     0,   320,   321,   322,
       0,  -555,     0,   323,     0,  -555,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,     0,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,  5183,   344,   345,   346,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,     0,   362,     0,     0,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,  5184,     0,   370,     0,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,     0,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,  5185,     0,
       0,   382,     0,   383,     0,     0,     0,   385,     0,     0,
     386,  5186,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,  -522,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,     0,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,  5187,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,     0,     0,     0,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,     0,   499,  -522,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,     0,     0,   509,   510,
       0,   511,   512,   513,  5188,   514,     0,     0,     0,   516,
     517,   518,     0,   519,     0,   520,   521,     0,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,     0,     0,     0,
     534,     0,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,     0,
     551,   552,   553,   554,     0,     0,     0,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
       0,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,     0,     0,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,  -555,     0,  -522,     0,     0,     0,
     603,   604,   605,     0,   606,     0,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,     0,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,     0,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,     0,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,     0,     0,   254,   255,   256,   257,
     258,   259,     0,  -567,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
       0,     0,     0,     0,   269,  5181,     0,   270,   271,     0,
     272,   273,     0,     0,     0,     0,   276,   277,   278,  5182,
     280,   281,     0,   282,   283,     0,   284,   285,     0,   287,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,     0,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,     0,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,     0,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,  5438,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,     0,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,  5183,   344,   345,   346,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,     0,   362,     0,     0,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,  5184,     0,   370,     0,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,     0,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,  5185,     0,
       0,   382,     0,   383,     0,     0,     0,   385,     0,     0,
     386,  5186,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,  -522,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,     0,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,  5187,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,     0,     0,     0,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,     0,   499,  -522,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,     0,     0,   509,   510,
       0,   511,   512,   513,  5188,   514,     0,     0,     0,   516,
     517,   518,     0,   519,     0,   520,   521,     0,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,     0,     0,     0,
     534,     0,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,     0,
     551,   552,   553,   554,     0,     0,     0,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
       0,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,     0,     0,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,  -522,     0,     0,     0,
     603,   604,   605,     0,   606,     0,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,     0,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,     0,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,     0,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,     0,     0,   254,   255,   256,   257,
     258,   259,     0,  -567,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
       0,     0,     0,     0,   269,  5181,     0,   270,   271,     0,
     272,   273,     0,     0,     0,     0,   276,   277,   278,  5182,
     280,   281,     0,   282,   283,     0,   284,   285,     0,   287,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,     0,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,     0,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,     0,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,  -560,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,     0,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,  5183,   344,   345,   346,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,     0,   362,     0,     0,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,  5184,     0,   370,     0,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,     0,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,  5185,     0,
       0,   382,     0,   383,     0,     0,     0,   385,     0,     0,
     386,  5186,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,  -522,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,     0,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,  5187,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,     0,     0,     0,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,     0,   499,  -522,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,     0,     0,   509,   510,
       0,   511,   512,   513,  5188,   514,     0,     0,     0,   516,
     517,   518,     0,   519,     0,   520,   521,     0,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,     0,     0,     0,
     534,     0,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,     0,
     551,   552,   553,   554,     0,     0,     0,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
       0,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,     0,     0,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,  -522,     0,     0,     0,
     603,   604,   605,     0,   606,     0,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,     0,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,     0,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,     0,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,     0,     0,   254,   255,   256,   257,
     258,   259,     0,  -567,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
       0,     0,     0,     0,   269,  5181,     0,   270,   271,     0,
     272,   273,     0,     0,     0,     0,   276,   277,   278,  5182,
     280,   281,     0,   282,   283,     0,   284,   285,     0,   287,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,     0,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,     0,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,     0,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,  5499,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,     0,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,  5183,   344,   345,   346,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,     0,   362,     0,     0,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,  5184,     0,   370,     0,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,     0,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,  5185,     0,
       0,   382,     0,   383,     0,     0,     0,   385,     0,     0,
     386,  5186,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,  -522,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,     0,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,  5187,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,     0,     0,     0,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,     0,   499,  -522,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,     0,     0,   509,   510,
       0,   511,   512,   513,  5188,   514,     0,     0,     0,   516,
     517,   518,     0,   519,     0,   520,   521,     0,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,     0,     0,     0,
     534,     0,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,     0,
     551,   552,   553,   554,     0,     0,     0,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
       0,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,     0,     0,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,  -522,     0,     0,     0,
     603,   604,   605,     0,   606,     0,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,     0,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,     0,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,     0,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,     0,     0,   254,   255,   256,   257,
     258,   259,     0,  -567,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
       0,     0,     0,     0,   269,  5181,     0,   270,   271,     0,
     272,   273,     0,     0,     0,     0,   276,   277,   278,  5182,
     280,   281,     0,   282,   283,     0,   284,   285,     0,   287,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,     0,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,     0,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,     0,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,  5539,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,     0,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,  5183,   344,   345,   346,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,     0,   362,     0,     0,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,  5184,     0,   370,     0,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,     0,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,  5185,     0,
       0,   382,     0,   383,     0,     0,     0,   385,     0,     0,
     386,  5186,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,  -522,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,     0,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,  5187,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,     0,     0,     0,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,     0,   499,  -522,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,     0,     0,   509,   510,
       0,   511,   512,   513,  5188,   514,     0,     0,     0,   516,
     517,   518,     0,   519,     0,   520,   521,     0,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,     0,     0,     0,
     534,     0,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,     0,
     551,   552,   553,   554,     0,     0,     0,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
       0,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,     0,     0,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,  -522,     0,     0,     0,
     603,   604,   605,     0,   606,     0,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,     0,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,     0,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,     0,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,     0,     0,   254,   255,   256,   257,
     258,   259,     0,  -567,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
       0,     0,     0,     0,   269,  5181,     0,   270,   271,     0,
     272,   273,     0,     0,     0,     0,   276,   277,   278,  5182,
     280,   281,     0,   282,   283,     0,   284,   285,     0,   287,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,     0,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,     0,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,     0,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,  -541,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,     0,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,  5183,   344,   345,   346,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,     0,   362,     0,     0,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,  5184,     0,   370,     0,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,     0,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,  5185,     0,
       0,   382,     0,   383,     0,     0,     0,   385,     0,     0,
     386,  5186,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,  -522,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,     0,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,  5187,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,     0,     0,     0,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,     0,   499,  -522,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,     0,     0,   509,   510,
       0,   511,   512,   513,  5188,   514,     0,     0,     0,   516,
     517,   518,     0,   519,     0,   520,   521,     0,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,     0,     0,     0,
     534,     0,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,     0,
     551,   552,   553,   554,     0,     0,     0,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
       0,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,     0,     0,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,  -522,     0,     0,     0,
     603,   604,   605,     0,   606,     0,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,     0,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,     0,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,     0,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,     0,     0,   254,   255,   256,   257,
     258,   259,     0,  -567,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
       0,     0,     0,     0,   269,  5181,     0,   270,   271,     0,
     272,   273,     0,     0,     0,     0,   276,   277,   278,  5182,
     280,   281,     0,   282,   283,     0,   284,   285,     0,   287,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,     0,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,     0,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,     0,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,     0,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,     0,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,  5183,   344,   345,   346,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,     0,   362,     0,     0,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,  5184,     0,   370,     0,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,     0,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,  5185,     0,
       0,   382,     0,   383,     0,     0,     0,   385,     0,     0,
     386,  5186,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,  -522,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,     0,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,  5187,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,     0,     0,     0,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,     0,   499,  -522,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,     0,     0,   509,   510,
       0,   511,   512,   513,  5188,   514,     0,     0,     0,   516,
     517,   518,     0,   519,     0,   520,   521,     0,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,     0,     0,     0,
     534,     0,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,     0,
     551,   552,   553,   554,     0,     0,     0,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
       0,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,     0,     0,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,  -522,     0,     0,     0,
     603,   604,   605,     0,   606,     0,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,     0,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,     0,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,     0,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,     0,     0,   254,   255,   256,   257,
     258,   259,     0,  -567,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
       0,     0,     0,     0,   269,  5181,     0,   270,   271,     0,
     272,   273,     0,     0,     0,     0,   276,   277,   278,  5182,
     280,   281,     0,   282,   283,     0,   284,   285,     0,   287,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,     0,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,     0,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,     0,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,     0,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,     0,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,  5183,   344,   345,   346,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,     0,   362,     0,     0,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,  5184,     0,   370,     0,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,     0,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,  5185,     0,
       0,   382,     0,   383,     0,     0,     0,   385,     0,     0,
     386,  5186,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,  -522,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,     0,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,  5187,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,     0,     0,     0,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,     0,   499,  -522,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,     0,     0,   509,   510,
       0,   511,   512,   513,  5188,   514,     0,     0,     0,   516,
     517,   518,     0,   519,     0,   520,   521,     0,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,     0,     0,     0,
     534,     0,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,     0,
     551,   552,   553,   554,     0,     0,     0,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
       0,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,     0,     0,     0,     0,   590,     0,     0,  5441,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,  -522,     0,     0,     0,
     603,   604,   605,     0,   606,     0,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,     0,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,     0,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,     0,     0,
     716,   717,   718,   719,   720,   721,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,     0,     0,   254,   255,   256,   257,
     258,   259,     0,     0,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
       0,     0,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,     0,     0,     0,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,     0,   287,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,     0,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,     0,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,     0,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,     0,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,     0,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,     0,   362,     0,     0,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,     0,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,     0,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,     0,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,     0,
     416,   417,   418,   419,     0,   420,   421,     0,     0,     0,
       0,   422,   423,   424,   425,   426,   427,     0,     0,   428,
     429,     0,   430,     0,   431,     0,   432,   433,   434,   435,
     436,   437,   438,   439,   440,     0,     0,   441,   442,     0,
       0,   443,   444,   445,   446,   447,     0,     0,     0,     0,
     449,     0,     0,     0,   450,     0,   451,   452,     0,   453,
     454,   455,     0,     0,   456,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   457,   458,   459,     0,   460,     0,
     461,     0,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,     0,     0,     0,   474,   475,     0,   476,
       0,   477,   478,   479,   480,   481,     0,   482,   483,   484,
       0,     0,   485,     0,     0,     0,   486,   487,     0,   488,
     489,     0,     0,   490,   491,   492,   493,   494,     0,   495,
     496,     0,   497,     0,   499,     0,     0,   500,   501,   502,
     503,   504,   505,   506,   507,     0,     0,     0,   509,   510,
       0,   511,   512,   513,     0,   514,     0,     0,     0,   516,
     517,   518,     0,   519,     0,   520,   521,     0,   523,   524,
       0,   525,   526,     0,     0,     0,   527,   528,   529,   530,
       0,     0,     0,   531,     0,     0,     0,     0,     0,     0,
     534,     0,   536,     0,   537,   538,   539,   540,   541,     0,
       0,     0,     0,     0,   542,   543,   544,     0,   545,     0,
       0,   546,     0,     0,   547,     0,   548,     0,   549,     0,
     551,   552,   553,   554,     0,     0,     0,   556,     0,     0,
     557,   558,   559,   560,   561,   562,     0,     0,   563,   564,
     565,   566,     0,   567,   568,     0,     0,   569,   570,   571,
     572,     0,     0,   573,   574,     0,   575,   576,   577,   578,
       0,     0,     0,     0,     0,   579,   580,     0,     0,     0,
       0,   582,   583,     0,     0,   584,   585,     0,   586,   587,
       0,     0,     0,     0,     0,   590,     0,     0,   591,     0,
     592,     0,   593,   594,     0,     0,     0,     0,     0,   595,
       0,   596,     0,     0,   597,     0,     0,     0,   598,     0,
     599,   600,   601,   602,     0,     0,     0,     0,     0,     0,
     603,   604,   605,     0,   606,     0,   608,   609,     0,     0,
     610,     0,     0,   611,   612,   613,   614,   615,     0,   616,
       0,     0,     0,     0,     0,     0,     0,     0,   617,   618,
     619,     0,   620,   621,   622,     0,     0,     0,     0,   624,
       0,   625,     0,     0,     0,     0,     0,     0,   626,   627,
       0,     0,   628,     0,   629,     0,   630,   631,     0,     0,
       0,   632,   633,   634,   635,   636,   637,   638,   639,     0,
     640,   641,   642,     0,   644,   645,   646,   647,   648,   649,
       0,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,     0,   674,   675,   676,   677,
     678,   679,   680,     0,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,  1059,  1060,
     716,   717,   718,   719,   720,   721,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3819,  3820,     0,     0,  1061,  1034,  3821,     0,  3822,     0,
    3823,  3824,     0,     0,     0,  1062, -2149,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3825,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1063,     0,  1064,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1065,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3826,     0,
       0,  3827,     0,     0,     0,     0,     0,     0,     0,  3828,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   -2141,  1066,     0,     0,     0,     0,  1067,     0,  3473,  1068,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1069,
       0,     0,     0,     0,     0,  3829,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1070,     0,  1071,     0,     0,     0,     0,     0,     0,
       0,     0,  1072,  3830,  1073,  3831,     0,     0,     0,     0,
    5336,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3832,  3833,     0,     0,     0,     0,     0,     0,     0,
       0,  3819,  3820,     0,     0,     0,     0,  3821,     0,  3822,
       0,  3823,  3824,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3825,
       0,     0,     0,  3834,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1074,  3835,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3836,     0,     0,     0,     0,
       0,     0,     0,     0,  3837,  3838,     0,  3839,  1075,  3826,
       0,     0,  3827,     0,     0,     0,     0,     0,     0,     0,
    3828,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3473,
       0,     0,     0,  3840,  3841,  3842,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3829,     0,     0,     0,
       0,     0,  3843,  3844,  3845,     0,     0,     0,     0,  3846,
       0,     0,  3847,  1076,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3830,     0,  3831,     0,     0,     0,
    3848,  3849,     0,     0,     0,     0,     0,     0,     0,     0,
    1077,     0,  3832,  3833,     0,     0,     0,     0,     0,     0,
       0,  1078,  1079,     0, -2145,  1080,  1081,     0,     0,     0,
       0,     0,     0,     0,  3850,  3851,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1082,     0,     0,     0,
       0,     0,     0,     0,  3834,     0,     0,     0,     0,     0,
    3485,     0,     0,     0,     0,     0,     0,  3835,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3836,     0,     0,     0,
       0,     0,     0,     0,     0,  3837,  3838,     0,  3839,     0,
    1083,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1084,     0,     0,     0,     0,     0,     0,
       0,     0,  3852,     0,     0,     0,  3853,     0,     0,     0,
       0,     0,     0,     0,  3840,  3841,  3842,     0,  3854,     0,
       0,     0,     0,     0,     0, -2894,     0,     0,     0,  1085,
       0,     0,     0,  3843,  3844,  3845,     0,     0,     0,     0,
    3846,     0,     0,  3847,     0, -2149,     0,     0,  1086,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3848,  3849,     0,     0,     0,  2614,     0, -2145,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3855,     0,
       0,  3856,     0,     0,  3857,  3858,  3859,  3860,     0,     0,
       0,     0,     0,     0,     0,  3850,  3851,     0,     0,     0,
       0,     0,     0,     0,     0,     0, -2894,     0,     0,     0,
       0,     0,     0,  1087,     0,     0,     0,     0,     0,     0,
       0,  3485,     0,     0,     0,     0,     0,  3861,  3862,  2615,
    2616,  2617,  2618,  2619,  2620,  2621,  2622,  2623,  2624,  2625,
    2626,  2627,  2628,  2629,  2630,  2631,  2632,  2633,  2634,     0,
    2635,  2636,     0,     0,     0,  3863,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3852,     0,     0,     0,  3853,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3854,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1088,  1089,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3855,
       0,     0,  3856,     0,     0,  3857,  3858,  3859,  3860,  1090,
       0,     0,  1091,  1092,  1093,  1094,     0,  1095,  2637,  2638,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3861,  3862,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3863,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2639,  2640,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2641,     0,  2642,  2643,  2644,
    2645,  2646,     0,     0,  2647,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2648,     0,     0,     0,     0,  2649,
    2650,  2651,  2652,  2653,  2654,  2655,  2656,  2657,  2658,  2659,
    2660,  2661,  2662,  2663,  2664,  2665,  2666,  2667,  2668,  2669,
    2670,  2671,  2672,  2673,  2674,  2675,  2676
};

static const yytype_int16 yycheck[] =
{
       6,    44,   891,     0,   115,     0,  1197,    57,   904,    15,
    1299,  1250,    18,     0,    43,    44,    22,  1038,  1039,  1712,
     806,  1087,  1190,    21,   116,    31,    97,  1178,  1198,  2729,
    2451,  2452,    38,  2242,    43,    41,  1855,  1058,     6,  2235,
      46,    39,    21,    49,  3076,    43,  1480,    53,  1185,    55,
    1655,  1148,  1443,  1213,  1886,    60,  1212,  1350,  2952,    60,
      39,  1404,  2199,  1443,    43,  2073,  2074,  3217,  2242,    64,
    2199,  2163,   227,    19,    59,  1213,  2985,    64,  2086,  2087,
    2088,  3275,  2224,  1180,    30,  2513,  2415,  2515,  3135,    35,
    2848,    97,  1350,  3487,  1528,  2531,  2524,   116,  2316,  2574,
    2575,  1272,  1273,  1292,  3865,  3865,  2493,  2757,  2489,  2490,
    1366,  2761,  1795,  2722,  1761,  3328,  1761,  1183,  1795,  1529,
    3721,  1187,  3768,  3017,  3885,  3886,   121,  3306,  2722,  2275,
    1301,  3381,  1815,  1797,  1761,  2994,  2564,  1801,  2280,  2722,
    2568,    21,  1313,  1314,  1315,  1605,  2722,   767,  1319,  2762,
    1833,  1815,  1056,  1704,  1705,  1706,  2856,  2921,  3031,    39,
    2498,  2722,  1622,  1827,  3072,  2731,  3390,  2462,  2562,  2563,
       9,  2293,  2754,  4537,  2280,  1635,   121,  3929,  2722,  3390,
    2762,  1641,  4537,  3637,   736,   737,   192,  1358,  1775,  2576,
      29,    21,  2544,  2545,   125,    34,    21,  1265,  1266,  1267,
    4478,    22,  2754,    35,    18,    19,    11,  2842,  1276,  1448,
    2762,    52,  2713,    52,    68,   221,   125,   223,   160,    77,
     226,   227,   228,   229,    59,   156,    35,    71,    73,  1366,
    3004,  3104,   176,   144,    21,    18,    19,   243,    21,  1307,
      21,    48,  1310,   194,    71,    73,   156,    18,    19,  1065,
    4418,  2747,  2748,  2749,   236,   223,   876,   877,   226,   879,
      71,  1329,  1330,     5,   194,  1333,    48,    19,  2764,    18,
      19,   249,   892,   156,  1090,  1091,  1092,  1093,  1094,  1376,
    1096,   246,  4441,  1351,  1352,    64,  2501,   150,  1356,  1357,
      21,    18,    19,  2789,  3767,   197,  1535,  2793,  3271,    18,
      19,   197,   197,  1371,    18,    19,    18,    19,    39,   156,
     131,   760,  2486,  2809,  2810,  2489,  2490,    67,   326,  2815,
     230,    18,    19,   204,   372,    18,    19,    73,    31,   125,
     125,   156,    21,  1920,   144,  2831,  2832,    70,   194,   372,
      78,   176,    18,    19,  2840,   180,   401,    81,  1237,   376,
     246,    18,    19,   130,   162,   125,    18,    19,   293,   194,
    4668,   156,  2858,  4185,  4253,   919,   920,   921,   123,   156,
     924,   925,    62,   781,   928,   275,   930,   931,   932,   455,
     934,    18,    19,   219,   160,   204,   156,   492,   750,   751,
      18,    19,   754,   276,  2903,    18,    19,   150,    23,   125,
     239,    87,    44,   285,   125,   292,   500,   111,   455,  2837,
      35,   156,    23,   369,   193,   176,   432,  1257,  1258,   571,
     156,   194,    12,   103,    49,    18,    19,    18,    19,   125,
     111,   582,  3826,   156,   156,   194,    61,    62,   387,    85,
     571,    43,   231,   851,   614,   571,    18,    19,   197,   156,
      61,    62,   634,  5149,  1008,   636,  5152,   156,   379,    21,
     565,  3674,  3856,  3857,    18,    19,    18,    19,   139,   194,
      13,    13,    18,    19,   109,   377,    25,  3127,   194,   158,
    3668,    82,    18,    19,   428,   502,   258,   246,   194,   276,
     542,   611,   247,   571,    13,   330,   446,   432,    18,    19,
     197,   432,  1288,    18,    19,   127,   315,   235,  3661,  3662,
    2719,  1400,   285,  3319,   619,   400,  1302,   640,  3671,  3672,
     263,  4167,   235,  3432,   125,   194,   285,   486,    18,    19,
     246,   235,   212,    18,    19,  1431,  1432,  1688,    18,    19,
    1561,    35,    18,    19,   388,  2719,   368,   148,   156,   245,
     263,  1572,   809,   591,    37,    21,    18,    19,   815,   501,
    3169,   388,  3838,  3839,   449,   235,  3842,   454,    62,   285,
    1721,   623,   386,    23,    73,   389,   614,   388,   432,   285,
      18,    19,    77,   533,  3860,    35,   187,   150,   708,   744,
     546,   608,  2729,   428,  3244,    18,    19,   140,   140,    49,
     387,    11,    70,   386,   293,  4764,   389,   130,    74,  3415,
      37,    61,    62,   400,    73,   386,   285,  4377,   389,   168,
     636,   140,    18,    19,   239,   447,   248,  1523,   469,   510,
      18,    19,   814,   814,   249,    18,    19,   386,   417,   163,
     389,   203,   372,   368,   814,    18,    19,   293,    73,  5345,
     371,   727,   231,   602,  3041,   130,  4257,  3307,   810,   386,
     331,   403,   389,   814,   360,  3093,   455,   428,   276,  1221,
    1736,  1737,   386,   629,   386,   389,   125,   389,   809,   434,
     727,  1577,  2891,  3111,  3112,  3113,  3114,   813,   368,   386,
     500,   510,   389,   386,   160,   285,   389,   608,   470,  3028,
    3029,  3053,  3089,   584,   809,   192,   432,   642,  3617,  3004,
     386,   492,   354,   389,   194,  3865,  4994,  2891,   241,   386,
     814,   642,   389,   605,   386,   501,   881,   389,    52,  3879,
     736,   737,  3119,  3120,   634,   571,   219,    22,   744,  3167,
     746,   427,   387,   432,   231,  3254,  3174,  1155,   635,   386,
    1370,   634,   389,   487,   809,  4577,   103,   167,   386,  5067,
     510,   389,   810,   386,    49,  2156,   389,   262,   801,   235,
     633,    18,    19,   198,  4050,  2166,  2156,   392,  2987,   761,
     636,  3390,  1598,   464,   565,   790,  1602,   814,  1408,   790,
     200,  1607,   219,   386,   549,   386,   389,   263,   389,  1970,
     806,   809,  2894,  3561,   126,  3563,  2948,   174,  1428,   542,
    1259,  4970,  4971,  2987,   386,  4288,  2499,   389,  2501,  2466,
    4988,  2466,  3018,   978,   603,   571,  1642,  1643,  5106,   636,
     582,   608,   386,   647,   386,   389,   814,   389,   619,  2466,
     386,  2012,  2948,   389,  2852,  3818,  3141,   634,  3284,   814,
     386,   612,  3239,   389,   636,   636,   594,  2994,  3731,  4748,
    3198,  3734,  3200,   814,   647,  2994,   386,   546,  3762,   389,
     814,   386,   753,   815,   389,   881,   647,   883,  3020,   582,
     633,   812,   888,  1038,   814,   880,  3387,  3661,  1956,   747,
     698,  1046,  1047,   880,  1256,  1447,   386,  1451,   647,   389,
     614,   386,   812,   814,   389,   814,   386,   192,  3881,   389,
     386,  1066,   814,   389,  3020,  2734,   922,  3552,   814,   814,
     647,   927,  3350,  2094,   386,  3353,   722,   389,   647,   812,
    1001,  3359,   622,   647,   753,   647,  3364,  3365,  3366,  3367,
    3368,  2092,   646,  3139,   229,    18,    19,  3375,   386,  1501,
     647,   389,  3380,   642,   647,  3383,  2024,   762,   243,  1511,
    2028,   815,  3458,   386,   809,   812,   389,   814,  3355,  5247,
     814,   647,   978,   814,  3096,   600,   785,   809,   984,   814,
     647,   809,  2050,   810,   814,   647,  4199,   812,   809,   600,
     386,  3206,   627,   389,  1000,  1001,   738,   739,   386,   810,
     625,   389,  3498,   386,  3500,   819,   389,  2612,   787,   419,
     647,    18,    19,   386,  4766,   695,   389,   812,  3514,   647,
    3516,  1176,  2090,  1029,   647,   812,   634,   810,   809,  4217,
    4218,   814,  1038,  3385,  4081,  3531,  4797,   810,  1878,   810,
    1046,  1047,   812,   814,   787,  1043,   716,  1056,  4201,    18,
      19,   810,  1207,   814,   647,  4331,   647,  1149,  1056,  5218,
    1066,   810,  2301,   562,  1043,  4341,  2713,   812,  2713,   814,
     633,  3567,  2677,  4349,   542,   647,   812,  1056,   814,  1190,
    1191,   403,    65,   810,   814,   608,  2713,  3416,   571,   812,
     812,   814,   814,   647,   810,   647,   935,   464,   810,  1191,
     814,   647,   814,   562,   810,   812,   630,   814,  1114,  1115,
    4386,   647,  1952,   812,   693,   814,   582,   814,  1124,    18,
      19,   814,   532,  4317,  4578,  2957,   613,   647,    18,    19,
    1149,  1202,   647,   608,   810,   814,  2723,   562,   814,   386,
     122,   636,   389,   810,   571,   469,  1141,   814,  1154,   185,
     600,  5506,   814,   282,  1141,  1150,    57,   647,   997,  1178,
     655,   656,   647,    71,  1003,    18,    19,   647,  5532,   814,
    1176,   647,   315,   810,  2413,  1116,   586,   814,  1249,  1185,
    4359,   571,  3391,   483,   809,   647,   814,   810,   535,   276,
     379,   814,  1198,  5224,   500,   810,  1202,  3633,  1204,  1205,
    1197,  1207,  1197,  1209,   812,  1150,   655,   656,  1214,   647,
    1197,  1217,  1218,  4362,    13,  1221,   282,  3391,  2388,  5497,
    1582,   814,  1228,   814,   647,   421,  4450,  4377,   366,   547,
     179,  4362,  1238,  1239,  1240,  4920,  2022,  1243,   810,  4450,
    1246,   122,   814,  1249,   371,  1251,  3812,  3813,  1254,  1255,
    1218,   647,  1250,   748,   749,  2548,   810,   259,   810,   647,
     814,   565,   814,  4394,   647,  2958,    18,    19,   814,  2290,
    1320,  1250,  1427,   256,   647,   138,  4185,   160,   814,    18,
      19,   122,  1288,    18,    19,  1377,  1441,    22,  3716,   611,
    2548,   464,  2358,   158,   814,   263,  1302,   278,    40,   814,
     387,  4986,   377,  1298,   370,    18,    19,  2912,   290,  3401,
     628,  1298,  1043,   386,  2451,  2452,   389,    18,    19,   625,
     652,    77,  1477,     9,   814,    71,    77,   472,  2484,   814,
     810,  2722,  2488,   565,  4242,  4194,   703,   704,   814,  2495,
    4566,   140,  2722,   377,  1350,    31,   571,   188,  5109,    52,
    3442,   137,   814,   743,   176,  1405,  1406,  4230,  4231,  1409,
    1366,  3748,  1412,  1413,  1414,   228,   152,  1417,  1418,  1419,
    1420,  1421,  1422,  1423,  1424,  3769,   814,  1383,   219,   386,
    1386,   243,   389,    18,    19,  2990,  2991,  4260,  4261,   585,
     372,   814,  4156,  4266,   112,  4268,   131,   115,  1469,  4008,
     647,  3094,  1407,   243,  3733,   282,  1407,  2311,  3737,   290,
     571,   200,  3799,  2199,  4008,  2319,  5447,   386,   814,   165,
     389,  1427,   371,  2583,  2584,  4008,   814,   810,  1434,  1435,
    1436,  1437,  4008,  1439,  1440,  1441,   160,   810,  1444,  1445,
    1446,  1447,   571,  1449,  1450,  2583,  2584,  4008,  1454,   290,
    1448,   736,   737,   642,  1056,  4068,  1527,  3653,  4708,  4709,
    1466,  3607,  5223,  1469,  4008,  3803,  3761,   368,  1436,  1448,
     194,  1477,  1440,  1544,  1480,  3693,  1444,  3673,  1484,  1485,
     388,   517,  5128,  1481,  3920,  3921,  4068,   386,    18,    19,
     389,   372,  3311,   406,  1500,  1501,   386,  2931,   240,   389,
     481,  2892,  1481,  3649,  1510,  1511,   262,  1513,  1514,   809,
    3938,   262,  2892,  1532,  3065,   602,  4068,  1588,  2928,  1250,
    2140,  1527,  1528,  3206,  4137,    18,    19,  3210,  2871,   483,
    1536,   372,  1603,   386,   315,  2351,   389,  1535,  1544,    18,
      19,  1696,  4574,  5144,  1573,  2361,  1487,    47,   582,  2365,
    4729,  3559,  2368,  1559,  3562,  4137,  1535,  1919,  1713,  3681,
    3682,  1567,  3704,  2997,  1573,   708,  2722,   814,  4717,   552,
      18,    19,  1934,    65,   647,  1573,  5337,  1583,  1584,  1585,
    1586,  1587,  1588,  1589,   809,  4137,  2996,  2876,  2877,  1681,
    2846,   729,  1747,  1599,  1573,  1601,   723,  1603,  3704,  3691,
    1606,  1481,    18,    19,  5364,  2159,   428,  3067,  3068,  2780,
    3732,   593,  1683,   742,  1453,  1583,  1584,  1585,   501,  1587,
    4007,  2173,  3764,  3057,  4005,  4006,  3309,  3310,  4124,  4855,
     419,  1702,  3309,  1601,   386,   603,  2807,   389,  1606,   588,
     647,   814,   388,  4856,    21,    21,  3310,   386,   809,   651,
     389,   386,    19,   158,   389,   604,  1662,  1663,  3764,   287,
    4936,   194,  4938,    18,    19,   368,   741,   742,  4577,  1688,
     815,  1677,   137,   386,   125,   406,   389,  1683,   647,    18,
      19,   546,  4332,   246,   127,   386,   197,   152,   389,   209,
    1696,  3783,  4301,   300,   301,  4123,  1702,  2886,    65,   582,
     562,   578,  2322,   565,   400,    18,    19,  1713,   241,  2846,
     400,   162,   593,   276,    18,    19,   216,  1448,  5112,    18,
      19,   349,   562,   810,   138,   565,   122,  4921,   276,   510,
    1725,   368,  2526,  4120,    18,    19,  1742,   810,   249,  1734,
    3387,  1747,  3387,   638,  2538,   658,   365,   366,   647,   355,
    1481,   386,   593,  3436,   389,  5516,   429,   647,  1764,  1765,
    3387,  5011,   282,   809,   256,  4638,   469,  4640,    18,    19,
     191,  2839,  4819,  4531,   125,  2569,   565,   501,  3169,   156,
     814,   255,  3021,  3022,  3023,    18,    19,  3619,   139,  3169,
     612,   315,   188,   198,   647,    18,    19,   500,  3349,   122,
    3351,    18,    19,   571,  1535,   248,  2600,   814,   481,  3360,
    3361,  3362,  3363,   125,   228,   238,   122,  3909,  3369,  3370,
    3371,  3372,  3373,  3374,   387,  3376,  3377,  3378,  3379,  1114,
    1859,  4005,  4006,  3384,   536,    18,    19,   444,   445,   387,
     591,  4450,   355,   122,  4384,   814,  4233,  4387,   271,   231,
     162,  4760,    18,    19,   231,   231,   386,   575,   582,   389,
     578,    18,    19,   614,   369,   188,  5116,   563,   570,  4256,
     332,   400,   364,   563,  1880,  1881,   209,  1862,   235,   571,
     614,  5075,   188,  4270,  2950,  4585,    18,    19,  4275,   256,
    1896,     0,   636,   386,   290,   647,   389,   534,  3990,   655,
     656,    71,   352,   237,   655,   656,   263,   386,   647,   188,
     389,   293,   647,   219,   542,   814,    19,    18,    19,   814,
     371,   227,   455,   229,   814,  2080,  1932,   658,  3319,  1935,
    1936,  1937,   456,  4262,   647,   371,  1221,    13,   386,  1945,
     219,   389,  5277,  2098,   653,   492,   647,    18,    19,   282,
      21,     9,    18,    19,    25,   153,    18,    19,   432,   492,
     366,   814,    18,    19,   732,   571,   164,   290,  1936,  1937,
     386,  1573,   753,   389,    18,    19,   372,   497,   156,   634,
     331,    18,    19,   448,   290,   485,    18,    19,  3054,   373,
     596,   412,   748,   749,   399,   165,  3062,   748,   749,  3390,
      18,    19,    18,    19,   785,  4501,    18,    19,   681,   415,
    3390,   290,   647,   414,   479,   212,  2022,  2023,   565,    18,
      19,    18,    19,   400,  3415,    13,  3047,  4900,    18,    19,
    4680,   386,   565,  3986,   389,   369,    18,    19,   141,   602,
     732,   546,   534,   400,   167,  2200,   428,   386,  4001,   372,
     389,    18,    19,   476,   602,    18,    19,  4194,   571,   371,
     552,   258,   814,   746,   140,  4194,   372,  4448,  4449,  5319,
     814,   810,   619,   386,  2080,  2125,   389,   200,   455,   455,
     814,   815,   386,   596,  2239,   389,   619,   386,  2138,   636,
     389,  2141,  2098,   372,    18,    19,  3701,   810,    18,    19,
     484,   784,   386,   636,   509,   389,   815,   569,   636,   810,
    2115,    18,    19,    22,  2115,   492,   492,   647,   128,    77,
     571,  5456,  5457,  2118,   629,  4133,   160,  4135,   186,  5023,
     216,  2118,  2287,   595,  2139,   571,   386,  4466,  2139,   389,
    2146,    18,    19,  4683,  4286,  4287,    18,    19,  2303,  2155,
    4292,   643,   140,   386,   647,   186,   389,   764,   765,   814,
     249,  4370,  1447,   386,   497,   158,   389,  2173,   647,   386,
      18,    19,   389,  2244,  2245,   810,   809,   263,  3612,  3418,
    4286,  4287,   815,   272,   614,   552,  4292,   385,   565,   565,
     387,    53,  2198,  2199,  2200,   622,  4370,   593,   625,   647,
     158,  3592,    64,   386,    18,    19,   389,  4026,  2994,  2215,
     246,   508,   546,  2219,  5364,  1500,  1501,  3651,   388,   571,
     386,  2227,   131,   389,  2230,  1510,  1511,   571,  1513,   386,
    2850,   647,   389,  2239,   571,   266,  3579,   197,  2244,  2245,
     276,   344,   619,   619,   237,    21,   186,   810,    18,    19,
    4725,  4726,   614,  2873,   386,  2875,   227,   389,   229,   636,
     636,  2416,   809,   713,   714,   715,    18,    19,  3702,  2275,
     593,  2277,    48,  2279,  4448,  4449,   809,   128,  2279,   237,
     810,  2287,   212,   293,   194,   386,   814,   593,   389,  2444,
     197,  2362,   647,    18,    19,   629,   419,  2303,    18,    19,
     813,  1586,  2311,  2301,  1589,   636,  2304,   160,   647,   606,
    2319,   216,  4641,  2311,   593,   386,   141,   810,   389,   652,
     386,  2319,  2301,   389,   386,  2304,   266,   389,   563,  2335,
     386,   810,  2311,   389,   647,   230,   246,   368,   671,  4171,
    2319,  3634,   386,   647,  3637,   389,  4774,  3444,   647,   386,
    4303,   387,   389,   650,   386,  4308,  2362,   389,   263,  4312,
    2366,  2367,   810,   647,   167,    32,    18,    19,   386,   220,
     386,   389,   570,   389,   386,   285,   369,   389,    13,  3637,
     732,  2536,  2387,   141,   814,   815,  2387,   386,   732,   386,
     389,  4587,   389,   212,   810,   732,   386,   647,   127,   389,
     503,   504,   362,  3574,   386,   363,  4834,   389,   243,   532,
    2416,   369,    79,  2442,   647,  2413,    33,   696,  2573,   386,
     282,  4563,   389,   386,   647,  3219,   389,   815,  2434,  3589,
     647,  1725,   809,   809,  2413,   812,   156,   814,  2444,  4875,
    1734,  4877,   293,  2472,  4356,  2451,  2452,   282,   810,    21,
    3588,  2457,   814,  4974,    77,   810,  2462,  4563,  4979,    18,
      19,  2462,   386,   586,   647,   389,   386,    18,    19,   389,
      93,   810,  2434,   574,   809,  3768,    48,    86,  3272,   386,
     438,   647,   389,   814,  4396,  2491,  3280,   154,   582,  4362,
     647,  3285,  2498,  2522,    19,  2457,   105,   810,  2504,  2505,
    2506,  2507,  2508,  2509,  2510,   140,   810,   235,  2514,   386,
    2516,   810,   389,   230,   386,   647,  4469,   389,   100,   344,
    2526,  4394,  2528,  2529,    64,  2531,   810,  2533,  2534,  3425,
    2536,  2537,  2538,   212,    74,   809,  5568,  2543,   386,   813,
    2546,   389,  2548,  5185,  5186,   197,   647,  2553,  3614,    89,
    2556,  2557,  4775,   546,  2500,  3661,   455,  4780,   680,   108,
     810,  2567,   563,  2569,  3670,  2511,   602,  2573,   137,   691,
    2301,  2517,   386,  2304,   212,   389,   647,   810,    18,    19,
     565,   647,  5103,   152,  2590,   647,   344,   810,   546,    19,
     239,   647,    12,   810,  2600,  2601,  1881,  5072,  5073,   235,
     249,  2547,  2757,   647,  3897,  2551,  2761,   125,    61,    62,
     647,  1896,  2558,  2559,   492,   647,   386,  4008,    71,   389,
     138,   562,   500,    12,   565,    77,  5047,   810,  4008,   647,
     432,   647,   249,  5333,   386,   647,   629,   389,  4321,  3897,
     598,   810,   265,  5071,   810,   814,   197,  1932,   647,   122,
     647,   453,  4471,   810,   809,  2726,   238,   647,   275,   179,
    4533,   386,  3204,   809,   389,   647,   386,    26,   809,   389,
    3566,   629,   221,  3215,  3216,   680,   258,   802,   810,   809,
     647,   809,  2413,   802,   647,   810,   691,   565,   108,   271,
    4913,   810,   809,   495,  4917,   235,   799,   800,   801,   802,
     803,   804,   805,   806,   809,   680,    38,   127,  2714,  2311,
     228,   141,  2718,     7,    46,   188,   691,  2319,    77,   342,
    2726,   277,   810,   647,   280,    84,   814,   647,   562,  2735,
    2736,   565,    26,    26,   386,  2785,   667,   389,   669,  2734,
     647,   619,   620,   392,   810,   368,   219,   414,   810,  2904,
     809,  2757,  4975,  4042,   810,  2761,  4388,  4980,   636,  4391,
    4392,  4195,   234,   235,   809,   680,   810,   809,  2736,   436,
     647,  5158,   354,   810,   809,   647,   691,   611,   810,   199,
     810,  5481,   809,    23,   814,   237,  4075,  4076,   809,   261,
      84,    84,   810,   571,   810,    35,    61,    62,   810,   647,
     814,   810,  5444,  5445,    26,   814,    71,   430,   815,    49,
     477,   810,  4101,   810,  4875,   235,  4877,   290,   177,    84,
     810,    61,    62,   809,   441,   184,  2897,   386,   810,   100,
     389,   636,  4840,   647,   639,   386,  2842,   810,   389,   809,
    2846,   814,   212,   810,   393,   365,   366,   810,   716,   810,
     144,   371,  4008,   814,   403,   563,   810,  3753,  3754,    15,
     814,   410,    84,   810,  3469,    21,   286,   814,   810,   212,
    2155,   538,   814,   429,  4167,   810,  4027,   647,   237,   814,
     809,  2887,  2888,    39,  2879,  3490,   810,    43,  2173,  3705,
     810,  2897,  2879,  5102,   476,   647,   810,   809,  2904,   372,
     814,    57,    58,  4454,  4455,  4456,  4457,    63,   809,   532,
    4301,   363,  4082,  2198,   344,  2921,  4087,   369,  4601,  4602,
    2926,  4301,   647,   122,  2930,  2931,   125,   647,  5102,  1130,
    1131,   809,  1133,   810,  1135,  5131,   158,   810,   810,    18,
      19,   814,  2227,   237,   237,  2230,   386,  5156,  5157,   389,
     135,   810,   809,  5340,  2960,   814,   122,    61,    62,   125,
      26,  3581,   810,   322,   810,   514,   548,   238,   814,   389,
    2976,  2977,  3127,   809,  4145,   418,   801,   802,   803,   804,
     805,   806,  5156,  5157,   717,   718,   438,   258,  2994,   188,
    2985,  2997,   655,   656,   809,   647,   810,  3002,  3004,   956,
     271,  3002,   959,  3004,   363,   809,    33,   964,   809,  3004,
     369,    77,   969,   122,   809,   237,   125,  3004,    84,   809,
     219,  3050,   188,  3021,  3022,  3023,   810,   100,   322,   322,
     814,    13,   809,   122,   666,   667,  3086,   669,  3088,  3194,
     810,  3050,  3021,  3022,  3023,   803,   804,   805,   806,   319,
     320,  3057,  3050,   219,   324,   325,   810,   480,   810,  4450,
     814,    43,   611,   122,   653,   810,   125,   809,   588,   814,
    4450,  3050,  3078,   503,   504,   369,   369,  3083,   498,   188,
     562,  2366,  2367,   354,   604,   810,   809,   810,   647,  3244,
     108,   290,   158,   819,   546,   809,   647,    64,   518,   188,
     322,   810,   150,   151,   810,   814,   377,    74,   814,   809,
     219,   177,    94,   839,   141,  5543,    98,   809,   184,   810,
     593,  3127,    89,   814,   290,  4559,   852,   853,   810,   188,
     219,  5559,   814,   809,   574,  3141,  3142,  3143,   810,   809,
    3141,    21,   814,   563,   809,   565,   598,   369,   568,   167,
    4584,  3306,  3307,  2583,  2584,   810,   450,  5585,  3164,   814,
     219,   809,   141,  4184,   810,   238,   492,  4337,   814,   384,
     810,   237,  2457,   372,   814,   809,   122,   629,  4348,   599,
     141,   290,   200,   603,   809,   258,    64,   546,  3194,   810,
     809,   611,  3198,   814,  3200,   809,    74,   809,   271,  3205,
     377,   290,    47,    48,  3210,   476,   372,   647,  1337,  1338,
      37,    89,    12,  3219,   197,   810,    80,  3822,    82,   814,
     100,   141,   249,   809,  1639,  1640,   193,  3233,   810,    13,
     810,   290,   199,   653,   814,   300,   301,  3392,  3244,   565,
     380,   141,   188,   810,  3250,   810,   809,   814,   275,   814,
    3855,   809,   546,   546,   231,   810,   322,   809,  3863,   814,
     810,   125,  3417,   372,   814,  3870,  3272,   809,   235,   194,
     629,   253,  2557,   219,  3280,   809,   156,   548,  3284,  3285,
    4573,   354,   810,   372,   148,  4578,   814,   707,   115,   141,
    3021,  3022,  3023,   619,  3300,   122,   263,   363,  5295,   809,
    3306,  3307,   810,   369,   377,  2590,   814,   810,   108,   809,
     636,   814,   192,   372,   194,   193,   809,   344,   810,    37,
    4578,   199,   814,   187,   546,   810,   141,   127,   809,   814,
     809,  3337,   212,   809,    21,   629,   629,   217,   365,   366,
      27,   156,   809,   614,   290,   141,  3352,   809,   809,   331,
      59,   231,   179,  3445,   246,   810,   140,   235,   238,   814,
     600,   188,   809,   809,   809,   344,   246,   787,   788,   799,
     800,   801,   802,   803,   804,   805,   806,    64,   258,   444,
     445,   621,   622,   344,    71,   263,  3392,   141,    75,   748,
      77,   271,   219,   809,   593,   810,   276,   115,   809,   814,
     200,   419,    89,   476,   122,   285,   810,   629,  4194,   492,
     814,  3417,   810,   395,   441,   810,   814,   500,   810,   814,
    3418,   809,   814,   809,   344,  3431,   372,   593,  3434,  2714,
    3436,  5036,   521,  2718,   793,  5432,   220,  3432,   125,  3418,
     809,  3436,   492,   243,   344,   809,  3441,  3442,  3050,  3436,
     417,   809,  3447,   810,   748,   748,   809,   814,   523,   524,
     525,   179,   809,   290,  4753,   810,   480,   176,   810,   814,
     188,   180,   814,   809,   354,   548,   503,   504,  4648,  4649,
     546,  4651,   565,   809,   593,   194,   286,   809,   809,   516,
    4658,  4659,   344,   809,  5491,   249,  5493,   377,   810,   793,
     793,   219,   814,   809,   593,   810,   810,   387,   809,   814,
     814,   809,  5509,   810,   810,   565,   203,   814,   814,   809,
     809,   809,   400,   809,   503,   504,   748,   809,   355,   344,
      37,   809,   809,   809,   593,   517,   619,   620,   194,   417,
     367,   614,   503,   504,   371,   372,  3552,   565,   344,   563,
     809,   518,   809,   636,   568,   809,  5553,  5554,  3629,   197,
     246,   500,  5255,   629,  3570,   620,   377,   500,   586,   619,
     620,   793,   290,   212,   815,   439,   263,   559,   814,   166,
     809,   276,    64,   503,   504,   194,   636,   542,   562,   166,
     344,   222,    74,   611,   542,   211,   476,   611,  4494,   542,
     157,  3607,   287,   503,   504,  3611,  3612,    89,   115,   627,
     815,   767,  3618,   627,   809,   122,   772,   814,   814,   419,
     500,   330,  3617,  3629,    96,   809,   815,  3633,  3634,   809,
      48,  3637,   156,   156,   197,   111,   603,   355,   810,   653,
     518,   812,  3637,  3649,   100,  3651,   802,   593,   809,   813,
    3637,   503,   504,   371,   372,  3661,  3662,   160,   160,   160,
    3661,  3662,   818,   814,  3670,  3671,  3672,   249,   548,  3670,
    3671,  3672,   179,    48,   293,  2960,  3726,   195,   365,   366,
     160,   188,   748,   383,   371,   171,   532,  3418,   503,   504,
     377,  2976,  2977,   518,   721,   193,  3702,   708,   498,   764,
     765,     7,   263,   263,    71,    13,   633,   503,   504,   810,
     810,   193,   219,  3719,   140,  3721,    10,   814,   810,   428,
     876,   877,   602,   879,   880,   603,   809,   793,   815,   810,
     417,   501,   810,   613,   614,  4905,   892,  4907,  4908,   810,
     810,   810,   526,   527,   571,   529,   530,   531,   575,   503,
     504,   578,   810,   235,   634,  3761,   636,  3763,   809,   809,
    3761,   588,  3768,   563,   548,   565,   593,  4937,   666,   596,
     275,   377,   799,   800,   801,   802,   803,   804,   805,   806,
     708,   263,   238,   290,   614,   562,   515,    50,  4854,   457,
     458,   459,   460,   461,   462,   463,    30,  3803,   814,   599,
      30,   282,   258,    31,   287,  3811,   814,   582,   814,   496,
     814,   611,   486,    71,   732,   271,   571,   697,   273,   814,
     787,   800,   801,   802,   803,   804,   805,   806,   814,   657,
     814,   803,   988,   813,     4,  5128,   249,   815,   799,   800,
     801,   802,   803,   804,   805,   806,   252,   560,   355,   810,
     181,    21,   194,   571,   814,   194,   194,   575,   814,   546,
     578,    88,   814,    21,   814,   372,   378,   558,   136,    39,
     588,   645,   156,  1029,  5011,   593,   810,  3883,   596,   799,
     800,   801,   802,   803,   804,   805,   806,  1043,   728,    48,
     810,  3897,   653,   728,  3900,  3901,   636,   814,   354,   571,
    1056,   801,   802,   803,   804,   805,   806,   707,   502,   787,
    5047,    87,     7,   809,  3920,  3921,   603,   110,  3924,   582,
    3926,   158,   400,  3929,    74,   400,   400,   582,   136,   261,
     810,   261,   812,   400,   814,   417,   136,   400,    48,   819,
     400,   400,   400,   584,   814,   618,  5235,   799,   800,   801,
     802,   803,   804,   805,   806,   400,   618,   814,   810,   500,
     709,   491,   627,   810,   814,   809,   809,   609,   655,   656,
      57,     7,   171,  4869,   801,   802,   447,   377,   716,  5116,
    3986,   111,   809,   377,   799,   800,   801,   802,   803,   804,
     805,   806,   613,   141,     7,  4001,   228,  4003,   591,   809,
     197,   810,  5241,   799,   800,   801,   802,   803,   804,   805,
     806,   200,   810,   810,   810,  3300,  4022,   810,   705,   810,
     476,   810,   810,   810,   814,  4031,   802,   809,  5317,   810,
     810,   810,   810,   287,   287,   689,   192,   810,   810,   806,
     287,   810,   729,   814,   810,   799,   800,   801,   802,   803,
     804,   805,   806,   810,   814,   814,   814,   810,   810,   815,
     422,   748,   749,   809,   571,   815,   809,   815,   575,   810,
    1226,   578,   809,   815,   287,   814,   287,   813,   287,   814,
     814,   588,   160,   801,   802,   377,   593,   582,   634,   596,
     236,   809,   548,   814,  1250,   814,   400,   814,   582,    13,
     787,   249,   814,   582,   160,  1261,  1262,   210,   377,   197,
     455,   197,   582,   582,  1270,  1271,  1272,  1273,  1274,  1275,
     255,   432,   194,   815,   197,   815,   815,  1283,  1284,   810,
    1286,  1287,   815,   815,   120,  1291,  1292,   814,   427,  1295,
    1296,  1297,  1298,    60,  1300,  1301,  3431,   513,   614,  3434,
    4156,    21,  1308,  1309,   607,  1311,  1312,  1313,  1314,  1315,
     810,  4167,  1318,  1319,  1320,  1321,  1322,  1323,  1324,  1325,
    1326,   814,  1328,   404,   141,  1331,  1332,  4332,   194,   401,
    1336,   816,  5319,   403,  1340,  1341,  1342,   403,  4194,  4195,
    4185,   571,   571,   571,   341,  4201,   344,  1353,  1354,  1355,
    4201,   814,  1358,   668,  4359,  1361,  1362,  1363,  1364,  1365,
     815,  5504,   379,    60,  1370,   477,   263,   263,   263,   263,
     597,   809,   402,   377,   108,   672,  1382,  1383,   672,   706,
     100,   249,    21,   160,  1390,  5528,  1392,  1393,   160,   160,
     226,   160,   160,    35,   160,   160,  5504,   160,  1404,  1405,
    1406,  4257,  1408,  1409,  5547,   160,  1412,  1413,  1414,   160,
      35,  1417,  1418,  1419,  1420,  1421,  1422,  1423,  1424,    33,
    5528,   160,  1428,   160,  5567,   160,    77,  1433,   160,   160,
    5450,   160,   160,   167,   160,   160,   156,   160,   160,  5547,
     641,   160,  1448,   160,   801,   802,   160,  4303,  4327,  4305,
     160,   160,  4308,   160,   160,   160,  4312,   160,   160,  5567,
     111,   100,  3472,   708,  3474,  4321,   200,   160,   103,   160,
     160,   160,   160,   160,   194,  1481,  4332,    77,   160,   160,
     160,   160,   160,  3618,   160,  5224,   286,   122,   653,   103,
     464,   809,   212,    93,   377,   154,   810,   217,   334,  4355,
      64,   235,   338,  4359,   245,   503,   504,   158,   122,   345,
      74,   810,   245,   815,   810,   815,   158,   156,   238,   810,
     162,   810,   810,   810,  5565,    89,   246,   344,   810,  1535,
     814,   571,   815,   158,   134,   571,  1542,   162,   258,   571,
     815,   815,   809,   654,  4400,  4401,   384,   582,   814,   582,
     809,   271,   286,   188,   197,   194,   276,   809,   809,   730,
     202,   814,   212,  4419,   732,   285,   372,  1573,   727,  1575,
     432,   197,  1578,   212,   188,   814,   160,   202,   217,   335,
     222,   156,   611,   614,   235,  4441,    56,   809,   809,   554,
     426,   809,    12,   403,   455,   403,    66,   222,    73,   238,
     814,  4419,   186,   532,   491,   532,    76,   246,   532,   809,
     245,   532,   532,  4469,   263,   377,   263,   201,   809,   258,
      90,    91,    92,   614,   591,  4481,  4471,   814,   366,   193,
     214,   245,   271,   563,   354,   636,   106,   276,   563,   814,
     582,   582,   372,   450,   810,   287,   285,   810,   372,   809,
     377,   212,   814,  1659,   490,   290,   377,   377,   809,   809,
     809,   809,   287,   809,   809,   265,  5412,   387,   571,   810,
     321,   235,  1678,   472,   809,  4680,   290,   809,   809,  5550,
     414,   809,   266,   267,    56,   419,   503,   504,   339,   331,
     247,    62,   160,   161,    66,   413,   247,  4658,  4659,   263,
      21,   720,    48,  4559,    76,   751,   331,   494,  5447,  4565,
     294,   810,   363,   814,   810,   354,  1722,  4573,    90,    91,
      92,   810,  4578,  4579,  4729,   810,   809,   285,  4584,   687,
     687,   810,  4577,   201,   106,    27,    12,   372,   377,   814,
     382,   546,   342,   160,   384,   814,   214,   803,   387,   231,
     642,   282,   809,   160,   197,  4611,   476,   382,   372,   814,
    5506,   396,   810,   258,   498,   365,   366,   258,   368,   810,
     390,  4627,    64,   810,    48,   217,   418,   103,   362,    71,
     500,   497,   396,    75,   518,    77,   254,   810,   810,   814,
     160,   160,   160,   418,   403,   631,    48,    89,   809,   267,
     442,   799,   800,   801,   802,   803,   804,   805,   806,   160,
    3820,  3821,  4668,   649,   809,  3825,  4672,   442,   228,   103,
    5559,   245,   278,   815,  4680,   467,   294,   368,   548,   563,
     430,   111,   416,   125,   568,   162,   400,   476,   111,   809,
     400,   809,   467,  5311,   729,   809,  5585,   809,   809,   440,
     809,  3861,   586,   417,   125,   810,   383,  3867,  3868,  3869,
     403,   500,  3872,   333,   565,   599,   801,   582,   377,   511,
     809,   515,   377,  4729,   372,   636,   810,   611,   245,    15,
     350,   400,   602,   197,   810,   432,   511,  4022,   582,    21,
     358,   810,   810,   627,   614,   546,   810,   810,   210,   377,
     542,   246,   810,   269,   814,   258,   815,  5375,  4764,   548,
    4766,  4767,   563,   814,   634,  4760,   636,   542,   197,   653,
     562,   819,  5390,   565,   258,   258,   819,    63,   819,   403,
     160,  4852,   532,    18,    19,  5403,   126,   697,   277,    48,
    4796,   403,    48,    48,   153,    48,   803,   477,    35,  4805,
     809,    35,  1958,   625,   729,   608,  1962,   125,   593,   263,
     263,   333,    64,   602,  1970,   985,  1972,   203,   263,    35,
     372,   263,   809,   707,   372,   614,   415,   697,   350,   593,
     377,   377,   799,   800,   801,   802,   803,   804,   805,   806,
      21,    77,   815,   809,  5462,   634,  4852,   636,   810,   515,
     487,   471,   265,  4859,  5472,   814,  2012,   810,   810,  5477,
     814,   341,   810,   810,   810,   810,   810,   810,   488,  4875,
      48,  4877,  4915,  1043,   427,   814,   387,   810,   377,   175,
     285,   116,   117,   118,   119,   120,   384,   210,    21,   147,
     565,   258,   258,  5511,   160,  5513,   405,   120,   120,    48,
    2056,  2057,  2058,   810,   788,   809,   809,    48,   697,    48,
     810,   696,   814,   387,   377,   619,   372,  5535,   636,   809,
     367,   620,    15,   365,   366,    21,    81,   510,   814,   371,
     550,   143,   696,   372,  4940,   377,   228,   403,  2094,   809,
     810,   372,   812,  2099,   814,   194,  1116,   567,   809,   819,
      21,   814,  5570,  5571,   341,   173,   810,  5575,    48,   377,
     810,   810,  2118,   263,  4970,  4971,   488,   384,   814,  2125,
     815,    21,   814,   194,  2130,   417,  2132,   160,   276,   318,
     162,   788,  2138,   810,  2140,  2141,   809,  5037,   223,   224,
     225,   226,   809,   785,   786,   673,   636,   789,   790,   791,
     792,   397,    48,   472,   149,   810,   112,   636,   810,   162,
     785,   786,   608,   136,   789,   790,   791,   792,   814,  5062,
     136,   810,   809,   812,   810,   814,   810,  5033,   550,   810,
     819,   809,   809,   573,   136,   809,   809,   809,   809,   158,
     377,  5047,   810,   537,   691,   567,   483,   814,   483,   691,
     653,   678,   691,    48,   496,    48,   534,   809,   155,    32,
     633,  5067,   554,   816,    64,   384,    64,   810,    19,   481,
    4355,   702,   810,   197,   553,   633,    32,  5083,   384,   384,
    1250,   810,   143,   134,   691,   483,   688,   701,   228,   464,
       6,   154,  5090,   377,   377,   246,   812,   171,    48,   334,
    5129,   336,   337,   338,   546,   130,   608,   633,   230,   154,
     345,   816,   292,   124,   812,  4400,  5271,   231,   702,  5274,
      54,   143,  5128,   574,  5130,   812,   372,   809,   154,   814,
     574,  5137,  5138,   215,    54,   500,   812,   154,  5144,   194,
     194,   194,   574,   454,   635,  2301,   125,   814,  2304,   377,
    5192,   386,   196,  5159,   389,  2311,  2312,   698,  3596,  5314,
    2316,   603,  3346,  2319,  3340,  5171,  2322,  3342,  4766,  4769,
    3344,  3357,  3999,  4779,  3796,  4774,  5182,  1258,  4794,  5104,
    5398,  5187,  5222,  5399,  1770,  5585,  4796,  5185,  5186,  4993,
    5543,   426,    46,  2993,  2926,  5192,  4481,  5192,  4156,  5090,
    5090,  5090,  5090,  5555,  5090,  5192,  1104,  5459,  5368,  5459,
    5260,  5090,  5218,   655,   656,  5090,  5090,  5090,  5090,  5090,
    5445,  5090,  5090,  5394,  5393,  4008,  2488,  1212,  2495,  3592,
    4450,  4301,  2715,  4471,  3442,  3441,  3447,  4252,  4894,  5342,
    5354,  4665,  5421,  5241,  5352,  5062,  2466,    35,  2583,  4029,
    4321,  3436,  4374,  4322,   489,   490,  3839,  2413,  3872,  3871,
    4694,  4377,  5241,   705,  5364,  5271,  3548,  5129,  5274,  5066,
    2503,  4980,  4913,  4975,    62,  4927,  4348,  4917,  1448,  3205,
    1931,  5287,  4467,  4672,  4014,  3122,  3420,   729,  3115,  2584,
    4746,  1110,  2584,  1744,  2374,  1707,  5294,  5295,  2583,  2376,
    3903,  2982,  3236,  1906,  3337,  2976,   748,   749,  5314,  5352,
    1881,  1481,  2957,  5311,  4172,  3618,    64,  1487,  2282,  2437,
    2146,  1030,  1383,  1029,   112,  4492,  5011,   115,  2885,  5335,
    2486,  2078,  1502,  2489,  2490,   123,  5319,  2846,  5032,  1302,
    3004,  5335,  3004,  3004,  3004,   787,  5412,  5506,  5532,  4879,
    4604,  5137,  3924,  5138,   142,  4229,  1276,  1662,  1124,  5090,
    4613,  5033,  3677,  4835,  4911,  1535,  3897,  5006,  2444,  5524,
      16,  5421,  1197,  2156,  3617,  2892,  1197,  5375,  3617,  4581,
    1660,  4191,  4564,  1489,  3615,  1197,  4573,  1193,  1743,  1197,
    2359,   999,  5390,  2914,  1620,  2360,   631,  3300,  2254,  1194,
    2255,   189,  3621,  5332,  4282,  5403,  4655,  5411,  5547,  5567,
    4533,  4882,   647,   648,   649,  4394,  4578,   205,  3142,  3352,
    4465,  1386,  2304,  5327,  3050,    43,  2319,  1571,    43,  1569,
    2299,  2297,    39,  2960,  5432,  1015,  3110,  1702,  4849,  2726,
    5016,  1481,  1018,  2727,  1186,    11,  5444,  5445,  2604,  1531,
      11,  5343,  4017,  3911,  5185,  5186,  4411,  4468,  5464,  4789,
    1258,  3914,    -1,    -1,  5462,  5471,    -1,  1258,    -1,    -1,
    1258,    -1,   260,    -1,  5472,    -1,    -1,    -1,    -1,  5477,
      -1,    -1,    -1,    -1,    -1,    -1,   772,    -1,  5090,    -1,
      -1,   279,    -1,  5491,    -1,  5493,    -1,    -1,  5504,    -1,
      -1,    -1,    -1,    -1,  5510,    -1,    -1,    -1,    -1,  5515,
    5241,  5509,    -1,  5511,    -1,  5513,   802,    -1,  5524,    -1,
      -1,    -1,  5528,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   818,    -1,  1704,  1705,  1706,  5535,    -1,    -1,
      -1,  5547,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5559,    -1,  5553,  5554,    -1,   346,   347,
     348,  5567,    -1,  5294,  5295,   353,    -1,    -1,   356,    -1,
    5565,    -1,  5570,  5571,  4859,    -1,    -1,  5575,  5565,  5585,
    5311,    -1,    -1,  5185,  5186,    -1,  2742,    -1,   116,   117,
     118,   119,   120,    -1,   880,  2751,  2752,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2772,  2773,    -1,  2775,
     408,   409,  2778,  2779,  2780,  2781,  2782,    -1,    -1,  2785,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2794,    -1,
      -1,    -1,    -1,  2799,  5375,  2801,   434,  2803,  2804,    -1,
    2806,  2807,    -1,    -1,    -1,  2811,  2812,  2813,    -1,  5390,
      -1,  2817,  2818,  2819,    -1,  2821,    -1,  2823,    -1,  2825,
      -1,  2827,  5403,  2829,    -1,    -1,    -1,    -1,  2834,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5294,  5295,  2850,   223,   224,   225,   226,    -1,
      -1,  5432,   988,    -1,    -1,    -1,    -1,    -1,    -1,  5311,
      -1,    -1,    -1,  5444,  5445,  2871,    -1,  2873,    -1,  2875,
     508,    -1,    -1,  2879,    -1,    -1,    -1,    -1,    -1,  2885,
    2886,  5462,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5472,    -1,  1029,    -1,    -1,  5477,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5491,    -1,  5493,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5375,    -1,    -1,    -1,    -1,  5509,    -1,
    5511,    -1,  5513,    -1,    -1,    -1,    -1,    -1,  5390,    -1,
     578,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5403,    -1,    -1,  5535,    -1,   334,    -1,   336,   337,
     338,    -1,    -1,    -1,    -1,  2971,    -1,   345,   606,    -1,
      -1,    -1,  5553,  5554,    -1,    -1,    -1,    -1,    -1,    -1,
    5432,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5570,
    5571,    -1,  5444,  5445,  5575,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5462,   649,    -1,    -1,    -1,  3021,  3022,  3023,    -1,    -1,
    5472,    -1,    -1,    -1,    -1,  5477,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5491,
      -1,  5493,    -1,    -1,  3050,    -1,    -1,    -1,   426,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5509,    -1,  5511,
      -1,  5513,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3076,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3086,    -1,  3088,  5535,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5553,  5554,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   489,   490,    -1,    -1,    -1,    -1,    -1,  5570,  5571,
      -1,    -1,    -1,  5575,    -1,  1261,  1262,    -1,    -1,  3135,
      -1,    -1,    -1,    -1,  1270,  1271,    -1,    -1,  1274,  1275,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1283,  1284,    -1,
    1286,  1287,    -1,    -1,    -1,  1291,    -1,    -1,    -1,  1295,
    1296,  1297,  1298,    -1,  1300,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1308,  1309,    -1,  1311,  1312,    -1,    -1,    -1,
      -1,    -1,  1318,    -1,    -1,  1321,  1322,  1323,  1324,  1325,
    1326,    -1,  1328,    -1,    -1,  1331,  1332,    -1,    -1,    -1,
    1336,    -1,    -1,    -1,  1340,  1341,  1342,    -1,  2228,  2229,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1353,  1354,  1355,
      -1,    -1,    -1,    -1,    -1,  1361,  1362,  1363,  1364,  1365,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1382,  1383,    -1,    -1,
      -1,    -1,    -1,   631,  1390,    -1,  1392,  1393,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     648,   649,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2301,    -1,    -1,  2304,    -1,  1774,    -1,  1776,  1777,
      -1,    -1,    -1,  1781,  1782,    -1,    -1,  1433,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1796,    -1,
    2330,  1799,  1800,    -1,  1802,    -1,    -1,  1805,  1806,  1807,
    1808,    -1,    -1,    -1,  1812,    -1,    -1,    -1,    -1,  1817,
      -1,    -1,    -1,    -1,  1822,  1823,  1824,  1825,  1826,    -1,
      -1,    -1,  1830,  1831,    -1,    -1,    -1,    -1,  1836,    -1,
    1838,  1839,  1840,    -1,  1842,  1843,    -1,  1845,    -1,    -1,
    1848,    -1,    -1,  1851,  1852,  1853,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    21,    -1,    -1,    -1,    -1,    26,
      27,    28,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2413,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1542,    -1,    -1,    -1,
      -1,    -1,  3418,    -1,    -1,    -1,    63,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      77,    -1,    -1,    -1,    -1,    -1,    83,    84,    -1,  1575,
      87,    -1,  1578,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3456,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3464,    -1,
      -1,    -1,    -1,  2483,   111,    -1,    -1,  2487,    -1,    -1,
      -1,    -1,  2492,    -1,    -1,    -1,    -1,    -1,   125,    -1,
      -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3501,  3502,    -1,  2518,  2519,
    2520,  2521,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   156,
      -1,   158,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3527,    -1,  1659,    -1,    -1,    -1,    -1,    -1,    -1,
    2550,  3537,    -1,  3539,    -1,  3541,    -1,    -1,    -1,    -1,
      -1,    -1,  1678,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2574,  2575,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3574,    -1,
      -1,    -1,    -1,  3579,    -1,  3581,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   231,    -1,  1722,    -1,   235,    -1,
      -1,    -1,    -1,    -1,    -1,   242,    21,    -1,    -1,    -1,
      -1,    26,    27,    28,    -1,    -1,    -1,    -1,    -1,  3615,
      -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   275,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    63,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3652,    -1,  3654,    -1,
      -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    83,    84,
      -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   321,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   111,  3693,    -1,    -1,
      -1,    -1,   339,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     125,    -1,    -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3726,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   156,    -1,   158,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,    -1,    -1,
      -1,    -1,    -1,   400,    -1,    -1,   403,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3802,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,   455,    -1,
     235,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,    -1,
      -1,    -1,  1958,    -1,    -1,    -1,  1962,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   482,  1972,   262,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   492,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   538,   539,   540,   541,    -1,   321,    -1,    -1,   546,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   339,    -1,   563,  2405,   565,   566,
    2056,  2057,  2058,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    34,    35,    -1,    -1,    -1,    -1,
      40,    -1,    42,    -1,    44,    45,    -1,    -1,    -1,    -1,
      -1,    -1,  2972,    -1,    -1,   602,    -1,    -1,    -1,    -1,
      -1,    -1,    62,  2099,    -1,    -1,    -1,    -1,    -1,   394,
      -1,    -1,   619,    -1,    -1,   400,    -1,    -1,   403,    -1,
      -1,    -1,  2118,    -1,    -1,    -1,    -1,    -1,    -1,   636,
      -1,    -1,    -1,    -1,  2130,    -1,  2132,    -1,    -1,  4005,
    4006,  3021,  3022,  3023,    -1,    -1,    -1,    -1,  2496,    -1,
      -1,    -1,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   123,    -1,    -1,    -1,    -1,    -1,    -1,
     455,    -1,    -1,    -1,    -1,  2523,    -1,    -1,    -1,    -1,
    4046,    -1,   142,    -1,    -1,  3065,    -1,    -1,    -1,    -1,
      -1,    -1,  2540,    -1,    -1,    -1,    -1,   482,    -1,   159,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   492,    -1,    -1,
      -1,    -1,    -1,  4079,    -1,  4081,    -1,   724,  4084,  4085,
      -1,  4087,    -1,    -1,    -1,    -1,    -1,   187,    -1,   189,
    2578,  2579,  4098,    -1,    -1,    -1,    -1,  4103,  2586,    -1,
    4106,   748,   749,  4109,  4110,   205,   206,    -1,    -1,    -1,
      -1,    -1,    -1,   538,   539,   540,   541,    -1,    -1,    -1,
      -1,   546,    -1,    -1,    -1,  4131,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3155,    -1,    -1,   563,  4145,
     565,   566,    -1,    -1,    -1,    -1,   793,   247,  3168,    -1,
    3170,  3171,  3172,  3173,    -1,  3175,  3176,    -1,    -1,    -1,
     260,    -1,   809,    -1,    -1,   812,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2312,   602,    -1,   279,
    2316,    -1,    -1,    -1,    -1,  4191,    -1,    -1,   288,   289,
      -1,   291,    -1,    -1,   619,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   636,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4226,  4227,    -1,    -1,    -1,  3245,    -1,   327,   328,   329,
      -1,    -1,    -1,  4239,    -1,    -1,    -1,    -1,  3258,    -1,
    2728,    -1,    -1,    -1,    -1,    -1,   346,   347,   348,    -1,
      -1,    -1,    -1,   353,    -1,    -1,   356,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   374,   375,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   724,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4313,   408,   409,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   748,   749,    -1,    -1,    -1,    -1,  3349,
      -1,  3351,    -1,    -1,   434,    -1,    -1,    -1,    -1,    -1,
    3360,  3361,  3362,  3363,    -1,    -1,    -1,    -1,    -1,  3369,
    3370,  3371,  3372,  3373,  3374,    -1,  3376,  3377,  3378,  3379,
      -1,    -1,  3382,    -1,  3384,    -1,    -1,    -1,   793,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   809,    -1,    -1,   812,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   496,    -1,  3418,    -1,
     500,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4416,  4417,   512,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4448,  4449,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2604,    -1,
      -1,    -1,   572,    -1,    -1,   575,    -1,    -1,   578,   579,
     580,   581,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    14,    -1,    -1,    17,
      -1,    -1,    26,    27,    28,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,   621,   622,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    50,    51,    -1,    -1,    -1,    61,    62,    63,
      58,    -1,    -1,    -1,    -1,    63,    64,    71,    -1,   649,
      -1,    -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    83,
      84,    79,    -1,    87,    -1,    -1,    -1,    -1,  4574,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    99,    -1,    -1,    -1,    -1,    -1,   111,    -1,  4595,
      -1,  4597,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   125,    -1,   121,    -1,   129,  2742,    -1,    -1,    -1,
      -1,    -1,    -1,   131,   132,  2751,  2752,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   143,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   158,    -1,  2772,  2773,   156,  2775,
      -1,    -1,  2778,  2779,  2780,  2781,  2782,    -1,    -1,    -1,
      -1,    -1,   170,    -1,    -1,    -1,    -1,    -1,  2794,    -1,
      -1,    -1,    -1,  2799,  3152,  2801,  3154,  2803,  2804,    -1,
    2806,    -1,   190,    -1,    -1,  2811,  2812,  2813,    -1,    -1,
      -1,  2817,  2818,  2819,    -1,  2821,    -1,  2823,    -1,  2825,
     208,  2827,   210,  2829,    -1,    -1,    -1,   215,  2834,    -1,
     218,    -1,    -1,    -1,  4710,    -1,    -1,    -1,    -1,    -1,
      -1,   235,    -1,    -1,   814,   233,  3736,    -1,   242,    -1,
      -1,    -1,    -1,   241,    -1,    -1,   244,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4743,   262,    -1,
      -1,    -1,    -1,  2879,    -1,    -1,   264,    -1,    -1,  2885,
    3770,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   281,    -1,    -1,    -1,   285,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   321,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4819,    -1,   339,  4822,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4835,
      -1,    -1,    -1,  3321,    -1,  2971,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,
     394,    -1,    -1,    -1,    -1,    -1,  4882,    -1,    -1,   403,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   414,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   425,  3396,  3397,
    3398,  3399,  3932,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   447,
      -1,    -1,   450,    -1,   452,    -1,    -1,   455,    -1,    -1,
    3076,    -1,    -1,    -1,    -1,    -1,    -1,   465,   466,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   475,   482,   477,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,    -1,
      -1,    -1,    -1,    -1,   492,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   500,    -1,  4004,    -1,    -1,   505,   506,   507,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3135,
    5006,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   538,   539,   540,   541,    -1,    -1,
     538,    -1,   546,    -1,    -1,    -1,    -1,   545,    -1,    -1,
      -1,  5037,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   563,
      -1,    -1,   566,    -1,    -1,    -1,    -1,   565,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   589,    -1,    -1,    -1,    -1,    -1,    -1,   602,  5085,
      -1,    -1,    -1,   601,  5090,    -1,    -1,   605,    -1,    -1,
    5096,    -1,    -1,    -1,    -1,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,    -1,    -1,    -1,    -1,    -1,     7,    -1,
      -1,    -1,  5118,    12,    -1,    14,    -1,    -1,   636,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   644,    26,    27,    28,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   660,   661,   662,   663,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   675,    -1,    58,
      -1,    -1,    -1,    -1,    63,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5179,    -1,    -1,    -1,    -1,    77,  5185,
    5186,    -1,    -1,    -1,    83,    84,    -1,    -1,    87,    -1,
      -1,    -1,    -1,    -1,   712,    -1,    -1,    96,    -1,    -1,
     724,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   111,    -1,    26,    27,    28,    -1,    -1,    -1,
    4240,  4241,  5228,  4243,   748,   749,   125,    -1,    -1,    -1,
     129,    -1,    -1,    -1,   752,  5241,    -1,    -1,   137,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    63,    -1,   152,  5260,    -1,    -1,    -1,    -1,   158,
      -1,    -1,    -1,    -1,    -1,    77,    -1,    -1,    -1,   793,
      -1,    83,    84,    -1,  5280,    87,  5282,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5292,    -1,  5294,  5295,
      -1,   809,    -1,   192,    -1,    -1,    -1,    -1,    -1,   111,
      -1,    -1,    -1,    -1,    -1,  5311,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   125,    -1,    -1,    -1,   129,    -1,    -1,
    3456,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3464,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,    -1,    -1,
      -1,  4361,    -1,   242,    -1,    -1,   158,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   262,    -1,  3501,  3502,  5373,    -1,  5375,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5390,  5391,   285,    -1,    -1,    -1,
      -1,  3527,    -1,    -1,    -1,    -1,    -1,  5403,    -1,    -1,
      -1,  3537,    -1,  3539,    -1,  3541,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5421,    -1,    -1,    -1,    -1,
      -1,    -1,   321,   235,    -1,  5431,  5432,    -1,    -1,    -1,
     242,    -1,    -1,    -1,  4454,  4455,  4456,  4457,  5444,  5445,
     339,    -1,    -1,    -1,   343,  4465,    -1,    -1,    -1,    -1,
     262,    -1,    -1,    -1,    -1,    -1,  5462,    -1,    -1,  4479,
      -1,    -1,    -1,  5469,    -1,    -1,  5472,    -1,    -1,    -1,
      -1,  5477,    -1,    -1,    -1,    -1,    -1,    -1,  5484,  3615,
      -1,    -1,    -1,    -1,    -1,  5491,    -1,  5493,   387,    -1,
      -1,    -1,    -1,    -1,    -1,   394,    -1,    -1,    -1,  3987,
    3988,    -1,    -1,  5509,   403,  5511,    -1,  5513,    -1,   321,
      -1,    -1,    -1,    -1,    -1,    -1,  3652,    -1,  3654,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   339,    -1,  5535,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5553,  5554,    -1,
      -1,   450,    -1,    -1,  5560,    -1,    -1,  3693,    -1,    -1,
      -1,    -1,  5568,    -1,  5570,  5571,    -1,    -1,    14,  5575,
      -1,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   482,    -1,    -1,    -1,    -1,    -1,    -1,
      36,   403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4623,    50,    51,    -1,    -1,    -1,    -1,
      -1,    -1,    58,    -1,    -1,  4635,    -1,    63,    64,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    79,    -1,    -1,    -1,    -1,    -1,   538,
     539,   540,   541,    -1,    -1,    -1,    -1,   546,    -1,    -1,
      -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   563,    -1,  3802,   566,    -1,    -1,
     482,    -1,    -1,    -1,    -1,   121,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   131,   132,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   143,   144,    -1,
      -1,    -1,    -1,   602,    -1,  4725,  4726,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   170,    -1,   538,   539,   540,   541,
      -1,    -1,    -1,    -1,   546,    -1,    -1,   636,  4758,    -1,
     639,    -1,    -1,    -1,   190,    -1,    -1,    -1,    -1,  4769,
      -1,   563,    -1,    -1,   566,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   208,    -1,   210,    -1,    -1,    -1,    -1,   215,
      -1,    -1,   218,  4793,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,
     602,    -1,    -1,    -1,    -1,   241,    -1,    -1,   244,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   264,    -1,
      -1,    -1,    -1,    -1,    -1,   724,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   281,    -1,    -1,    -1,   285,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   748,
     749,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4889,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4371,  4372,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   793,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4922,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4046,    -1,   724,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   381,   748,   749,    -1,    -1,
      -1,    -1,    -1,  4079,    -1,  4081,    -1,    -1,  4084,  4085,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4098,    -1,    -1,    -1,    -1,  4103,   414,    -1,
    4106,    -1,    -1,  4109,  4110,    -1,    -1,    -1,    -1,   425,
      -1,   793,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4131,    -1,    -1,    -1,    -1,
      -1,   447,    -1,    -1,   450,    -1,   452,    -1,    -1,   455,
      -1,    -1,    -1,    -1,    -1,  5035,    -1,    -1,    -1,   465,
     466,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   475,
      -1,   477,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     486,    -1,    -1,    -1,    -1,    -1,   492,    -1,    -1,    -1,
      -1,    -1,  5072,  5073,   500,  4191,    -1,    -1,    -1,   505,
     506,   507,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4226,  4227,   538,    -1,    -1,    -1,    -1,    -1,    -1,   545,
      -1,    -1,    -1,  4239,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   565,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   589,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   601,    -1,    -1,    -1,   605,
      -1,     7,    -1,    -1,    -1,    -1,    12,   613,    14,    -1,
      -1,    17,    -1,   619,    -1,    -1,    -1,  4313,    -1,    -1,
      26,    27,    28,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     636,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   644,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    58,    -1,    -1,    61,    62,    63,    64,    -1,
      -1,  5241,    -1,    69,    -1,    71,    -1,    -1,    -1,   675,
      -1,    77,    -1,    -1,    -1,    -1,    -1,    83,    84,    -1,
      -1,    87,    -1,    -1,    -1,  5265,  5266,    -1,    -1,    -1,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   111,   712,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   125,
    4416,  4417,    -1,   129,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   137,   138,    -1,    -1,    -1,    -1,    -1,   144,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   152,    -1,    -1,    -1,
      -1,    -1,   158,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   169,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   192,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   809,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,   235,
      -1,    -1,     7,    -1,    -1,    -1,   242,    12,    -1,    14,
      -1,    -1,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    26,    27,    28,    -1,    -1,   262,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4923,  4924,  4925,  4574,   285,
      -1,    -1,    -1,    58,    -1,    -1,    -1,    -1,    63,    64,
      -1,    -1,    -1,    -1,    69,    -1,    -1,    -1,    -1,  4595,
      -1,  4597,    77,    -1,    -1,    -1,    -1,    -1,    83,    84,
      -1,    -1,    87,    -1,    -1,   321,    -1,    -1,    -1,    -1,
      -1,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   339,    -1,    -1,   111,   343,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     125,    -1,    -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   137,   138,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,   381,    -1,   152,    -1,    -1,
      -1,   387,    -1,   158,    -1,    -1,    -1,    -1,   394,    -1,
      -1,    -1,    -1,    -1,   169,    -1,    -1,   403,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5054,    -1,    -1,  5057,
    5058,  5059,  5060,    -1,  4710,    -1,    -1,   192,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   435,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   450,   451,   452,  4743,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,
     235,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   482,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5145,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5154,  5155,    -1,    -1,
     285,    -1,    -1,    -1,    -1,  5163,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4819,    -1,    -1,  4822,    -1,    -1,    -1,
      -1,    -1,   538,   539,   540,   541,    -1,    -1,    -1,  4835,
     546,    -1,    -1,    -1,    -1,    -1,   321,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   563,    -1,    -1,
     566,    -1,    -1,    -1,   339,    -1,    -1,    -1,   343,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   589,    -1,    -1,  4882,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   602,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   381,    -1,    -1,    -1,
      -1,    -1,   387,    -1,    -1,    -1,    -1,    -1,    -1,   394,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   403,    -1,
     636,    -1,    -1,   639,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     435,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   450,   451,   452,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   482,    -1,    -1,
    5006,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   724,   725,
     726,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   748,   749,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   538,   539,   540,   541,    -1,    -1,    -1,
      -1,   546,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   793,   563,  5085,
      -1,   566,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   589,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5118,    -1,    -1,    -1,    -1,   602,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   636,    -1,    -1,   639,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5179,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   724,
     725,   726,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   748,   749,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5280,    -1,  5282,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5292,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   793,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5373,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5391,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5431,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,  5469,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,  5484,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,  5560,   125,   126,   127,    -1,   129,
      -1,    -1,  5568,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,   192,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
      -1,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,   476,   477,   478,   479,
     480,    -1,   482,   483,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,
     590,   591,    -1,   593,   594,   595,   596,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,   615,   616,   617,   618,   619,
     620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,    -1,   675,   676,   677,   678,   679,
     680,    -1,   682,   683,   684,   685,   686,   687,   688,    -1,
     690,   691,   692,   693,   694,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,    -1,   788,   789,
     790,   791,   792,   793,   794,    -1,    -1,    -1,    -1,    -1,
      -1,   801,   802,    -1,    -1,    -1,    -1,   807,    -1,   809,
      -1,    -1,    -1,   813,    -1,    -1,    -1,   817,   818,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
     476,   477,   478,   479,   480,    -1,   482,   483,   484,   485,
     486,   487,   488,    -1,   490,   491,   492,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,    -1,   565,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,   587,   588,   589,   590,   591,    -1,   593,   594,   595,
     596,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,   623,   624,    -1,
     626,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
     636,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,    -1,   675,
     676,   677,   678,   679,   680,    -1,   682,   683,   684,   685,
     686,   687,   688,    -1,   690,   691,   692,   693,   694,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,    -1,   788,   789,   790,   791,   792,   793,   794,    -1,
      -1,    -1,    -1,    -1,    -1,   801,   802,    -1,    -1,    -1,
      -1,   807,    -1,   809,    -1,    -1,    -1,   813,    -1,    -1,
      -1,   817,   818,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    46,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,   268,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,    -1,   371,
     372,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,   476,   477,   478,   479,   480,    -1,
     482,   483,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,   583,   584,   585,    -1,   587,   588,   589,   590,   591,
      -1,   593,   594,   595,   596,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,   615,   616,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,    -1,   675,   676,   677,   678,   679,   680,    -1,
     682,   683,   684,   685,   686,   687,   688,    -1,   690,   691,
     692,   693,   694,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,    -1,   788,   789,   790,   791,
     792,   793,   794,    -1,    -1,    -1,    -1,    -1,    -1,   801,
     802,    -1,    -1,    -1,    -1,   807,    -1,   809,    -1,    -1,
      -1,   813,    -1,    -1,    -1,   817,   818,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,   476,   477,
     478,   479,   480,    -1,   482,   483,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,
     588,   589,   590,   591,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,   617,
     618,   619,   620,    -1,    -1,   623,   624,    -1,   626,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,    -1,   675,   676,   677,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,    -1,   690,   691,   692,   693,   694,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,    -1,
     788,   789,   790,   791,   792,   793,   794,    -1,    -1,    -1,
      -1,    -1,    -1,   801,   802,   803,    -1,    -1,    -1,   807,
      -1,   809,    -1,    -1,    -1,   813,    -1,    -1,    -1,   817,
     818,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,    -1,   371,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,   476,   477,   478,   479,   480,    -1,   482,   483,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,   587,   588,   589,   590,   591,    -1,   593,
     594,   595,   596,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,   615,   616,   617,   618,   619,   620,    -1,    -1,   623,
     624,    -1,   626,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
      -1,   675,   676,   677,   678,   679,   680,    -1,   682,   683,
     684,   685,   686,   687,   688,    -1,   690,   691,   692,   693,
     694,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,    -1,   788,   789,   790,   791,   792,   793,
     794,    -1,    -1,    -1,    -1,    -1,    -1,   801,   802,   803,
      -1,    -1,    -1,   807,    -1,   809,    -1,    -1,    -1,   813,
      -1,    -1,    -1,   817,   818,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
      -1,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,   476,   477,   478,   479,
     480,    -1,   482,   483,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,
     590,   591,    -1,   593,   594,   595,   596,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,   615,   616,   617,   618,   619,
     620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,    -1,   675,   676,   677,   678,   679,
     680,    -1,   682,   683,   684,   685,   686,   687,   688,    -1,
     690,   691,   692,   693,   694,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,    -1,   788,   789,
     790,   791,   792,   793,   794,    -1,    -1,    -1,    -1,    -1,
      -1,   801,   802,    -1,    -1,    -1,    -1,   807,    -1,   809,
      -1,    -1,    -1,   813,    -1,    -1,    -1,   817,   818,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,   197,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
     476,   477,   478,   479,   480,    -1,   482,   483,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,   587,   588,   589,   590,   591,    -1,   593,   594,   595,
     596,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,   623,   624,    -1,
     626,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,    -1,   675,
     676,   677,   678,   679,   680,    -1,   682,   683,   684,   685,
     686,   687,   688,    -1,   690,   691,   692,   693,   694,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,    -1,   788,   789,   790,   791,   792,   793,   794,    -1,
      -1,    -1,    -1,    -1,    -1,   801,   802,    -1,    -1,    -1,
      -1,   807,    -1,   809,    -1,    -1,    -1,   813,    -1,    -1,
      -1,   817,   818,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,   197,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,    -1,   371,
     372,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,   476,   477,   478,   479,   480,    -1,
     482,   483,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,   587,   588,   589,   590,   591,
      -1,   593,   594,   595,   596,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,   615,   616,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,    -1,   675,   676,   677,   678,   679,   680,    -1,
     682,   683,   684,   685,   686,   687,   688,    -1,   690,   691,
     692,   693,   694,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,    -1,   788,   789,   790,   791,
     792,   793,   794,    -1,    -1,    -1,    -1,    -1,    -1,   801,
     802,    -1,    -1,    -1,    -1,   807,    -1,   809,    -1,    -1,
      -1,   813,    -1,    -1,    -1,   817,   818,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,   476,   477,
     478,   479,   480,    -1,   482,   483,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,
     588,   589,   590,   591,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,   617,
     618,   619,   620,    -1,    -1,   623,   624,    -1,   626,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,    -1,   675,   676,   677,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,    -1,   690,   691,   692,   693,   694,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,    -1,
     788,   789,   790,   791,   792,   793,   794,    -1,    -1,    -1,
      -1,    -1,    -1,   801,   802,    -1,    -1,    -1,    -1,   807,
      -1,   809,    -1,    -1,    -1,   813,    -1,    -1,    -1,   817,
     818,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,    -1,   371,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,   476,   477,   478,   479,   480,    -1,   482,   483,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,   587,   588,   589,   590,   591,    -1,   593,
     594,   595,   596,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,   615,   616,   617,   618,   619,   620,    -1,    -1,   623,
     624,    -1,   626,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
      -1,   675,   676,   677,   678,   679,   680,    -1,   682,   683,
     684,   685,   686,   687,   688,    -1,   690,   691,   692,   693,
     694,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,    -1,   788,   789,   790,   791,   792,   793,
     794,    -1,    -1,    -1,    -1,    -1,    -1,   801,   802,    -1,
      -1,    -1,    -1,   807,    -1,   809,    -1,    -1,    -1,   813,
      -1,    -1,    -1,   817,   818,     5,     6,    -1,     8,     9,
      10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
      -1,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,   476,   477,   478,   479,
     480,    -1,   482,   483,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,
     590,   591,    -1,   593,   594,   595,   596,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,   615,   616,   617,   618,   619,
     620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,    -1,   675,   676,   677,   678,   679,
     680,    -1,   682,   683,   684,   685,   686,   687,   688,    -1,
     690,   691,   692,   693,   694,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,    -1,   788,   789,
     790,   791,   792,   793,   794,    -1,    -1,    -1,    -1,    -1,
      -1,   801,   802,    -1,    -1,    -1,    -1,   807,    -1,   809,
      -1,    -1,    -1,   813,    -1,    -1,    -1,   817,   818,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
     476,   477,   478,   479,   480,    -1,   482,   483,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,   587,   588,   589,   590,   591,    -1,   593,   594,   595,
     596,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,   623,   624,    -1,
     626,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,    -1,   675,
     676,   677,   678,   679,   680,    -1,   682,   683,   684,   685,
     686,   687,   688,    -1,   690,   691,   692,   693,   694,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,    -1,   788,   789,   790,   791,   792,   793,   794,    -1,
      -1,    -1,    -1,    -1,    -1,   801,   802,    -1,    -1,    -1,
      -1,   807,    -1,   809,    -1,    -1,    -1,   813,    -1,    -1,
      -1,   817,   818,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,    -1,   371,
     372,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,   476,   477,   478,   479,   480,    -1,
     482,   483,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,   587,   588,   589,   590,   591,
      -1,   593,   594,   595,   596,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,   615,   616,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,    -1,   675,   676,   677,   678,   679,   680,    -1,
     682,   683,   684,   685,   686,   687,   688,    -1,   690,   691,
     692,   693,   694,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,    -1,   788,   789,   790,   791,
     792,   793,   794,    -1,    -1,    -1,    -1,    -1,    -1,   801,
     802,    -1,    -1,    -1,    -1,   807,    -1,   809,    -1,    -1,
      -1,   813,    -1,    -1,    -1,   817,   818,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,   476,   477,
     478,   479,   480,    -1,   482,   483,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,
     588,   589,   590,   591,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,   617,
     618,   619,   620,    -1,    -1,   623,   624,    -1,   626,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,    -1,   675,   676,   677,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,    -1,   690,   691,   692,   693,   694,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,    -1,
     788,   789,   790,   791,   792,   793,   794,    -1,    -1,    -1,
      -1,    -1,    -1,   801,   802,    -1,    -1,    -1,    -1,   807,
      -1,   809,    -1,    -1,    -1,   813,    -1,    -1,    -1,   817,
     818,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,   365,    -1,   367,   368,   369,    -1,   371,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,   476,   477,   478,   479,   480,    -1,   482,   483,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,   587,   588,   589,   590,   591,    -1,   593,
     594,   595,   596,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,   615,   616,   617,   618,   619,   620,    -1,    -1,   623,
     624,    -1,   626,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
      -1,   675,   676,   677,   678,   679,   680,    -1,   682,   683,
     684,   685,   686,   687,   688,    -1,   690,   691,   692,   693,
     694,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,    -1,   788,   789,   790,   791,   792,   793,
     794,    -1,    -1,    -1,    -1,    -1,    -1,   801,   802,    -1,
      -1,    -1,    -1,   807,    -1,   809,    -1,    -1,    -1,   813,
      -1,    -1,    -1,   817,   818,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
      -1,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,   476,   477,   478,   479,
     480,    -1,   482,   483,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,
     590,   591,    -1,   593,   594,   595,   596,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,   615,   616,   617,   618,   619,
     620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,    -1,   675,   676,   677,   678,   679,
     680,    -1,   682,   683,   684,   685,   686,   687,   688,    -1,
     690,   691,   692,   693,   694,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,    -1,   788,   789,
     790,   791,   792,   793,   794,    -1,    -1,    -1,    -1,    -1,
      -1,   801,   802,    -1,    -1,    -1,    -1,   807,    -1,   809,
      -1,    -1,    -1,   813,    -1,    -1,    -1,   817,   818,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,   365,
      -1,   367,   368,   369,    -1,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
     476,   477,   478,   479,   480,    -1,   482,   483,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,   587,   588,   589,   590,   591,    -1,   593,   594,   595,
     596,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,   623,   624,    -1,
     626,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,    -1,   675,
     676,   677,   678,   679,   680,    -1,   682,   683,   684,   685,
     686,   687,   688,    -1,   690,   691,   692,   693,   694,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,    -1,   788,   789,   790,   791,   792,   793,   794,    -1,
      -1,    -1,    -1,    -1,    -1,   801,   802,    -1,    -1,    -1,
      -1,   807,    -1,   809,    -1,    -1,    -1,   813,    -1,    -1,
      -1,   817,   818,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,   365,    -1,   367,   368,   369,    -1,   371,
     372,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,   476,   477,   478,   479,   480,    -1,
     482,   483,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,   587,   588,   589,   590,   591,
      -1,   593,   594,   595,   596,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,   615,   616,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,    -1,   675,   676,   677,   678,   679,   680,    -1,
     682,   683,   684,   685,   686,   687,   688,    -1,   690,   691,
     692,   693,   694,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,    -1,   788,   789,   790,   791,
     792,   793,   794,    -1,    -1,    -1,    -1,    -1,    -1,   801,
     802,    -1,    -1,    -1,    -1,   807,    -1,   809,    -1,    -1,
      -1,   813,    -1,    -1,    -1,   817,   818,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,   492,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,   565,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,   619,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,   636,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,   699,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,    -1,
     788,   789,   790,   791,   792,   793,   794,   795,    -1,    -1,
      -1,    -1,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,   809,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
     818,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,   145,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,   699,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,    -1,   788,   789,   790,   791,
     792,   793,   794,   795,    -1,    -1,    -1,    -1,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,   809,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,   818,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,   699,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,    -1,   788,   789,   790,   791,   792,   793,   794,   795,
      -1,    -1,    -1,    -1,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,   809,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,   818,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,    60,
      -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,    -1,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,   260,
      -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,    -1,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,    -1,    -1,    -1,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,    -1,   453,   454,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,
     471,   472,   473,   474,    -1,    -1,    -1,   478,   479,   480,
      -1,   482,    -1,   484,   485,    -1,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,    -1,   539,   540,
     541,   542,    -1,    -1,    -1,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,    -1,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,    -1,
      -1,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,   635,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,    -1,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,    -1,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,    -1,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,    -1,    -1,   789,   790,
     791,   792,   793,   794,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,   814,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    37,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
     371,   372,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,   588,   589,   590,
     591,    -1,   593,   594,   595,   596,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,    -1,   788,   789,   790,
     791,   792,   793,   794,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,   813,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,   593,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,    -1,   788,   789,
     790,   791,   792,   793,   794,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,   813,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   391,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   813,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,    -1,
     788,   789,   790,   791,   792,   793,   794,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,   813,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
      -1,   788,   789,   790,   791,   792,   793,   794,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,   813,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,    -1,   788,   789,   790,   791,   792,   793,   794,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,   813,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,    -1,   788,   789,   790,   791,   792,   793,   794,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   813,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,    -1,   788,   789,   790,   791,   792,   793,
     794,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   813,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,    -1,   788,   789,   790,   791,   792,
     793,   794,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
     813,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,    -1,   788,   789,   790,   791,
     792,   793,   794,    -1,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,   810,    20,
      -1,   813,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,    -1,   788,   789,   790,
     791,   792,   793,   794,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,   813,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,    -1,   788,   789,
     790,   791,   792,   793,   794,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,   813,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,   492,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,   565,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
     619,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,   636,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
     809,   810,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,    -1,
     788,   789,   790,   791,   792,   793,   794,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,   810,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
      -1,   788,   789,   790,   791,   792,   793,   794,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,   810,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,   199,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,   235,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,   263,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,   275,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,   492,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,   565,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,   619,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
     636,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,    -1,   788,   789,   790,   791,   792,   793,   794,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,   809,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,   699,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,    -1,   788,   789,   790,   791,   792,   793,   794,   795,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,   809,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,    -1,   788,   789,   790,   791,   792,   793,   794,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,   809,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,    -1,   788,   789,   790,   791,   792,   793,   794,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,   809,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,    -1,   788,   789,   790,   791,   792,   793,   794,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,   809,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,    -1,   788,   789,   790,   791,   792,   793,   794,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,   809,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,    -1,   788,   789,   790,   791,   792,   793,   794,
       5,     6,    -1,     8,     9,    10,    11,    12,   803,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,    -1,   788,   789,   790,   791,   792,   793,   794,
       5,     6,    -1,     8,     9,    10,    11,    12,   803,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,    -1,   788,   789,   790,   791,   792,   793,   794,
       5,     6,    -1,     8,     9,    10,    11,    12,   803,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,    -1,   788,   789,   790,   791,   792,   793,   794,
       5,     6,    -1,     8,     9,    10,    11,    12,   803,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,    -1,   788,   789,   790,   791,   792,   793,   794,
      -1,    -1,    -1,    -1,    -1,    -1,     5,     6,   803,     8,
       9,    10,    11,    12,    13,    14,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      99,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,   130,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,   144,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,   210,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,   285,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,    -1,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,   440,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,   492,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,   505,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,   586,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,   608,
     609,   610,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,    -1,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    13,    14,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      99,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,   130,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,   144,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,   210,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,   285,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,    -1,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,   440,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,   492,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,   505,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,   586,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,   608,
     609,   610,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,    -1,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    14,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      99,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,   130,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,   144,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,   210,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,   285,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,    -1,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,    -1,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,   440,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,   492,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,   505,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,   586,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,   608,
     609,   610,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,    -1,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,    -1,    -1,   372,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,   520,   521,   522,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,   593,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    18,
      19,    20,    21,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,   386,    -1,    -1,
     389,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,   647,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,   160,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,   501,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
     199,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,   263,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,   372,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,   593,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,   104,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,   104,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    37,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,   371,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,   371,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    95,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,   172,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,   521,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    17,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,   197,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,   417,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
      -1,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,    -1,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,    -1,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,    -1,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,    -1,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
      -1,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,    -1,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,    -1,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,    -1,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,    -1,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,    -1,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,    -1,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,    -1,   421,   422,   423,    -1,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,    -1,
     449,    -1,   451,   452,   453,    -1,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,    -1,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,    -1,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,    -1,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,    -1,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,    -1,   421,   422,   423,    -1,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,    -1,
     449,    -1,   451,   452,   453,    -1,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,    -1,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,    -1,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,    -1,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,    -1,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,    -1,   421,   422,   423,    -1,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,    -1,
     449,    -1,   451,   452,   453,    -1,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,    -1,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,    -1,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,    -1,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,    -1,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,    -1,   421,   422,   423,    -1,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,    -1,
     449,    -1,   451,   452,   453,    -1,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,    -1,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,    -1,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,    -1,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,    -1,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,    -1,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,    -1,   421,   422,   423,    -1,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,    -1,
     449,    -1,   451,   452,   453,    -1,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,    -1,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,    -1,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,   788,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,   150,   151,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,    -1,   453,   454,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,   478,
     479,   480,    -1,   482,    -1,   484,   485,    -1,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,
     509,    -1,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
      -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,   635,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,    -1,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,   150,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,    -1,   453,   454,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,   478,
     479,   480,    -1,   482,    -1,   484,   485,    -1,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,
     509,    -1,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
      -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,   633,    -1,   635,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,    -1,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,   150,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,    -1,   453,   454,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,   478,
     479,   480,    -1,   482,    -1,   484,   485,    -1,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,
     509,    -1,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
      -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,   633,    -1,   635,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,    -1,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,    -1,   453,   454,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,   478,
     479,   480,    -1,   482,    -1,   484,   485,    -1,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,
     509,    -1,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
      -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,   635,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,    -1,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,    -1,   453,   454,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,   478,
     479,   480,    -1,   482,    -1,   484,   485,    -1,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,
     509,    -1,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
      -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,   635,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,    -1,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,    -1,   453,   454,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,   478,
     479,   480,    -1,   482,    -1,   484,   485,    -1,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,
     509,    -1,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
      -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,   635,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,    -1,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,    -1,   453,   454,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,   478,
     479,   480,    -1,   482,    -1,   484,   485,    -1,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,
     509,    -1,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
      -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,   635,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,    -1,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,    -1,   453,   454,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,   478,
     479,   480,    -1,   482,    -1,   484,   485,    -1,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,
     509,    -1,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
      -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,   635,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,    -1,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,    -1,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,    -1,   453,   454,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,   478,
     479,   480,    -1,   482,    -1,   484,   485,    -1,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,
     509,    -1,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
      -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,   635,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,    -1,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,    -1,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,    -1,   453,   454,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,   478,
     479,   480,    -1,   482,    -1,   484,   485,    -1,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,
     509,    -1,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
      -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,   635,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    -1,    -1,
     789,   790,   791,   792,   793,   794,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,    -1,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,    -1,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,    -1,   478,
     479,   480,    -1,   482,    -1,   484,   485,    -1,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,
     509,    -1,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
      -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,    35,    36,
     789,   790,   791,   792,   793,   794,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      34,    35,    -1,    -1,    61,    62,    40,    -1,    42,    -1,
      44,    45,    -1,    -1,    -1,    72,    73,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    62,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      97,    -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   109,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   123,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     157,   158,    -1,    -1,    -1,    -1,   163,    -1,   142,   166,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   176,
      -1,    -1,    -1,    -1,    -1,   159,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   198,    -1,   200,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   209,   187,   211,   189,    -1,    -1,    -1,    -1,
     194,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   205,   206,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    34,    35,    -1,    -1,    -1,    -1,    40,    -1,    42,
      -1,    44,    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    62,
      -1,    -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   282,   260,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   279,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   288,   289,    -1,   291,   315,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     123,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   142,
      -1,    -1,    -1,   327,   328,   329,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   159,    -1,    -1,    -1,
      -1,    -1,   346,   347,   348,    -1,    -1,    -1,    -1,   353,
      -1,    -1,   356,   380,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   187,    -1,   189,    -1,    -1,    -1,
     374,   375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     407,    -1,   205,   206,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   418,   419,    -1,   421,   422,   423,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   408,   409,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   443,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,
     434,    -1,    -1,    -1,    -1,    -1,    -1,   260,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   279,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   288,   289,    -1,   291,    -1,
     497,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   510,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   496,    -1,    -1,    -1,   500,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   327,   328,   329,    -1,   512,    -1,
      -1,    -1,    -1,    -1,    -1,   542,    -1,    -1,    -1,   546,
      -1,    -1,    -1,   346,   347,   348,    -1,    -1,    -1,    -1,
     353,    -1,    -1,   356,    -1,   562,    -1,    -1,   565,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   374,   375,    -1,    -1,    -1,   232,    -1,   585,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   572,    -1,
      -1,   575,    -1,    -1,   578,   579,   580,   581,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   408,   409,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   623,    -1,    -1,    -1,
      -1,    -1,    -1,   630,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   434,    -1,    -1,    -1,    -1,    -1,   621,   622,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,    -1,    -1,    -1,   649,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   496,    -1,    -1,    -1,   500,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   512,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   753,   754,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   572,
      -1,    -1,   575,    -1,    -1,   578,   579,   580,   581,   786,
      -1,    -1,   789,   790,   791,   792,    -1,   794,   444,   445,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   621,   622,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   649,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   710,   711,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   731,    -1,   733,   734,   735,
     736,   737,    -1,    -1,   740,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   750,    -1,    -1,    -1,    -1,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    14,    17,    32,    36,    50,    51,    58,    63,    64,
      79,    99,   121,   131,   132,   143,   144,   156,   170,   190,
     208,   210,   215,   218,   233,   241,   244,   264,   281,   285,
     381,   414,   425,   447,   450,   452,   455,   465,   466,   475,
     477,   486,   492,   500,   505,   506,   507,   538,   545,   565,
     589,   601,   605,   613,   619,   636,   644,   660,   661,   662,
     663,   675,   712,   752,   809,   821,   822,   825,   826,   827,
     828,   829,   831,   836,   839,   892,   893,   894,   895,   897,
     900,   923,   945,   952,   953,  1192,  1193,  1195,  1197,  1199,
    1202,  1204,  1205,  1206,  1207,  1208,  1210,  1211,  1246,  1247,
    1255,  1256,  1259,  1272,  1274,  1278,  1281,  1282,  1286,  1288,
    1293,  1297,  1303,  1304,  1305,  1306,  1307,  1308,  1309,  1314,
    1315,  1441,  1474,  1475,  1476,  1477,  1478,  1479,  1480,  1481,
    1482,  1483,  1484,  1485,  1486,  1487,  1488,  1489,  1490,  1498,
    1499,  1520,  1521,  1525,  1529,  1535,  1536,  1537,  1538,  1539,
    1540,  1541,  1542,  1543,  1544,  1545,  1546,  1547,  1548,  1549,
    1550,  1551,  1552,  1553,  1554,  1555,  1556,  1557,  1558,  1559,
    1560,  1561,  1562,  1563,  1564,  1565,  1566,  1567,  1568,  1569,
    1570,  1571,  1572,  1573,  1574,  1575,  1576,  1577,  1578,  1579,
    1591,  1592,  1594,  1598,  1607,  1617,  1621,  1623,  1624,  1694,
    1696,  1698,  1720,  1727,  1729,  1730,  1731,  1733,  1737,  1739,
    1765,  1771,  1772,  1773,  1774,  1810,  1817,  1818,  1820,  1821,
      12,   108,   127,   200,   243,   286,   419,   498,   563,   565,
     599,   611,   707,  1784,  1785,  1786,  1789,   282,   370,  1287,
    1766,   571,  1669,   235,     5,     6,     8,     9,    10,    11,
      12,    15,    20,    23,    25,    26,    27,    28,    29,    30,
      32,    36,    40,    43,    44,    45,    47,    49,    50,    53,
      56,    57,    59,    60,    61,    63,    65,    66,    67,    68,
      69,    70,    72,    73,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    87,    88,    90,    91,    92,
      93,    94,    98,   103,   106,   110,   111,   112,   115,   120,
     121,   126,   127,   129,   135,   136,   137,   138,   139,   143,
     146,   147,   148,   152,   154,   155,   157,   158,   159,   162,
     163,   165,   166,   167,   168,   169,   170,   173,   174,   175,
     176,   177,   180,   181,   183,   184,   185,   186,   187,   190,
     191,   195,   196,   198,   202,   204,   205,   206,   207,   209,
     211,   215,   216,   218,   221,   222,   226,   227,   228,   229,
     232,   233,   234,   237,   242,   243,   244,   248,   252,   253,
     255,   256,   260,   262,   265,   266,   269,   272,   273,   279,
     280,   282,   284,   286,   287,   295,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   315,   316,   317,   319,   320,   321,   322,
     324,   325,   330,   331,   332,   333,   334,   335,   338,   339,
     341,   343,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   356,   357,   360,   361,   362,   363,   364,   368,   369,
     373,   375,   376,   378,   379,   380,   383,   393,   394,   395,
     397,   399,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   412,   414,   415,   416,   418,   420,   421,   422,
     423,   424,   426,   427,   428,   431,   435,   436,   438,   439,
     442,   443,   444,   445,   446,   448,   449,   451,   452,   453,
     456,   457,   458,   459,   460,   461,   462,   463,   465,   467,
     468,   470,   471,   472,   474,   477,   478,   479,   480,   482,
     484,   485,   486,   487,   488,   490,   491,   495,   496,   497,
     498,   502,   506,   508,   509,   510,   511,   513,   514,   515,
     516,   517,   523,   524,   525,   527,   530,   533,   535,   537,
     538,   539,   540,   541,   542,   545,   546,   549,   550,   551,
     552,   553,   554,   557,   558,   559,   560,   562,   563,   566,
     567,   568,   569,   572,   573,   575,   576,   577,   578,   584,
     585,   589,   590,   591,   594,   595,   597,   598,   600,   601,
     604,   607,   609,   611,   612,   618,   620,   623,   627,   629,
     630,   631,   632,   639,   640,   641,   643,   644,   645,   646,
     649,   652,   653,   654,   655,   656,   658,   667,   668,   669,
     671,   672,   673,   675,   678,   680,   687,   688,   691,   693,
     695,   696,   700,   701,   702,   703,   704,   705,   706,   707,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   745,   746,   747,   748,   749,   750,
     751,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   788,   789,   790,   791,   792,
     793,   794,   917,  1666,  1675,  1685,  1686,  1687,  1689,  1690,
    1693,   315,   456,   838,   562,   565,  1723,  1723,   640,  1767,
     108,   199,   286,   389,   498,   518,   563,   568,   599,   603,
     611,   653,   707,   787,   788,  1168,  1169,  1494,  1781,  1785,
    1786,  1787,  1788,  1789,     8,    23,    29,    35,    37,    38,
      39,    41,    54,    55,    61,    62,    69,    72,    96,    97,
     102,   104,   107,   108,   113,   114,   115,   120,   122,   125,
     171,   178,   179,   188,   195,   205,   207,   213,   219,   226,
     230,   241,   245,   271,   279,   290,   318,   323,   334,   338,
     340,   344,   345,   346,   347,   348,   355,   365,   366,   367,
     371,   372,   396,   408,   409,   411,   426,   454,   455,   474,
     476,   483,   484,   490,   543,   544,   551,   555,   556,   561,
     571,   575,   576,   577,   578,   587,   588,   589,   593,   596,
     611,   615,   616,   617,   619,   624,   626,   631,   632,   649,
     664,   665,   670,   676,   677,   679,   682,   683,   684,   685,
     686,   690,   692,   694,   745,   783,   801,   802,   803,   807,
     809,   813,   817,   818,  1141,  1307,  1325,  1326,  1329,  1330,
    1331,  1333,  1337,  1340,  1342,  1343,  1345,  1346,  1347,  1354,
    1355,  1356,  1379,  1380,  1645,  1647,  1650,  1651,  1652,  1653,
    1654,  1655,  1658,  1661,  1663,  1666,  1675,  1776,  1778,   108,
     167,   200,   235,   286,   419,   498,   518,   563,   586,   599,
     611,   627,   653,   707,   788,  1494,  1675,  1287,   103,   535,
     954,    13,    14,    99,   130,   144,   167,   170,   183,   210,
     235,   241,   274,   285,   420,   424,   440,   448,   456,   492,
     505,   506,   557,   586,   608,   610,  1666,  1669,  1676,  1680,
    1687,  1690,  1691,  1693,  1743,  1744,  1664,  1675,   837,   565,
     128,   220,   293,  1500,   406,   658,    87,   427,  1622,   111,
     235,   646,  1625,   243,   562,  1721,  1723,  1287,  1675,  1618,
     486,   611,  1723,  1287,   128,   293,  1501,  1524,   652,  1608,
     521,   942,   946,   947,  1675,    13,   424,  1743,  1767,  1675,
      13,   140,   220,   526,   527,   529,   530,   531,   548,  1316,
    1317,  1318,  1779,    61,    62,   125,   209,   282,   351,   403,
     497,   584,   652,   653,   671,   707,   813,  1143,  1666,  1678,
    1686,  1687,  1689,  1690,  1692,  1695,  1705,  1710,  1711,    35,
      36,    61,    72,    97,    99,   109,   158,   163,   166,   176,
     198,   200,   209,   211,   282,   315,   380,   407,   418,   419,
     422,   423,   443,   497,   510,   546,   565,   630,   753,   754,
     786,   789,   790,   791,   792,   794,  1143,  1254,  1581,  1582,
    1584,  1585,  1586,  1706,   946,   204,   510,   584,  1254,   204,
    1254,  1664,  1675,   565,  1530,   406,   658,   243,  1723,  1728,
    1675,   483,  1510,  1514,   659,  1442,  1443,  1675,    32,    79,
     154,   414,   436,   477,   538,  1813,  1333,  1675,  1666,   400,
    1059,   809,  1777,  1778,   243,   282,  1329,  1304,  1305,  1307,
    1441,     0,   156,   823,   414,   104,   274,   611,  1219,  1669,
    1675,  1679,  1681,  1682,  1755,  1757,   126,   403,   611,  1248,
    1249,  1250,  1251,  1252,  1253,   194,   246,   285,  1319,  1320,
    1472,   387,   602,  1454,  1455,   276,   602,  1455,  1460,  1472,
    1306,  1307,   130,   608,    17,   195,  1595,  1596,  1664,   160,
    1223,  1675,   160,   917,   137,   152,   448,   479,  1732,   212,
     917,  1679,  1675,  1664,   563,   230,  1493,   212,   167,  1201,
    1784,  1723,  1767,  1294,  1295,  1664,   809,   924,   815,   185,
     517,   582,  1491,  1664,  1491,    19,  1768,   230,  1090,   235,
     212,   455,  1679,   235,   716,  1675,   563,   263,   787,  1090,
    1090,   212,   263,   603,  1090,   235,   565,  1780,  1780,  1784,
    1789,   809,   809,   809,  1340,   809,   809,   809,  1329,  1392,
     809,   809,   809,   809,   809,   809,   809,   809,  1328,  1328,
     809,  1128,   809,   809,   809,   571,   809,   809,   809,  1777,
     809,   809,   809,   809,   809,   809,   809,   809,   809,  1329,
     809,   809,   809,  1390,  1391,  1661,  1675,   809,   809,   809,
     809,   809,   809,   809,   809,   809,  1329,  1128,   809,   809,
     809,   809,   809,   809,   809,   809,   809,   809,   809,   809,
     809,   809,   809,   809,  1128,   571,   809,   809,   809,   571,
     809,   809,   809,    37,   219,   571,   809,  1328,  1128,  1128,
     809,   809,   809,   809,   809,   809,   809,   809,   809,   809,
     809,   809,   809,   809,   809,   809,   809,   809,   809,   809,
     809,   809,  1340,  1340,  1340,   619,  1305,  1307,  1329,   813,
    1381,  1679,  1675,   814,    18,    19,    21,   386,   389,   571,
     647,  1327,  1334,  1335,  1674,  1675,   160,   161,   201,   214,
     254,   267,   294,   358,  1338,    33,   141,   249,   275,   344,
     365,   366,   441,   503,   504,   516,   721,   799,   800,   801,
     802,   803,   804,   805,   806,  1336,  1340,    71,   388,   571,
    1670,   259,   651,   809,   815,  1493,  1493,  1493,  1675,   212,
    1493,  1493,   716,  1675,  1493,   563,  1493,  1493,  1493,   212,
    1493,  1723,   832,  1599,   135,   418,  1742,   480,   480,   563,
     568,   611,   627,   653,   653,   384,   809,  1758,   562,   377,
    1758,    67,   510,  1758,   109,   627,  1758,   813,  1758,   377,
     582,   814,   380,    68,   432,   815,  1679,   197,   231,  1242,
    1675,  1669,  1819,  1329,   246,    85,   293,  1627,   194,   194,
    1722,  1723,   197,   315,   785,  1581,  1619,  1675,  1290,  1682,
    1289,  1723,   246,  1502,  1493,  1610,   315,   510,   753,   785,
    1609,  1611,   620,   943,   500,   948,  1742,   377,   197,   377,
     582,  1768,  1325,  1318,   500,   653,   815,    35,   125,   160,
     501,  1144,  1511,  1679,   194,   582,  1511,   255,   432,  1712,
    1713,  1715,  1717,    13,   125,   364,  1680,  1683,  1751,   212,
     813,  1679,    35,   125,  1146,  1147,  1679,   815,   125,   584,
    1701,  1709,  1711,   814,  1702,  1511,   166,   275,   634,  1439,
    1590,   809,   108,   167,   200,   419,   565,   586,   611,   627,
    1590,    13,  1580,  1679,  1459,  1460,   197,   249,  1583,  1587,
     198,    70,   542,   194,   542,   562,    70,   542,    13,    43,
      94,    98,   253,   331,   395,   517,   559,  1531,  1532,  1533,
     166,   222,   542,  1459,  1590,  1590,  1590,  1590,  1590,   211,
    1590,   542,   287,   157,   421,   585,   234,   235,   261,  1167,
      73,   562,   542,   623,   948,   432,   636,  1260,  1261,  1262,
     446,   533,  1267,  1268,  1269,  1267,  1664,  1675,  1819,   809,
     814,  1442,   814,   809,  1444,    37,   219,  1646,  1670,  1812,
    1812,  1812,    96,  1811,  1812,  1812,   156,   815,   809,    48,
     156,  1307,   156,   197,   111,   156,   810,   810,  1319,   810,
     812,  1675,  1328,   809,   138,   228,   813,   125,   138,   228,
    1753,   464,   814,  1760,   160,   160,   160,   814,   502,   608,
    1321,   146,   391,   813,  1470,  1471,  1473,  1679,   249,  1320,
    1472,  1319,    48,    13,   140,  1775,  1459,   290,   372,   593,
    1461,  1462,  1647,  1675,  1775,  1459,  1454,  1455,  1460,   231,
     293,   428,  1527,  1528,  1524,   195,  1595,   160,   194,  1303,
    1498,  1499,  1520,  1525,  1593,  1597,  1646,  1675,   332,   569,
     595,  1194,  1682,  1198,  1675,  1675,   746,   784,  1679,  1675,
    1196,   383,     7,    26,    84,   144,   237,   322,   369,   450,
     629,   748,   793,  1025,  1026,  1039,  1040,  1041,  1042,  1048,
    1050,  1051,  1052,  1053,  1582,     7,    12,    14,    17,    27,
      28,    58,    63,    64,    69,    77,    83,    84,    87,    96,
     111,   125,   129,   137,   138,   144,   152,   158,   169,   192,
     233,   235,   242,   262,   285,   321,   339,   343,   381,   387,
     394,   403,   435,   450,   451,   452,   482,   538,   539,   540,
     541,   546,   563,   566,   589,   602,   636,   639,   724,   725,
     726,   748,   749,   793,  1041,  1091,  1094,  1096,  1097,  1150,
    1224,  1225,  1227,  1228,  1230,  1232,  1233,  1234,  1235,  1237,
    1239,  1675,   171,  1675,   917,   532,  1790,  1791,  1200,  1491,
     249,   814,   235,   263,   400,  1165,  1300,  1301,  1329,  1388,
    1389,  1675,   841,   840,   176,   428,   814,  1273,    59,   176,
     180,   194,   330,   428,  1283,  1284,  1285,    57,   368,   368,
     447,  1769,  1336,  1675,  1675,  1675,   518,   193,  1675,   708,
       7,  1019,  1675,   263,  1682,  1754,  1756,  1751,  1675,   263,
    1675,  1675,  1090,    11,   167,   200,   419,   586,   904,  1783,
    1791,  1797,  1799,  1800,  1805,   200,   904,  1782,  1791,  1797,
    1800,  1805,  1780,  1329,  1329,    13,   140,  1386,  1437,  1386,
    1386,  1386,   633,  1394,  1329,  1329,  1389,  1389,  1329,  1329,
     140,  1386,  1437,   810,   372,   810,   810,  1329,  1329,  1329,
    1329,  1661,   116,   117,   118,   119,   120,   223,   224,   225,
     226,   334,   336,   337,   338,   345,   426,   489,   490,   631,
     648,   649,  1432,  1433,  1329,  1388,   112,   115,   575,   578,
    1434,   140,  1382,  1329,  1329,  1329,  1329,  1432,  1329,  1389,
    1391,    10,   814,   815,   140,  1386,  1329,  1329,   140,  1386,
    1329,  1329,  1389,  1389,  1389,  1329,  1389,  1333,  1329,  1329,
    1329,  1329,  1329,  1329,   810,  1329,  1386,  1386,  1329,  1329,
     140,  1386,  1329,  1433,  1433,  1329,    46,   268,   583,  1329,
    1329,   810,  1662,  1663,  1675,  1386,  1386,  1329,  1329,  1329,
    1386,  1386,  1389,   810,   810,  1329,  1329,  1329,  1329,  1329,
     813,  1358,  1359,  1647,  1654,  1675,   810,   810,   810,  1340,
     140,  1386,  1319,   810,   814,   209,   282,   497,  1707,   501,
    1329,  1326,  1674,  1675,  1329,  1329,  1329,   179,   371,   588,
     604,  1336,    13,    20,  1331,  1339,  1333,  1333,   809,  1777,
    1340,  1333,  1333,  1333,  1333,   275,   666,  1332,  1333,  1333,
     245,  1333,   245,  1333,  1333,  1333,  1333,  1333,    33,   249,
     275,   441,  1679,  1340,  1670,  1670,  1329,  1351,  1352,  1353,
     803,  1675,  1675,   917,  1675,   377,  1675,   917,  1679,   708,
    1048,  1050,  1495,  1496,  1497,   917,  1675,  1682,  1750,  1491,
    1751,  1675,  1675,  1493,   614,   833,    35,   158,   162,   202,
     222,   287,   331,   382,   418,   442,   467,   511,   542,   785,
     786,   789,   790,   791,   792,  1600,  1604,  1605,  1723,    86,
     813,   955,   956,   957,   958,  1675,  1740,   562,  1675,  1759,
    1682,  1679,   200,   419,   565,  1741,  1750,  1744,    21,  1435,
    1436,   186,   362,  1675,  1734,  1675,  1819,  1502,   515,   814,
      50,   282,  1626,    30,    30,  1664,  1724,  1725,  1491,   813,
     830,  1669,    31,   287,   814,   582,  1291,  1292,  1664,  1491,
    1664,  1675,  1614,  1612,  1613,   814,  1670,    56,    66,    76,
      90,    91,    92,   106,   333,   350,   488,   550,   567,   949,
     951,   814,  1738,  1682,  1750,  1741,   486,  1770,  1769,   197,
    1310,  1311,  1472,    13,   364,  1751,  1675,    71,  1149,  1329,
    1682,   732,   571,  1672,   273,   379,   642,   814,  1716,   814,
    1714,   657,  1697,   813,   814,  1675,   209,   282,   497,   652,
     671,  1708,  1511,  1675,  1712,  1702,  1511,  1703,  1704,  1705,
    1710,    13,    35,   125,   192,   377,   483,   708,  1329,  1719,
     249,  1588,  1670,  1329,   803,  1090,   917,   917,   917,  1664,
     917,  1682,  1664,   287,   349,   542,  1590,  1675,   917,  1590,
    1682,  1583,   917,  1590,   252,   560,   181,   194,  1534,   814,
    1588,  1583,   194,   194,   891,  1583,  1587,  1587,  1583,  1590,
    1590,   379,   642,    88,   814,  1257,   814,   891,   125,  1329,
    1515,  1516,  1517,  1514,  1443,  1445,  1675,    21,   814,   378,
    1815,   558,  1816,   645,   258,   470,  1814,  1675,  1329,   277,
     280,   429,  1060,  1061,  1682,   136,   810,   156,   824,   810,
     728,    48,  1679,   653,   728,    48,   636,    65,   256,   364,
     534,   552,   643,  1747,  1748,  1682,  1755,   636,  1216,  1667,
    1669,  1667,  1667,  1250,   666,   667,   669,  1322,  1323,  1324,
     571,  1671,  1671,  1679,   814,   502,  1329,  1456,  1659,  1307,
    1308,   376,   814,  1307,  1308,  1459,  1459,   197,  1492,  1665,
    1675,  1527,  1242,  1679,    87,   432,  1085,  1086,  1089,  1096,
    1097,  1098,  1150,   918,  1675,  1675,   194,   368,   315,   708,
       7,   918,   809,   110,  1036,  1511,  1512,  1512,  1036,  1512,
    1512,   582,  1512,  1512,   814,  1093,   158,    74,    89,   199,
     400,   518,  1106,  1108,  1165,  1241,  1512,    64,    89,   235,
    1241,   400,  1512,  1512,  1241,  1512,   400,   400,  1512,  1512,
    1512,  1512,   582,   136,  1512,   261,   400,   563,    64,    89,
     193,   400,   417,  1165,  1241,   261,  1512,   400,   400,   563,
     136,  1512,  1512,  1512,  1512,  1512,  1241,   400,    48,  1512,
    1512,   400,    21,    74,   160,   582,  1165,  1245,   400,   400,
    1512,   584,  1512,  1512,  1512,   139,   331,  1512,  1512,   400,
    1512,   618,   618,  1512,  1512,  1512,  1512,  1094,    71,  1143,
     449,  1059,  1226,   814,   814,   500,   709,  1825,  1203,   491,
     627,  1791,   144,   608,  1280,   125,  1296,  1675,  1295,  1664,
     809,   809,  1301,   810,   814,   457,   458,   459,   460,   461,
     462,   463,   842,   843,   232,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   316,   317,   444,   445,   710,
     711,   731,   733,   734,   735,   736,   737,   740,   750,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   855,   856,   857,
     858,   859,   860,   861,   862,   863,   864,   865,   866,   867,
     868,   869,   870,   871,   872,   873,   874,   875,   876,   877,
     878,   879,   880,   881,   888,   889,   890,  1664,   609,  1284,
      57,   447,   171,   896,   377,     7,   716,   111,   377,  1090,
    1036,   613,  1020,     7,   228,   125,   814,   899,   591,   809,
     591,   614,  1181,  1182,  1664,   200,  1090,   917,  1675,   917,
     917,  1791,   814,   810,  1386,   810,  1329,   810,   810,   810,
    1329,   150,   633,  1393,    21,    25,   810,   614,   810,   810,
     810,   614,   814,  1389,   810,   803,   810,   814,   814,   810,
     810,   810,   197,   814,   810,   814,  1389,   810,   814,   814,
     814,   802,   814,   810,   810,   809,  1661,  1675,  1386,   810,
     810,   810,  1386,   810,   814,   810,   810,   810,   810,   814,
     810,   249,   810,   814,   814,   810,   814,   814,   810,   810,
     810,   814,   197,   814,  1386,   810,   810,   814,   814,   814,
     810,   197,  1329,   197,  1329,   197,  1329,   197,   810,   814,
     810,   810,   810,   810,   814,    21,   810,   814,   810,   814,
     810,   810,   689,  1364,  1364,   810,   814,  1357,   810,  1357,
     814,  1679,   810,  1364,  1364,  1364,   814,  1386,   810,  1389,
     815,   815,   815,  1679,  1329,   819,   179,   371,   588,   604,
    1777,    19,  1329,   165,  1333,   809,  1329,  1329,  1333,   809,
    1777,  1340,  1333,  1327,   810,   814,   809,   815,   815,  1664,
    1495,  1493,  1093,  1027,  1028,  1029,  1048,   814,    52,   469,
    1243,   192,  1831,  1491,   813,   834,   835,   287,   287,   287,
     287,   422,   287,   287,   814,  1491,  1606,   115,   575,   578,
     950,   960,  1380,  1652,  1661,  1679,   814,   160,   377,   810,
     814,   582,   803,  1675,  1684,  1749,   636,  1745,  1675,   160,
     186,   201,   214,   266,   267,   294,   362,   416,  1735,  1736,
    1438,  1439,  1664,  1669,  1669,  1298,  1299,  1664,   236,  1436,
     814,  1679,   122,   188,   219,   290,   372,   593,  1467,  1468,
    1469,    31,   582,  1620,  1682,  1682,   814,   582,   176,   428,
     612,  1275,  1276,  1277,   400,  1403,  1404,   582,  1616,    13,
    1615,  1615,  1611,   814,   160,   210,   377,   197,  1749,  1675,
     145,   699,   719,   795,   809,   818,  1312,  1313,  1395,  1397,
    1405,  1406,  1407,  1408,  1409,  1410,  1411,  1664,  1777,  1438,
    1310,   582,   582,   582,    35,  1148,  1679,   582,  1511,   455,
    1209,  1209,   432,   453,   495,  1718,  1715,  1713,  1751,  1679,
    1683,   194,   815,   815,   815,   815,   815,  1711,  1329,  1719,
     814,  1709,  1669,   197,  1589,   810,  1675,   614,  1590,   427,
    1459,  1533,  1589,  1590,  1682,    60,  1590,  1664,  1664,  1590,
     513,  1262,   607,  1270,  1269,   810,   814,   810,   814,  1777,
    1646,   404,   194,   815,   810,    73,   809,    73,   809,   401,
    1063,   216,   263,   816,  1512,   403,   571,   732,    13,   364,
    1751,   403,   571,   732,  1672,  1679,   571,   571,   571,    19,
    1746,   319,   320,   324,   325,  1217,  1218,     5,   403,   738,
     739,  1213,  1214,  1215,  1492,   668,  1323,  1143,  1145,  1471,
     341,    22,   131,  1457,  1458,   814,  1462,  1462,  1492,  1664,
    1675,   197,   814,   815,  1526,  1313,   219,   290,   372,   593,
    1465,  1468,   379,  1086,    84,    77,    93,   265,   342,   368,
     430,   532,   920,   922,    60,   477,   263,   263,   597,  1038,
     108,   221,   393,   403,   410,   514,   611,   902,   903,  1669,
    1024,  1025,  1054,  1467,  1666,  1669,  1024,  1054,  1054,  1675,
    1669,  1832,  1465,  1026,  1512,  1189,  1675,  1165,  1166,  1287,
    1166,    64,   193,   417,  1107,  1164,  1169,  1180,  1189,  1675,
     809,  1675,   125,  1238,  1675,  1675,  1675,  1675,  1675,  1287,
     122,   188,   290,   372,   593,  1466,   122,   188,   219,   290,
     372,   593,  1464,  1675,  1464,    13,  1231,  1431,  1675,  1287,
    1669,  1669,  1669,  1669,  1143,  1512,  1464,  1231,  1675,  1675,
     263,  1431,   263,  1675,  1675,  1679,  1675,  1231,  1512,   186,
     266,   368,  1100,   372,   801,  1828,   125,  1240,  1675,  1466,
    1466,  1675,  1287,  1452,  1453,  1662,   125,  1095,  1464,  1669,
    1287,  1675,  1675,  1664,  1287,  1287,    80,    82,   125,   148,
     187,   439,  1099,  1095,  1095,   125,  1464,  1675,  1464,  1231,
     809,   371,  1679,  1832,  1832,  1465,  1512,  1512,   402,     7,
     144,  1091,  1234,  1235,  1228,  1232,  1235,   717,   718,  1037,
    1512,   706,  1829,   377,   912,  1220,   127,   248,  1664,   672,
     672,  1231,   417,  1427,  1428,  1429,  1675,   249,  1329,   160,
     160,   160,   160,   160,   160,   160,   814,   891,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   814,   891,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,  1087,  1088,  1089,  1664,
    1038,   708,   641,  1664,  1467,   286,    77,   177,   184,   363,
    1021,  1022,  1023,  1039,  1040,  1042,  1043,  1046,  1047,  1048,
    1049,  1050,  1051,  1052,  1053,  1036,    48,   636,   653,  1754,
    1760,  1512,   596,   901,  1380,  1645,    47,   216,   485,  1184,
    1184,   377,    21,   231,   275,   455,   809,  1055,  1056,  1057,
    1058,  1059,  1092,  1094,  1305,  1307,  1507,  1629,  1675,   917,
     809,   472,  1806,     9,    31,  1017,   245,  1329,   810,  1363,
    1364,  1363,  1363,  1363,   574,  1329,  1329,   154,    35,    62,
     112,   115,   123,   142,   189,   205,   260,   279,   346,   347,
     348,   353,   356,   408,   409,   434,   508,   578,   606,   649,
    1117,  1121,  1387,   282,   578,  1144,  1144,  1387,   810,  1363,
     810,   245,   245,  1329,  1329,  1329,   387,  1384,  1329,  1329,
    1329,  1329,  1329,  1333,   810,  1363,   810,  1363,  1329,  1329,
    1329,  1329,  1329,  1329,  1389,  1363,  1363,   245,  1329,  1329,
    1329,   810,  1363,  1329,  1329,  1329,  1329,   197,  1329,   197,
    1329,   197,  1329,  1329,  1363,  1363,  1329,    35,    62,  1464,
    1386,  1363,   809,  1365,  1366,  1367,  1675,   231,   693,  1361,
    1358,   810,  1361,   810,  1340,  1364,  1645,   810,  1363,   810,
     815,  1190,  1331,   810,   814,  1340,  1340,  1432,  1432,    19,
    1329,   165,  1353,  1388,   803,  1675,  1675,  1236,  1237,  1239,
    1467,  1497,  1093,  1682,  1243,  1679,   814,   891,  1605,  1601,
     958,   961,   962,   957,   373,   484,   959,  1741,  1675,  1750,
     815,   815,   582,   654,  1438,   809,  1459,  1403,   814,  1300,
    1301,  1671,   293,   432,   642,  1726,  1725,  1329,  1669,   582,
    1292,  1664,  1277,   809,   500,   619,   620,   809,  1503,  1504,
    1506,  1507,  1508,  1467,   891,   891,   951,   950,   384,  1741,
    1750,   197,   809,  1777,   809,  1313,  1397,  1406,  1407,  1408,
    1409,   730,   814,   100,   238,   258,   271,   354,   476,   548,
    1398,  1399,  1400,  1403,  1436,   212,  1449,  1438,  1751,  1751,
    1751,   732,  1672,  1672,   727,  1752,  1752,    78,   594,   432,
    1465,  1699,  1700,  1511,  1704,  1466,  1459,   163,   630,  1750,
     372,  1459,   614,  1667,  1583,  1583,   197,   523,   524,   525,
     890,  1271,   611,  1263,  1517,  1675,   814,   335,   156,   809,
    1333,   809,  1333,  1465,   554,  1064,   809,    12,  1062,  1464,
    1671,  1209,   403,   455,   403,  1752,    21,    48,  1747,  1464,
    1464,  1464,  1464,  1218,   285,   605,   174,   464,   703,   704,
     696,  1465,  1465,    77,   747,  1212,  1215,  1144,    73,  1630,
    1659,   614,  1436,   815,  1313,  1665,   803,  1675,   500,  1512,
    1512,  1669,   532,   532,   532,   532,   532,   491,  1675,   377,
    1464,  1669,  1033,  1034,  1035,  1039,  1048,  1050,  1669,  1669,
    1669,  1669,  1464,  1669,  1669,   810,   814,  1679,  1189,   401,
     809,  1189,   809,   263,   263,   366,  1109,  1110,  1111,  1180,
    1166,   809,   614,   591,  1102,  1103,  1104,  1106,  1675,    34,
      35,    40,    42,    44,    45,    62,   112,   115,   123,   159,
     187,   189,   205,   206,   247,   260,   279,   288,   289,   291,
     327,   328,   329,   346,   347,   348,   353,   356,   374,   375,
     408,   409,   496,   500,   512,   572,   575,   578,   579,   580,
     581,   621,   622,   649,  1112,  1115,  1116,  1117,  1118,  1119,
    1120,  1121,  1123,  1111,  1111,   655,   656,  1183,   144,   500,
    1231,  1675,  1283,   814,  1465,   125,  1144,  1669,   563,  1675,
    1243,   636,   563,  1669,   372,  1112,  1231,   814,  1457,  1231,
     582,   582,  1431,  1231,  1606,  1148,  1144,  1027,   372,  1826,
    1827,  1512,   137,   152,  1830,    81,   487,   450,  1221,  1444,
     377,   377,   810,   810,   814,  1296,   809,   844,   844,   809,
     849,   849,   809,   852,   852,   809,   847,   843,   809,  1667,
    1464,  1667,   371,   884,  1681,  1464,   377,   741,   742,   885,
    1465,   282,   571,   742,   886,   881,  1464,  1667,  1667,  1667,
    1667,  1464,  1464,  1464,  1464,  1464,  1667,  1667,  1667,  1667,
    1667,  1667,  1464,  1667,   371,   887,  1667,  1667,  1667,  1464,
    1653,  1669,  1464,  1667,  1466,  1089,   809,   438,   598,  1030,
    1031,  1032,  1039,  1044,  1045,  1046,  1047,  1048,  1050,  1467,
    1679,   809,   898,   212,  1512,  1512,  1512,  1512,  1093,  1027,
     732,  1672,  1679,  1751,  1216,   611,   708,  1824,   810,  1664,
    1507,  1664,   275,  1102,  1057,  1056,  1093,  1319,  1058,   472,
     905,  1801,   123,   247,   434,   549,  1101,   809,   130,   241,
     608,  1018,  1329,   810,  1363,  1329,   574,   809,  1132,  1133,
    1133,   809,  1127,   809,  1125,  1126,  1132,   413,  1122,  1124,
    1132,    62,   247,  1127,   247,  1133,   720,  1341,    21,   751,
     810,   810,   810,  1363,  1363,  1329,  1329,   810,   810,   814,
     810,    48,   494,  1383,   814,   814,   810,   814,   810,   249,
    1348,  1349,  1363,  1363,   810,   810,   810,   810,   814,   810,
     810,  1329,   810,   194,   810,   810,   814,  1363,   810,   814,
     814,   810,  1329,   810,  1329,   810,  1329,   810,   810,   810,
     809,  1155,  1155,   814,   810,  1366,  1368,  1369,   687,   687,
    1364,   814,  1360,  1361,  1364,  1361,   810,   743,  1344,  1363,
    1675,  1389,   810,  1331,   810,   814,  1340,   810,  1239,  1237,
    1029,   835,   194,   636,  1602,   160,   814,  1749,   636,  1762,
     803,   803,  1675,  1750,   384,  1459,  1516,   500,  1503,  1504,
    1299,  1664,  1301,   231,  1302,  1628,  1629,   642,   282,  1682,
    1430,  1431,  1522,  1523,  1662,   810,  1505,  1657,  1658,  1662,
    1675,   809,  1509,  1513,   160,   197,  1749,  1750,  1329,  1436,
    1329,   814,   810,   810,   810,   810,   810,  1395,  1396,  1397,
    1405,  1395,   258,   258,   390,  1402,   238,   271,   476,  1401,
    1402,  1405,  1395,  1395,  1436,  1444,    48,   217,  1440,  1449,
    1209,  1209,   103,  1093,  1719,   891,  1750,  1438,  1590,   497,
     160,   160,   814,   160,   403,  1264,  1464,  1066,  1675,   810,
    1066,   810,    48,   809,  1068,  1333,   160,   809,   228,  1752,
    1209,  1672,   455,  1752,   219,  1669,  1673,   732,  1672,   125,
     245,   360,   103,   125,  1465,   245,  1670,  1670,   153,   164,
     385,   570,  1631,  1632,   278,  1633,  1313,  1403,  1675,  1438,
     815,  1526,  1522,  1095,  1669,   111,   111,   127,   248,   368,
     162,  1093,   903,   809,  1465,   400,  1069,  1070,   809,  1329,
    1189,   729,   809,   809,  1186,  1187,  1188,  1675,  1184,  1184,
     810,   814,  1112,  1132,  1132,  1133,    23,    35,    49,   600,
     625,  1132,  1143,  1151,  1152,  1153,  1127,   809,  1153,    62,
     621,  1118,  1153,  1153,    62,   622,   622,   625,   809,  1133,
    1127,  1127,  1153,  1132,  1133,   440,  1105,  1158,    27,    71,
      75,    77,   125,   366,   371,   377,   417,   496,   546,   603,
     705,   748,   749,   787,  1108,  1111,  1135,  1136,  1137,  1149,
    1157,  1183,  1336,    35,  1132,  1154,  1132,  1132,  1133,   809,
    1126,  1134,  1125,   125,   125,  1183,  1112,  1675,  1149,  1149,
     565,     9,   186,  1244,  1453,  1675,  1675,   246,  1275,   810,
     801,  1093,  1828,  1831,   366,   415,    25,   168,   906,   582,
     137,   152,   908,  1792,  1431,  1431,  1428,   810,   845,   846,
    1675,   810,   850,   851,  1675,  1684,   810,   853,   854,  1667,
    1668,   809,   810,   848,   882,   883,  1464,  1187,  1512,  1512,
    1093,   898,   383,  1187,   352,   713,   714,   715,  1675,  1669,
    1054,  1054,  1465,  1023,   403,    21,    48,  1213,  1825,   809,
    1664,   810,  1094,  1101,   377,   925,   926,   927,  1675,   515,
    1807,   377,  1432,  1329,   122,   290,   372,   593,  1153,   372,
     372,   810,  1387,   245,  1656,  1432,  1432,  1329,  1385,  1659,
    1646,   810,  1329,  1329,  1389,    44,   354,   810,   636,  1350,
    1329,  1432,  1329,  1329,  1329,  1329,   810,   810,   810,  1465,
     810,   810,  1464,  1363,   810,   400,  1370,  1329,  1364,  1364,
     197,  1362,  1387,   125,   162,   371,  1416,  1418,  1419,  1420,
     810,  1389,  1603,   432,    56,    66,    76,    90,    91,    92,
     106,   333,   350,   471,   488,   550,   567,   963,   962,   582,
     210,   636,  1761,   810,  1522,    21,  1518,   377,  1519,  1302,
     269,   246,   810,   814,  1511,  1506,  1507,   810,   814,   815,
    1515,   814,   950,  1750,   197,   814,  1444,   810,  1395,   819,
     258,  1402,  1402,   258,   258,   377,   614,   377,   614,   192,
     231,   613,  1422,  1423,  1424,  1425,  1426,  1329,  1450,  1660,
    1329,   697,  1446,  1440,  1752,  1752,   403,  1465,  1329,  1669,
    1669,   890,  1669,   160,   126,  1265,   810,   814,   810,  1061,
    1069,   810,  1465,  1065,  1066,    48,  1752,  1752,  1672,  1752,
     403,   455,  1752,  1465,   125,   722,   125,  1465,    48,    48,
     153,    48,  1632,   536,   570,  1634,  1635,  1438,  1438,  1438,
     477,  1035,  1187,  1675,   810,   814,  1187,   810,   809,  1187,
    1329,   810,   814,   809,  1457,  1103,  1105,    35,    23,   600,
    1143,    35,  1153,  1144,  1191,  1646,  1153,   625,  1191,  1153,
     508,   606,   650,  1129,  1130,  1131,  1664,  1244,  1148,    82,
     125,   148,   187,  1139,  1669,   115,   575,   578,   801,   802,
     809,  1141,  1142,  1648,  1649,  1650,  1651,   608,   125,   125,
     139,   331,  1140,   263,  1467,  1512,  1512,   263,  1107,    71,
    1137,   203,  1113,   263,   371,   723,  1154,  1153,  1154,  1129,
     372,  1129,  1129,   809,  1649,  1244,  1664,  1675,   809,   372,
    1827,   415,  1329,  1329,   377,   912,   917,   377,    77,   913,
      21,   636,  1279,   810,   814,   810,   814,   815,   810,   814,
     846,   810,   814,   810,   814,   810,  1054,  1054,  1032,   809,
     810,  1667,  1667,  1667,  1667,  1673,   732,  1672,  1212,  1829,
    1187,   810,  1055,   515,   487,   810,   814,  1115,  1669,   239,
     249,   392,   928,   929,   930,   931,  1664,   810,   810,   810,
     810,   810,   810,   814,  1341,  1670,   810,   810,   810,   814,
    1363,   810,   814,   810,   341,   265,   427,   810,   810,   810,
     810,   810,   810,  1156,   814,    48,   387,  1371,   186,   266,
    1361,  1648,   810,  1419,  1420,   377,   810,   175,   285,  1750,
     384,   210,    21,  1764,  1438,  1518,  1675,  1519,   147,   565,
    1523,  1517,  1506,  1507,  1657,  1675,   810,  1513,  1750,  1645,
    1436,   810,   258,   258,  1329,   809,  1329,   809,  1165,  1165,
    1423,   638,   814,  1451,  1366,  1447,  1448,  1446,  1669,   160,
     405,  1266,  1675,   216,   263,   810,   810,  1669,  1752,  1752,
    1672,   120,   120,  1646,  1646,    48,  1646,    48,    48,  1635,
    1454,  1454,   377,   810,   619,  1071,  1070,   810,  1185,  1186,
     810,   810,    77,   262,   748,   749,  1176,  1177,  1178,  1179,
    1182,  1183,  1188,   372,  1144,  1154,   810,   814,   810,  1131,
     809,  1159,   636,  1138,  1653,  1653,  1329,  1141,   620,  1832,
    1832,  1148,    15,    21,  1329,  1229,  1230,  1069,  1432,   510,
    1669,   143,  1222,  1507,  1793,   372,   846,   851,  1675,   854,
     814,   809,   883,   636,  1170,  1171,  1172,  1179,   902,  1173,
    1174,  1175,  1179,   228,   403,  1830,   810,  1669,   906,  1802,
     927,  1149,   810,   814,  1675,   194,   372,   810,    21,  1659,
    1329,   341,   173,   810,  1464,  1450,    48,   429,   481,   681,
    1372,  1378,  1364,   377,   162,   698,  1761,   384,  1682,  1459,
    1519,  1444,   263,  1664,    73,  1412,  1430,  1430,   194,  1421,
    1421,  1660,    21,   814,  1669,   160,  1258,   809,  1062,   111,
     464,  1822,  1823,  1752,  1646,  1646,  1646,   276,  1463,  1463,
     162,  1170,   249,   272,    77,   111,   235,   321,   339,   363,
     563,  1082,  1083,  1084,  1582,  1173,   810,   814,  1176,  1457,
    1669,  1512,  1512,  1512,  1178,   810,  1153,  1646,  1153,  1160,
    1675,   318,  1161,   788,   810,   809,   810,   810,   907,   914,
     915,   636,  1794,   673,   846,   846,   397,  1236,  1172,   810,
    1236,  1175,    48,  1176,   911,   912,   472,  1808,   930,  1115,
     149,   810,   112,   810,   810,  1456,    33,   103,   245,   696,
    1373,  1374,  1375,  1647,  1653,  1764,   636,  1763,   608,  1403,
     809,   810,   810,   810,   212,   258,   387,   809,   809,  1367,
    1448,  1669,   891,  1333,   809,   136,   368,   534,  1462,   809,
    1073,  1075,   573,  1512,   136,   136,  1512,  1512,  1512,  1512,
     809,  1079,  1084,   158,  1158,  1186,  1464,  1832,  1832,  1457,
     810,   814,   198,   399,   509,   377,  1162,  1675,  1329,   537,
     909,    54,    68,   182,   230,   257,   270,   380,   473,   916,
     967,   969,   970,   971,   973,   974,   975,   976,   977,   978,
     980,   988,   989,   992,  1003,  1006,  1008,  1009,  1666,  1677,
    1688,  1689,  1690,  1693,    53,    64,   282,   810,   814,  1666,
    1467,  1236,   908,  1115,   919,  1149,   483,  1127,   245,   696,
    1374,  1376,  1647,  1653,   483,  1329,   691,   678,  1377,   691,
     691,   653,  1522,  1145,   700,  1413,  1414,  1675,  1436,    48,
      48,  1427,  1429,   810,  1066,  1512,   534,   809,  1074,  1075,
    1076,   326,  1072,  1075,  1669,  1512,  1512,  1467,  1467,  1465,
    1675,   554,  1080,  1081,  1512,  1675,   130,   608,   810,  1329,
     155,   910,   990,   993,  1675,   197,   362,   981,   968,  1677,
    1677,  1675,   972,   826,   292,   454,   635,  1012,    32,  1010,
     816,    64,   384,    64,   846,   913,  1149,   134,   920,   921,
    1336,  1809,   191,   412,  1795,  1796,   810,  1329,   680,    19,
     680,   680,  1432,   103,   212,   368,   695,    13,   125,   364,
    1751,   481,  1636,   702,   810,   814,   194,  1115,   810,   810,
     553,  1067,   810,  1671,   810,   814,   326,  1077,  1078,  1333,
    1669,  1669,  1679,   810,   814,  1679,    52,   368,   469,   500,
    1163,  1163,   547,   628,  1114,  1329,  1329,   633,   995,   999,
     197,  1675,   983,   984,  1329,   933,   966,   967,   969,   971,
     973,   975,   976,   977,   978,   980,   988,  1003,  1006,  1008,
     933,  1013,  1011,  1004,  1007,   384,   384,   810,   143,  1803,
     134,   966,  1679,  1798,  1432,  1376,   691,   483,   688,  1697,
     228,  1630,  1645,  1414,   701,  1149,  1465,  1067,  1823,  1075,
     810,   814,  1082,  1081,     6,   125,   371,   377,   377,  1135,
     991,  1000,   150,   999,  1002,   246,   154,  1329,   154,   966,
     812,   607,  1329,   934,  1012,  1010,   914,   919,   966,   680,
      48,  1633,  1412,   171,  1415,  1078,   608,   130,   633,   994,
     996,  1329,   933,   154,   979,   230,   985,   292,   812,  1015,
    1014,   124,   932,   935,  1005,  1677,  1005,  1804,  1646,   231,
    1637,   702,  1163,  1163,   997,   996,  1002,  1001,    54,   982,
    1675,   574,  1329,   143,    95,   172,   938,   964,  1675,   154,
     966,   812,   966,   372,   809,  1639,  1645,  1329,   154,   574,
     814,   933,  1016,   933,   215,   814,  1115,    86,   105,   812,
     278,   481,  1638,   810,   813,  1640,  1641,  1662,   500,  1642,
    1416,  1417,  1419,   998,    54,   933,  1675,   986,   154,   154,
     194,  1675,  1149,   194,   194,  1679,   810,   814,  1643,  1644,
    1662,  1418,  1420,   574,   150,   151,   987,   454,   635,   936,
     125,   965,   941,   942,  1464,   937,  1641,   814,  1511,   377,
     933,   933,   983,   520,   522,   939,   940,   941,   944,  1336,
    1675,  1329,  1303,  1644,  1517,   814,   966,   196,   940
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   820,   821,   821,   821,   821,   821,   821,   822,   823,
     822,   822,   824,   824,   825,   825,   826,   826,   826,   826,
     826,   826,   826,   826,   826,   826,   826,   826,   826,   826,
     826,   826,   826,   826,   826,   826,   826,   826,   826,   826,
     826,   826,   826,   826,   826,   826,   826,   826,   826,   826,
     826,   826,   826,   826,   826,   826,   826,   826,   826,   826,
     826,   826,   826,   826,   826,   826,   826,   826,   826,   826,
     826,   826,   826,   826,   826,   826,   826,   826,   826,   826,
     826,   826,   826,   826,   826,   826,   826,   826,   826,   826,
     826,   826,   826,   826,   826,   826,   826,   826,   826,   826,
     826,   826,   826,   826,   826,   826,   826,   826,   826,   826,
     826,   826,   826,   826,   826,   826,   826,   826,   826,   826,
     826,   826,   826,   826,   826,   826,   826,   826,   826,   826,
     826,   826,   826,   826,   826,   826,   826,   826,   826,   826,
     826,   826,   826,   826,   826,   826,   826,   826,   826,   826,
     826,   826,   827,   828,   828,   829,   830,   830,   832,   831,
     833,   833,   834,   834,   835,   837,   836,   838,   838,   840,
     839,   841,   839,   842,   842,   843,   843,   843,   843,   843,
     843,   843,   844,   844,   845,   845,   846,   847,   847,   848,
     848,   849,   849,   850,   850,   851,   852,   852,   853,   853,
     854,   855,   855,   856,   856,   857,   857,   858,   858,   859,
     859,   860,   860,   861,   861,   862,   862,   863,   863,   864,
     864,   865,   865,   866,   866,   867,   867,   868,   868,   869,
     869,   870,   870,   871,   871,   872,   872,   873,   873,   874,
     874,   875,   875,   876,   876,   877,   877,   878,   878,   879,
     879,   880,   880,   881,   881,   881,   881,   881,   881,   881,
     881,   881,   881,   881,   881,   881,   881,   881,   881,   881,
     881,   881,   881,   881,   881,   881,   881,   881,   881,   881,
     881,   881,   881,   881,   881,   881,   882,   882,   882,   883,
     884,   884,   885,   885,   885,   886,   886,   886,   887,   887,
     888,   888,   889,   889,   890,   890,   890,   890,   891,   891,
     892,   892,   892,   892,   893,   894,   896,   895,   895,   895,
     895,   895,   895,   895,   895,   897,   897,   898,   898,   898,
     898,   898,   899,   899,   900,   900,   900,   901,   901,   902,
     902,   903,   903,   903,   903,   903,   903,   903,   905,   904,
     907,   906,   906,   908,   908,   908,   908,   909,   909,   910,
     910,   911,   911,   912,   912,   913,   913,   915,   914,   916,
     916,   916,   916,   916,   916,   916,   916,   916,   916,   916,
     916,   916,   917,   917,   918,   918,   919,   919,   920,   920,
     920,   920,   920,   920,   920,   921,   921,   921,   922,   922,
     923,   924,   924,   925,   925,   926,   926,   927,   928,   928,
     929,   929,   930,   931,   931,   931,   931,   932,   932,   933,
     933,   934,   934,   935,   935,   936,   935,   937,   935,   938,
     938,   939,   939,   940,   941,   941,   942,   943,   943,   944,
     944,   944,   944,   944,   945,   946,   946,   947,   947,   948,
     948,   949,   949,   950,   950,   950,   951,   951,   951,   951,
     951,   951,   951,   951,   951,   951,   951,   951,   952,   953,
     954,   954,   954,   955,   955,   956,   956,   957,   958,   958,
     959,   959,   960,   961,   961,   962,   963,   963,   963,   963,
     963,   963,   963,   963,   963,   963,   963,   963,   963,   964,
     964,   965,   965,   966,   966,   966,   966,   966,   966,   966,
     966,   966,   966,   966,   966,   966,   968,   967,   970,   969,
     972,   971,   974,   973,   975,   976,   977,   979,   978,   980,
     981,   981,   981,   982,   982,   984,   985,   986,   983,   987,
     987,   987,   988,   988,   990,   991,   989,   993,   992,   994,
     994,   995,   995,   997,   998,   996,  1000,  1001,   999,  1002,
    1002,  1004,  1003,  1005,  1005,  1007,  1006,  1009,  1008,  1011,
    1010,  1012,  1013,  1014,  1012,  1015,  1016,  1012,  1017,  1017,
    1018,  1018,  1018,  1019,  1019,  1020,  1020,  1021,  1021,  1022,
    1022,  1023,  1023,  1023,  1023,  1023,  1023,  1023,  1023,  1023,
    1023,  1023,  1023,  1024,  1024,  1025,  1025,  1026,  1026,  1026,
    1026,  1026,  1026,  1026,  1026,  1027,  1027,  1028,  1028,  1029,
    1030,  1030,  1031,  1031,  1032,  1032,  1032,  1032,  1032,  1032,
    1032,  1033,  1033,  1034,  1034,  1035,  1035,  1035,  1036,  1037,
    1037,  1038,  1039,  1040,  1041,  1042,  1043,  1044,  1045,  1046,
    1047,  1048,  1049,  1050,  1050,  1051,  1052,  1053,  1054,  1054,
    1055,  1055,  1056,  1056,  1057,  1057,  1057,  1058,  1058,  1059,
    1060,  1060,  1060,  1060,  1060,  1060,  1061,  1061,  1062,  1062,
    1063,  1063,  1064,  1064,  1064,  1065,  1065,  1066,  1066,  1067,
    1067,  1068,  1068,  1069,  1069,  1070,  1071,  1071,  1071,  1072,
    1072,  1073,  1073,  1074,  1074,  1076,  1075,  1077,  1077,  1078,
    1078,  1079,  1079,  1080,  1080,  1081,  1082,  1082,  1083,  1083,
    1084,  1084,  1084,  1084,  1084,  1084,  1084,  1084,  1085,  1085,
    1086,  1086,  1087,  1087,  1088,  1088,  1089,  1089,  1089,  1090,
    1090,  1091,  1091,  1092,  1092,  1093,  1093,  1094,  1094,  1094,
    1094,  1094,  1094,  1094,  1094,  1094,  1094,  1094,  1094,  1094,
    1094,  1094,  1094,  1094,  1094,  1094,  1094,  1094,  1094,  1094,
    1094,  1094,  1094,  1094,  1094,  1094,  1094,  1094,  1094,  1094,
    1094,  1094,  1094,  1095,  1095,  1096,  1097,  1098,  1099,  1099,
    1099,  1099,  1099,  1099,  1100,  1100,  1100,  1101,  1101,  1101,
    1101,  1102,  1102,  1103,  1103,  1104,  1105,  1105,  1106,  1106,
    1106,  1106,  1106,  1106,  1107,  1108,  1108,  1109,  1109,  1110,
    1110,  1111,  1112,  1112,  1113,  1113,  1114,  1114,  1114,  1115,
    1115,  1115,  1115,  1115,  1115,  1115,  1115,  1115,  1115,  1115,
    1115,  1115,  1115,  1115,  1115,  1115,  1115,  1115,  1115,  1115,
    1115,  1115,  1115,  1115,  1115,  1115,  1115,  1115,  1115,  1115,
    1115,  1115,  1115,  1115,  1115,  1115,  1116,  1116,  1116,  1116,
    1116,  1116,  1116,  1116,  1117,  1117,  1118,  1118,  1119,  1119,
    1119,  1119,  1119,  1120,  1120,  1120,  1120,  1120,  1121,  1121,
    1122,  1122,  1123,  1123,  1123,  1123,  1124,  1124,  1125,  1125,
    1125,  1126,  1127,  1127,  1128,  1128,  1128,  1129,  1129,  1130,
    1130,  1131,  1131,  1131,  1132,  1132,  1132,  1132,  1133,  1133,
    1134,  1134,  1135,  1135,  1136,  1136,  1137,  1137,  1137,  1137,
    1137,  1137,  1137,  1137,  1137,  1137,  1137,  1137,  1137,  1137,
    1137,  1137,  1137,  1137,  1137,  1137,  1137,  1137,  1137,  1137,
    1138,  1138,  1139,  1139,  1139,  1140,  1140,  1140,  1141,  1142,
    1142,  1143,  1143,  1144,  1144,  1145,  1145,  1146,  1146,  1147,
    1147,  1148,  1148,  1149,  1149,  1150,  1150,  1151,  1151,  1151,
    1152,  1152,  1152,  1153,  1153,  1153,  1153,  1153,  1153,  1153,
    1154,  1154,  1156,  1155,  1157,  1157,  1158,  1159,  1159,  1160,
    1160,  1161,  1161,  1161,  1161,  1162,  1162,  1162,  1162,  1162,
    1163,  1163,  1163,  1163,  1163,  1164,  1164,  1165,  1165,  1166,
    1166,  1167,  1167,  1167,  1168,  1168,  1169,  1169,  1169,  1169,
    1169,  1169,  1169,  1169,  1170,  1170,  1171,  1171,  1172,  1172,
    1173,  1173,  1174,  1174,  1175,  1176,  1176,  1177,  1177,  1178,
    1178,  1179,  1179,  1179,  1179,  1179,  1180,  1180,  1180,  1181,
    1181,  1182,  1182,  1183,  1183,  1184,  1184,  1184,  1185,  1185,
    1186,  1186,  1187,  1187,  1188,  1188,  1189,  1189,  1190,  1190,
    1191,  1191,  1192,  1192,  1194,  1193,  1196,  1195,  1198,  1197,
    1200,  1199,  1201,  1199,  1203,  1202,  1204,  1205,  1205,  1205,
    1205,  1206,  1207,  1208,  1208,  1208,  1208,  1208,  1208,  1208,
    1209,  1209,  1210,  1211,  1212,  1212,  1212,  1213,  1213,  1214,
    1214,  1215,  1215,  1215,  1215,  1215,  1215,  1215,  1215,  1215,
    1215,  1215,  1215,  1215,  1215,  1215,  1215,  1216,  1216,  1217,
    1217,  1218,  1218,  1218,  1218,  1219,  1220,  1220,  1220,  1220,
    1221,  1221,  1222,  1222,  1223,  1223,  1224,  1224,  1225,  1225,
    1226,  1226,  1227,  1227,  1227,  1227,  1228,  1228,  1228,  1228,
    1228,  1228,  1228,  1228,  1228,  1228,  1228,  1228,  1228,  1228,
    1228,  1228,  1228,  1228,  1228,  1228,  1229,  1229,  1230,  1230,
    1231,  1231,  1232,  1232,  1232,  1232,  1232,  1233,  1233,  1234,
    1234,  1234,  1234,  1234,  1234,  1234,  1234,  1234,  1234,  1234,
    1234,  1234,  1234,  1234,  1234,  1234,  1234,  1234,  1234,  1234,
    1234,  1234,  1234,  1234,  1234,  1234,  1235,  1235,  1235,  1236,
    1236,  1236,  1236,  1236,  1237,  1238,  1238,  1239,  1240,  1240,
    1241,  1241,  1242,  1242,  1243,  1243,  1243,  1244,  1244,  1244,
    1245,  1245,  1245,  1245,  1246,  1246,  1247,  1248,  1248,  1249,
    1249,  1250,  1250,  1250,  1251,  1252,  1253,  1254,  1254,  1255,
    1257,  1258,  1256,  1259,  1260,  1260,  1261,  1261,  1262,  1262,
    1262,  1262,  1263,  1263,  1264,  1264,  1265,  1265,  1266,  1266,
    1267,  1267,  1268,  1268,  1269,  1269,  1270,  1270,  1271,  1271,
    1271,  1271,  1271,  1272,  1273,  1273,  1273,  1274,  1275,  1275,
    1276,  1276,  1277,  1277,  1277,  1278,  1279,  1279,  1280,  1280,
    1280,  1281,  1282,  1283,  1283,  1284,  1284,  1285,  1285,  1285,
    1285,  1285,  1285,  1286,  1287,  1287,  1287,  1289,  1288,  1288,
    1290,  1290,  1291,  1291,  1292,  1293,  1293,  1294,  1294,  1295,
    1296,  1296,  1297,  1297,  1298,  1298,  1299,  1300,  1301,  1301,
    1302,  1302,  1303,  1303,  1303,  1303,  1304,  1304,  1304,  1304,
    1304,  1305,  1305,  1305,  1305,  1305,  1305,  1305,  1306,  1306,
    1306,  1306,  1306,  1307,  1307,  1307,  1308,  1308,  1308,  1309,
    1309,  1310,  1310,  1311,  1312,  1312,  1313,  1313,  1314,  1315,
    1316,  1316,  1317,  1317,  1318,  1318,  1319,  1319,  1320,  1320,
    1320,  1321,  1321,  1322,  1323,  1323,  1324,  1324,  1325,  1325,
    1325,  1326,  1326,  1327,  1327,  1327,  1327,  1327,  1328,  1328,
    1329,  1329,  1329,  1329,  1329,  1329,  1329,  1329,  1329,  1329,
    1329,  1330,  1330,  1330,  1330,  1330,  1331,  1331,  1331,  1331,
    1331,  1331,  1331,  1331,  1331,  1331,  1331,  1331,  1331,  1331,
    1331,  1331,  1331,  1332,  1332,  1333,  1333,  1333,  1333,  1333,
    1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,
    1334,  1334,  1335,  1335,  1336,  1336,  1337,  1337,  1338,  1338,
    1338,  1338,  1338,  1338,  1338,  1339,  1339,  1340,  1340,  1340,
    1340,  1340,  1340,  1340,  1340,  1340,  1340,  1340,  1340,  1340,
    1340,  1340,  1340,  1340,  1340,  1340,  1340,  1340,  1340,  1340,
    1340,  1340,  1340,  1340,  1340,  1340,  1340,  1340,  1340,  1340,
    1340,  1340,  1341,  1341,  1342,  1342,  1342,  1342,  1342,  1342,
    1342,  1342,  1342,  1342,  1342,  1342,  1342,  1342,  1342,  1342,
    1342,  1342,  1342,  1342,  1342,  1342,  1342,  1342,  1342,  1342,
    1342,  1342,  1343,  1343,  1343,  1343,  1343,  1343,  1343,  1343,
    1343,  1343,  1343,  1343,  1343,  1343,  1343,  1343,  1343,  1343,
    1343,  1343,  1343,  1343,  1344,  1344,  1345,  1345,  1345,  1345,
    1345,  1345,  1345,  1345,  1345,  1345,  1345,  1345,  1345,  1345,
    1345,  1345,  1345,  1345,  1345,  1345,  1345,  1345,  1345,  1346,
    1346,  1346,  1346,  1346,  1346,  1346,  1347,  1347,  1348,  1348,
    1349,  1349,  1350,  1350,  1351,  1351,  1352,  1352,  1353,  1354,
    1354,  1355,  1355,  1355,  1355,  1355,  1355,  1355,  1355,  1355,
    1355,  1355,  1355,  1355,  1355,  1355,  1355,  1355,  1355,  1355,
    1355,  1355,  1355,  1355,  1356,  1356,  1356,  1356,  1356,  1356,
    1356,  1356,  1356,  1356,  1356,  1357,  1357,  1358,  1358,  1359,
    1359,  1359,  1360,  1360,  1361,  1361,  1361,  1362,  1362,  1362,
    1363,  1363,  1364,  1365,  1365,  1366,  1367,  1368,  1369,  1369,
    1370,  1370,  1371,  1371,  1372,  1372,  1373,  1373,  1374,  1374,
    1374,  1374,  1374,  1375,  1376,  1376,  1376,  1376,  1376,  1377,
    1377,  1377,  1377,  1377,  1378,  1378,  1378,  1379,  1380,  1381,
    1381,  1381,  1382,  1382,  1383,  1383,  1384,  1384,  1385,  1385,
    1386,  1387,  1387,  1387,  1387,  1387,  1387,  1387,  1387,  1387,
    1387,  1387,  1387,  1387,  1387,  1387,  1387,  1387,  1387,  1387,
    1387,  1387,  1387,  1388,  1388,  1389,  1389,  1390,  1390,  1391,
    1391,  1392,  1392,  1393,  1393,  1394,  1394,  1395,  1395,  1395,
    1396,  1396,  1397,  1397,  1397,  1397,  1397,  1397,  1398,  1398,
    1398,  1399,  1399,  1399,  1399,  1400,  1400,  1401,  1401,  1402,
    1402,  1403,  1403,  1404,  1405,  1405,  1405,  1405,  1405,  1405,
    1406,  1406,  1407,  1407,  1408,  1409,  1409,  1410,  1410,  1411,
    1411,  1412,  1413,  1413,  1414,  1414,  1414,  1415,  1415,  1416,
    1416,  1416,  1416,  1417,  1417,  1418,  1419,  1420,  1420,  1420,
    1421,  1421,  1421,  1421,  1422,  1422,  1423,  1423,  1424,  1424,
    1425,  1425,  1426,  1427,  1427,  1428,  1428,  1429,  1429,  1430,
    1431,  1431,  1432,  1432,  1432,  1432,  1432,  1432,  1432,  1432,
    1432,  1432,  1432,  1432,  1433,  1433,  1433,  1433,  1433,  1433,
    1433,  1433,  1433,  1434,  1434,  1434,  1434,  1435,  1435,  1436,
    1436,  1437,  1437,  1438,  1438,  1439,  1440,  1440,  1441,  1441,
    1442,  1442,  1443,  1444,  1444,  1445,  1445,  1446,  1446,  1447,
    1447,  1448,  1449,  1449,  1450,  1450,  1451,  1451,  1452,  1452,
    1453,  1454,  1454,  1455,  1456,  1456,  1457,  1457,  1458,  1458,
    1459,  1459,  1460,  1461,  1461,  1461,  1462,  1462,  1462,  1462,
    1462,  1463,  1463,  1464,  1464,  1464,  1464,  1464,  1464,  1465,
    1465,  1465,  1465,  1465,  1466,  1466,  1466,  1466,  1466,  1467,
    1467,  1467,  1467,  1467,  1468,  1469,  1469,  1470,  1470,  1471,
    1471,  1472,  1473,  1473,  1473,  1474,  1475,  1476,  1477,  1478,
    1478,  1479,  1480,  1481,  1482,  1483,  1484,  1485,  1486,  1487,
    1488,  1488,  1489,  1490,  1491,  1491,  1492,  1492,  1493,  1493,
    1494,  1494,  1495,  1495,  1496,  1496,  1497,  1497,  1498,  1498,
    1498,  1499,  1499,  1499,  1500,  1500,  1500,  1500,  1501,  1501,
    1502,  1502,  1503,  1503,  1503,  1504,  1504,  1504,  1505,  1505,
    1506,  1507,  1507,  1507,  1508,  1508,  1509,  1509,  1510,  1510,
    1511,  1511,  1512,  1512,  1513,  1514,  1515,  1515,  1516,  1516,
    1517,  1517,  1518,  1518,  1519,  1519,  1520,  1521,  1521,  1522,
    1522,  1523,  1524,  1524,  1525,  1525,  1525,  1526,  1526,  1527,
    1527,  1528,  1528,  1528,  1529,  1530,  1530,  1531,  1531,  1532,
    1532,  1533,  1533,  1533,  1533,  1533,  1533,  1533,  1533,  1533,
    1534,  1534,  1535,  1536,  1537,  1538,  1539,  1540,  1541,  1542,
    1543,  1544,  1545,  1546,  1547,  1547,  1548,  1549,  1550,  1551,
    1552,  1553,  1554,  1555,  1556,  1557,  1558,  1559,  1560,  1561,
    1562,  1563,  1564,  1564,  1564,  1564,  1564,  1564,  1565,  1566,
    1567,  1568,  1569,  1570,  1570,  1570,  1570,  1570,  1571,  1572,
    1573,  1574,  1575,  1576,  1577,  1578,  1579,  1580,  1580,  1581,
    1581,  1582,  1582,  1583,  1583,  1584,  1584,  1585,  1585,  1586,
    1586,  1586,  1586,  1587,  1587,  1588,  1588,  1589,  1589,  1590,
    1590,  1590,  1591,  1592,  1593,  1593,  1593,  1593,  1593,  1593,
    1594,  1594,  1595,  1595,  1596,  1596,  1597,  1597,  1597,  1599,
    1598,  1601,  1600,  1600,  1602,  1602,  1603,  1602,  1604,  1604,
    1605,  1605,  1605,  1605,  1605,  1605,  1605,  1605,  1605,  1605,
    1605,  1605,  1605,  1605,  1605,  1605,  1605,  1605,  1605,  1606,
    1606,  1608,  1607,  1607,  1609,  1609,  1610,  1610,  1612,  1611,
    1613,  1611,  1614,  1611,  1611,  1615,  1615,  1616,  1616,  1618,
    1617,  1619,  1619,  1620,  1620,  1621,  1622,  1622,  1622,  1623,
    1624,  1625,  1625,  1626,  1626,  1627,  1627,  1627,  1628,  1628,
    1629,  1629,  1630,  1630,  1631,  1631,  1632,  1632,  1632,  1632,
    1633,  1633,  1634,  1634,  1635,  1635,  1636,  1636,  1637,  1637,
    1638,  1638,  1639,  1639,  1639,  1640,  1640,  1641,  1641,  1642,
    1642,  1643,  1643,  1644,  1645,  1645,  1645,  1645,  1646,  1646,
    1646,  1647,  1648,  1648,  1648,  1649,  1649,  1650,  1651,  1651,
    1651,  1651,  1651,  1651,  1651,  1651,  1651,  1652,  1652,  1653,
    1653,  1653,  1654,  1654,  1654,  1655,  1655,  1655,  1656,  1656,
    1657,  1657,  1658,  1658,  1659,  1660,  1661,  1661,  1662,  1662,
    1663,  1663,  1664,  1664,  1665,  1665,  1666,  1666,  1667,  1668,
    1669,  1670,  1671,  1672,  1673,  1673,  1674,  1675,  1675,  1676,
    1676,  1677,  1677,  1678,  1678,  1679,  1679,  1679,  1680,  1680,
    1680,  1681,  1681,  1682,  1682,  1683,  1683,  1684,  1685,  1685,
    1685,  1685,  1685,  1686,  1686,  1686,  1687,  1687,  1687,  1687,
    1687,  1687,  1687,  1687,  1687,  1687,  1687,  1687,  1687,  1687,
    1687,  1687,  1687,  1687,  1687,  1687,  1687,  1687,  1687,  1687,
    1687,  1687,  1687,  1687,  1687,  1687,  1687,  1687,  1687,  1687,
    1687,  1687,  1688,  1688,  1688,  1689,  1689,  1689,  1689,  1689,
    1689,  1689,  1689,  1689,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,  1690,
    1690,  1690,  1690,  1690,  1690,  1690,  1690,  1691,  1691,  1691,
    1692,  1692,  1692,  1692,  1693,  1693,  1693,  1693,  1693,  1694,
    1695,  1695,  1695,  1695,  1695,  1695,  1695,  1696,  1696,  1696,
    1696,  1696,  1696,  1696,  1697,  1697,  1698,  1698,  1699,  1699,
    1700,  1701,  1701,  1702,  1702,  1703,  1703,  1704,  1704,  1705,
    1705,  1705,  1705,  1705,  1706,  1706,  1706,  1706,  1707,  1707,
    1707,  1707,  1708,  1708,  1708,  1708,  1708,  1708,  1709,  1710,
    1710,  1710,  1710,  1710,  1710,  1710,  1711,  1711,  1711,  1712,
    1712,  1713,  1714,  1714,  1715,  1716,  1716,  1717,  1717,  1718,
    1718,  1718,  1718,  1719,  1719,  1719,  1719,  1719,  1719,  1719,
    1719,  1720,  1721,  1722,  1721,  1721,  1723,  1723,  1724,  1724,
    1725,  1726,  1726,  1726,  1726,  1727,  1728,  1728,  1729,  1730,
    1731,  1732,  1732,  1732,  1732,  1732,  1732,  1732,  1732,  1732,
    1732,  1733,  1733,  1733,  1733,  1733,  1734,  1734,  1735,  1735,
    1735,  1735,  1736,  1736,  1736,  1736,  1736,  1737,  1737,  1738,
    1737,  1737,  1737,  1739,  1739,  1740,  1739,  1739,  1741,  1741,
    1741,  1741,  1742,  1742,  1743,  1743,  1744,  1744,  1744,  1744,
    1744,  1744,  1744,  1744,  1744,  1744,  1744,  1744,  1744,  1744,
    1744,  1744,  1744,  1744,  1744,  1744,  1744,  1744,  1744,  1744,
    1744,  1744,  1744,  1744,  1744,  1744,  1744,  1744,  1744,  1744,
    1745,  1745,  1746,  1746,  1747,  1747,  1748,  1748,  1748,  1749,
    1749,  1749,  1749,  1749,  1750,  1750,  1751,  1751,  1752,  1752,
    1753,  1753,  1754,  1754,  1754,  1754,  1754,  1754,  1754,  1755,
    1755,  1755,  1755,  1755,  1755,  1755,  1755,  1755,  1755,  1756,
    1756,  1757,  1757,  1758,  1758,  1759,  1759,  1760,  1760,  1760,
    1760,  1760,  1761,  1761,  1762,  1762,  1763,  1763,  1763,  1763,
    1763,  1764,  1764,  1766,  1765,  1767,  1767,  1768,  1768,  1768,
    1769,  1769,  1769,  1770,  1770,  1771,  1772,  1772,  1773,  1774,
    1775,  1775,  1775,  1776,  1777,  1778,  1779,  1779,  1779,  1779,
    1779,  1779,  1779,  1779,  1780,  1781,  1781,  1781,  1782,  1782,
    1782,  1782,  1782,  1783,  1783,  1783,  1783,  1783,  1783,  1784,
    1784,  1785,  1786,  1787,  1787,  1787,  1788,  1789,  1789,  1789,
    1790,  1790,  1790,  1792,  1791,  1793,  1794,  1794,  1794,  1794,
    1795,  1795,  1796,  1796,  1798,  1797,  1799,  1799,  1801,  1802,
    1803,  1804,  1800,  1806,  1807,  1808,  1809,  1805,  1810,  1810,
    1810,  1810,  1810,  1810,  1811,  1811,  1812,  1812,  1812,  1813,
    1813,  1814,  1814,  1814,  1815,  1815,  1816,  1816,  1816,  1817,
    1817,  1818,  1818,  1819,  1819,  1820,  1821,  1821,  1822,  1822,
    1823,  1823,  1823,  1824,  1824,  1825,  1825,  1826,  1826,  1827,
    1827,  1828,  1828,  1829,  1829,  1830,  1830,  1830,  1831,  1831,
    1832
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     3,     6,     3,     3,     1,     0,
       4,     2,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     1,     4,     1,     2,     0,     4,
       0,     2,     3,     1,     2,     0,     3,     1,     2,     0,
       6,     0,     6,     1,     3,     3,     3,     3,     3,     3,
       3,     3,     2,     3,     1,     3,     1,     2,     3,     5,
       7,     2,     3,     1,     3,     3,     2,     3,     1,     3,
       1,     1,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     5,     3,     3,     3,
       3,     3,     3,     3,     3,     1,     0,     1,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     3,     3,     3,     0,     3,
       9,     6,     7,     9,     4,    10,     0,     6,     2,     9,
       7,     6,     7,    11,     7,     8,     7,     0,     3,     3,
       6,     3,     0,     3,    12,    11,    11,     1,     1,     1,
       3,     2,     2,     2,     2,     2,     2,     2,     0,    12,
       0,     6,     2,     0,     1,     3,     1,     0,     2,     0,
       2,     0,     1,     3,     4,     0,     2,     0,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     0,     2,     0,     2,     2,     2,
       2,     2,     3,     3,     1,     1,     1,     2,     3,     3,
       3,     0,     3,     0,     1,     3,     1,     3,     0,     1,
       3,     1,     4,     0,     1,     1,     1,     0,     3,     2,
       3,     0,     3,     5,     5,     0,     7,     0,     6,     1,
       1,     1,     3,     1,     1,     1,     3,     0,     1,     1,
       1,     1,     2,     1,     3,     1,     1,     0,     1,     0,
       2,     3,     5,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     4,
       0,     1,     1,     1,     3,     1,     3,     3,     1,     2,
       1,     1,     1,     1,     3,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     0,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     5,     0,     2,
       0,     3,     0,     2,     2,     2,     2,     0,     6,     2,
       0,     2,     1,     1,     3,     0,     0,     0,     7,     0,
       2,     2,     1,     1,     0,     0,     8,     0,     6,     1,
       2,     1,     2,     0,     0,     6,     0,     0,     6,     0,
       2,     0,     5,     0,     1,     0,     5,     0,     2,     0,
       5,     4,     0,     0,     8,     0,     0,     8,     1,     1,
       1,     1,     1,     0,     2,     0,     4,     0,     1,     1,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     1,     1,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     1,     1,     3,     1,
       0,     1,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     0,     1,     1,     3,     1,     1,     1,     2,     1,
       1,     2,     3,     1,     3,     3,     3,     3,     3,     3,
       3,     4,     3,     1,     1,     3,     3,     3,     1,     1,
       2,     1,     2,     1,     0,     2,     1,     2,     1,     6,
       6,     5,     4,     5,     4,     5,     0,     1,     0,     3,
       0,     2,     0,     8,     9,     0,     1,     1,     3,     0,
       2,     0,     3,     1,     3,     5,     0,     4,     3,     1,
       1,     1,     3,     1,     3,     0,     4,     1,     3,     1,
       1,     0,     3,     1,     3,     3,     0,     1,     2,     1,
       3,     4,     3,     3,     3,     4,     4,     3,     1,     2,
       1,     4,     0,     1,     1,     2,     1,     1,     1,     0,
       3,     1,     2,     1,     3,     0,     1,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     5,     1,
       1,     3,     4,     4,     3,     2,     2,     3,     3,     2,
       3,     3,     1,     1,     1,     4,     4,     4,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     1,     3,     0,     1,     6,     7,
       7,     7,     8,     3,     4,     0,     2,     0,     1,     0,
       1,     2,     2,     9,     0,     2,     0,     1,     1,     3,
       3,     3,     1,     2,     1,     1,     3,     2,     3,     2,
       2,     1,     3,     3,     2,     3,     1,     2,     2,     2,
       1,     2,     1,     1,     1,     2,     3,     2,     3,     2,
       2,     5,     5,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     2,     1,     2,     1,
       2,     3,     2,     1,     1,     1,     1,     1,     1,     2,
       0,     1,     1,     1,     1,     1,     0,     1,     0,     1,
       1,     5,     0,     3,     0,     2,     3,     0,     1,     2,
       1,     1,     1,     1,     3,     3,     3,     3,     0,     1,
       0,     1,     0,     1,     2,     1,     1,     2,     2,     2,
       4,     3,     1,     3,     2,     1,     2,     1,     2,     2,
       2,     2,     3,     2,     2,     2,     1,     3,     3,     1,
       0,     3,     1,     1,     1,     1,     1,     1,     2,     1,
       1,     2,     1,     1,     1,     0,     2,     1,     1,     1,
       1,     1,     1,     0,     2,     0,     1,     1,     2,     2,
       1,     2,     2,     0,     1,     1,     1,     3,     1,     3,
       0,     1,     0,     4,     0,     1,     5,     0,     3,     3,
       1,     0,     2,     2,     2,     0,     3,     3,     6,     6,
       1,     1,     2,     2,     2,     2,     2,     1,     1,     0,
       1,     1,     1,     1,     0,     1,     1,     2,     1,     2,
       2,     3,     2,     3,     0,     1,     1,     2,     1,     3,
       0,     1,     1,     2,     1,     0,     1,     1,     2,     1,
       1,     3,     2,     1,     3,     3,     1,     3,     3,     0,
       1,     2,     2,     1,     1,     1,     1,     1,     3,     1,
       2,     5,     3,     1,     1,     4,     0,     1,     0,     2,
       1,     3,     4,     4,     0,     5,     0,     5,     0,     5,
       0,     5,     0,     4,     0,    10,     7,     6,     6,     6,
       4,     7,     7,     6,     8,     7,     5,     5,     5,     5,
       0,     2,     8,     3,     0,     2,     2,     0,     1,     1,
       2,     2,     2,     2,     5,     3,     3,     3,     3,     5,
       4,     3,     4,     4,     2,     2,     2,     0,     2,     2,
       1,     2,     2,     2,     2,     3,     0,     3,     1,     4,
       0,     3,     0,     2,     0,     1,     1,     2,     1,     3,
       1,     2,     0,     1,     1,     3,     2,     2,     3,     6,
       5,     3,     4,     4,     4,     4,     5,     4,     3,     3,
       8,     7,     4,     4,     1,     1,     0,     1,     2,     2,
       1,     1,     1,     3,     3,     1,     3,     1,     3,     6,
       5,     2,     6,     5,     4,     4,     3,     3,     3,     3,
       2,     2,     6,     8,     5,     5,     4,     4,     4,     3,
       5,     5,     5,     5,     1,     3,     1,     1,     1,     0,
       1,     1,     2,     2,     3,     1,     1,     3,     1,     1,
       0,     1,     0,     1,     0,     1,     1,     0,     2,     1,
       0,     1,     1,     1,     2,     2,     2,     0,     1,     1,
       3,     1,     1,     1,     3,     3,     3,     1,     1,     4,
       0,     0,    11,     3,     0,     1,     1,     3,     3,     6,
       2,     2,     0,     3,     0,     3,     0,     3,     0,     3,
       0,     1,     1,     3,     1,     1,     0,     2,     1,     3,
       3,     3,     1,     4,     0,     1,     1,     5,     0,     1,
       1,     2,     1,     1,     1,     5,     0,     3,     0,     5,
       4,     2,     4,     0,     1,     1,     2,     1,     1,     1,
       1,     1,     2,     4,     0,     1,     1,     0,     4,     3,
       3,     5,     1,     3,     3,     5,     7,     1,     3,     2,
       1,     1,     8,     5,     1,     3,     3,     4,     0,     4,
       0,     2,     1,     2,     1,     1,     3,     2,     3,     3,
       2,     3,     4,     3,     4,     2,     3,     2,     1,     4,
       4,     4,     4,     3,     3,     4,     1,     1,     1,     9,
       8,     0,     1,     2,     1,     1,     1,     3,     2,     2,
       0,     1,     2,     1,     1,     1,     2,     1,     3,     4,
       4,     1,     1,     2,     0,     1,     2,     1,     3,     1,
       1,     1,     2,     0,     2,     2,     1,     1,     0,     2,
       3,     3,     3,     2,     3,     4,     3,     4,     3,     4,
       1,     3,     4,     3,     4,     1,     3,     4,     5,     7,
       6,     8,     6,     5,     6,     4,     3,     5,     4,     6,
       3,     4,     1,     1,     0,     3,     3,     3,     3,     3,
       3,     5,     5,     3,     3,     3,     3,     3,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     1,     1,     1,     1,     3,     2,
       2,     2,     2,     1,     3,     5,     6,     2,     4,     7,
       2,     7,     9,    12,     5,     6,     6,     4,     4,     5,
       3,     3,     0,     1,     4,     6,     2,     4,     4,     4,
      10,     6,     8,     8,     6,     4,     4,     6,     4,     4,
       4,     6,     4,     7,     7,     7,     6,     6,     6,     6,
       3,     4,     6,     8,     2,     2,     8,     8,     6,     6,
       1,     6,     6,     8,     8,     6,     8,     6,     2,     8,
       8,     2,     2,     2,     0,     2,     4,     4,     4,     4,
       3,     8,     6,     8,     4,     6,     4,     6,     8,     4,
       3,     6,     4,     6,     4,     7,     7,    10,     1,     4,
       4,     4,     4,     4,     6,     4,     4,     6,     2,     3,
       0,     4,     0,     3,     0,     1,     1,     3,     2,     1,
       1,     5,     6,     5,     5,     5,     7,     5,     6,     5,
       6,     5,     6,     5,     6,     5,     6,     5,     5,     5,
       5,     5,     6,     8,     4,     4,     4,     4,     4,     5,
       7,     7,     6,     6,     9,     0,     3,     1,     1,     1,
       1,     2,     0,     2,     0,     2,     2,     0,     2,     2,
       0,     1,     2,     1,     1,     1,     3,     4,     0,     1,
       0,     3,     0,     3,     0,     3,     1,     1,     2,     2,
       2,     4,     2,     4,     1,     2,     2,     2,     4,     0,
       3,     2,     2,     3,     1,     1,     1,     4,     2,     3,
       1,     4,     0,     1,     0,     2,     0,     3,     3,     1,
       2,     2,     3,     2,     1,     2,     1,     2,     1,     1,
       2,     2,     2,     1,     1,     2,     1,     1,     1,     1,
       1,     1,     1,     0,     1,     1,     3,     1,     3,     1,
       3,     0,     1,     0,     2,     4,     5,     1,     1,     4,
       1,     1,     5,     7,     5,     7,     3,     3,     3,     4,
       4,     1,     2,     2,     1,     3,     3,     0,     1,     0,
       1,     0,     1,     4,     1,     1,     1,     1,     1,     1,
       3,     5,     3,     3,     4,     3,     3,     3,     4,     8,
       5,     4,     1,     3,     3,     7,     4,     0,     1,     0,
       1,     1,     2,     1,     2,     3,     3,     1,     1,     2,
       0,     2,     3,     3,     1,     1,     6,     6,     1,     2,
       0,     1,     1,     0,     1,     1,     1,     1,     3,     1,
       1,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     0,     1,     0,
       2,     0,     1,     0,     1,     2,     0,     2,     2,     3,
       3,     1,     4,     0,     3,     1,     3,     0,     2,     1,
       3,     3,     0,     4,     3,     1,     0,     1,     3,     1,
       2,     0,     1,     3,     3,     1,     0,     1,     1,     1,
       0,     1,     2,     1,     3,     3,     1,     1,     1,     1,
       1,     0,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     1,     2,
       1,     2,     5,     2,     1,     2,     6,     6,     4,     6,
       4,     5,     4,     4,     5,     4,     4,     4,     5,     5,
       4,     4,     6,     4,     1,     3,     1,     3,     0,     2,
       0,     1,     0,     1,     1,     3,     1,     1,     9,    10,
       8,     6,     7,     6,     0,     1,     1,     1,     1,     1,
       0,     1,     1,     3,     4,     1,     3,     4,     3,     1,
       2,     1,     2,     1,     1,     1,     3,     1,     3,     1,
       1,     1,     0,     1,     3,     4,     0,     1,     3,     1,
       1,     1,     0,     3,     0,     5,    10,     0,     1,     3,
       1,     3,     0,     1,    10,     7,     8,     0,     2,     0,
       2,     1,     1,     1,     3,     0,     1,     0,     1,     1,
       3,     1,     1,     2,     2,     2,     1,     1,     1,     1,
       0,     3,     3,     5,     5,     4,     5,     5,     2,     4,
       4,     4,     7,     3,     3,     2,     6,     7,     7,     3,
       6,     6,     3,     3,     2,     5,     4,     3,     4,     3,
       3,     2,     2,     4,     6,     3,     5,     7,     5,     4,
       4,     3,     4,     3,     3,     3,     3,     3,     4,     4,
       4,     4,     4,     4,     4,     4,     4,     1,     1,     1,
       1,     0,     1,     0,     2,     0,     1,     0,     1,     0,
       1,     1,     2,     1,     1,     0,     2,     0,     2,     0,
       2,     1,     3,     3,     1,     1,     1,     1,     1,     3,
       1,     1,     0,     3,     2,     1,     0,     1,     1,     0,
       4,     0,     4,     1,     0,     3,     0,     3,     3,     1,
       2,     2,     2,     2,     2,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     0,
       1,     0,     3,     3,     3,     1,     0,     2,     0,     4,
       0,     4,     0,     3,     1,     0,     1,     0,     2,     0,
       3,     3,     3,     2,     2,     3,     0,     1,     1,     2,
      18,     1,     1,     0,     1,     0,     1,     1,     0,     1,
       1,     1,     0,     2,     2,     1,     3,     4,     3,     3,
       0,     2,     2,     1,     3,     3,     0,     4,     0,     3,
       1,     1,     0,     3,     2,     3,     1,     1,     2,     0,
       2,     3,     1,     3,     1,     1,     2,     2,     1,     1,
       1,     1,     1,     2,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     2,     2,     0,     1,
       1,     1,     3,     5,     2,     1,     1,     1,     1,     1,
       3,     5,     1,     3,     2,     4,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     2,     1,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     2,     2,     5,     5,     7,     7,     3,     3,     3,
       6,     6,     6,     4,     0,     2,     4,     6,     1,     3,
       1,     2,     2,     0,     2,     1,     3,     2,     1,     1,
       1,     1,     1,     1,     0,     1,     1,     1,     0,     2,
       2,     2,     0,     2,     2,     2,     2,     2,     3,     3,
       4,     6,     2,     3,     3,     2,     1,     3,     3,     2,
       2,     1,     0,     2,     3,     0,     2,     2,     2,     2,
       2,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     3,     0,     3,     3,     1,     1,     1,     3,
       3,     1,     1,     2,     2,     2,     1,     1,     1,     1,
       3,     4,     5,     4,     2,     6,     5,     9,     3,     3,
       2,     4,     3,     6,     7,    10,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     4,     7,     0,
       9,     8,     6,     5,     9,     0,    11,     7,     0,     1,
       1,     1,     0,     1,     1,     3,     2,     3,     2,     2,
       2,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     2,     2,     1,     3,     2,     2,     2,
       2,     2,     2,     2,     2,     1,     1,     2,     2,     2,
       0,     3,     0,     1,     3,     1,     2,     2,     2,     1,
       3,     3,     1,     3,     1,     3,     1,     3,     0,     3,
       0,     3,     4,     5,     4,     6,     6,     7,     1,     7,
       9,     5,     6,     8,     4,     7,     7,     8,     2,     1,
       3,     1,     3,     0,     3,     1,     3,     0,     2,     2,
       2,     2,     0,     3,     0,     3,     0,     3,     4,     3,
       3,     0,     3,     0,     3,     0,     1,     0,     3,     2,
       0,     1,     2,     0,     1,     4,     4,     5,     2,     3,
       0,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     3,     3,     4,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     3,     1,     2,     1,     2,     3,     3,     3,
       0,     3,     3,     0,     7,     2,     0,     3,     4,     4,
       1,     1,     0,     2,     0,    12,     7,     6,     0,     0,
       0,     0,    14,     0,     0,     0,     0,    11,     4,     4,
       3,     4,     3,     3,     0,     2,     1,     3,     5,     1,
       1,     0,     1,     1,     0,     2,     0,     1,     3,     5,
       3,     3,     3,     1,     3,     4,     6,    10,     1,     5,
       0,     2,     3,     1,     1,     0,     3,     1,     3,     1,
       3,     1,     2,     0,     3,     0,     1,     1,     0,     1,
       1
};


#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)
#define YYEMPTY         (-2)
#define YYEOF           0

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error: cannot back up")); \
      YYERROR;                                                  \
    }                                                           \
while (0)

/* Error token number */
#define YYTERROR        1
#define YYERRCODE       256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)                                \
    do                                                                  \
      if (N)                                                            \
        {                                                               \
          (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;        \
          (Current).first_column = YYRHSLOC (Rhs, 1).first_column;      \
          (Current).last_line    = YYRHSLOC (Rhs, N).last_line;         \
          (Current).last_column  = YYRHSLOC (Rhs, N).last_column;       \
        }                                                               \
      else                                                              \
        {                                                               \
          (Current).first_line   = (Current).last_line   =              \
            YYRHSLOC (Rhs, 0).last_line;                                \
          (Current).first_column = (Current).last_column =              \
            YYRHSLOC (Rhs, 0).last_column;                              \
        }                                                               \
    while (0)
#endif

#define YYRHSLOC(Rhs, K) ((Rhs)[K])


/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL

/* Print *YYLOCP on YYO.  Private, do not rely on its existence. */

YY_ATTRIBUTE_UNUSED
static unsigned
yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)
{
  unsigned res = 0;
  int end_col = 0 != yylocp->last_column ? yylocp->last_column - 1 : 0;
  if (0 <= yylocp->first_line)
    {
      res += YYFPRINTF (yyo, "%d", yylocp->first_line);
      if (0 <= yylocp->first_column)
        res += YYFPRINTF (yyo, ".%d", yylocp->first_column);
    }
  if (0 <= yylocp->last_line)
    {
      if (yylocp->first_line < yylocp->last_line)
        {
          res += YYFPRINTF (yyo, "-%d", yylocp->last_line);
          if (0 <= end_col)
            res += YYFPRINTF (yyo, ".%d", end_col);
        }
      else if (0 <= end_col && yylocp->first_column < end_col)
        res += YYFPRINTF (yyo, "-%d", end_col);
    }
  return res;
 }

#  define YY_LOCATION_PRINT(File, Loc)          \
  yy_location_print_ (File, &(Loc))

# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Type, Value, Location, YYTHD, parse_tree); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*----------------------------------------.
| Print this symbol's value on YYOUTPUT.  |
`----------------------------------------*/

static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  YYUSE (yytype);
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYFPRINTF (yyoutput, "%s %s (",
             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD, parse_tree);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  unsigned long int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       yystos[yyssp[yyi + 1 - yynrhs]],
                       &(yyvsp[(yyi + 1) - (yynrhs)])
                       , &(yylsp[(yyi + 1) - (yynrhs)])                       , YYTHD, parse_tree);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, yylsp, Rule, YYTHD, parse_tree); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
yystrlen (const char *yystr)
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            /* Fall through.  */
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}




/*----------.
| yyparse.  |
`----------*/

int
yyparse (class THD *YYTHD, class Parse_tree_root **parse_tree)
{
/* The lookahead symbol.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

/* Location data for the lookahead symbol.  */
static YYLTYPE yyloc_default
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  = { 1, 1, 1, 1 }
# endif
;
YYLTYPE yylloc = yyloc_default;

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       'yyss': related to states.
       'yyvs': related to semantic values.
       'yyls': related to locations.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    /* The location stack.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls;
    YYLTYPE *yylsp;

    /* The locations where the error started and ended.  */
    YYLTYPE yyerror_range[3];

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yylsp = yyls = yylsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  yylsp[0] = yylloc;
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        YYSTYPE *yyvs1 = yyvs;
        yytype_int16 *yyss1 = yyss;
        YYLTYPE *yyls1 = yyls;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * sizeof (*yyssp),
                    &yyvs1, yysize * sizeof (*yyvsp),
                    &yyls1, yysize * sizeof (*yylsp),
                    &yystacksize);

        yyls = yyls1;
        yyss = yyss1;
        yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yytype_int16 *yyss1 = yyss;
        union yyalloc *yyptr =
          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
        YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
                  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = yylex (&yylval, &yylloc, YYTHD);
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 3:
#line 2179 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
            static_cast<Expression_parser_state *>(YYP)->result= (yyvsp[-1].item);
          }
#line 24902 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 4:
#line 2184 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating partition info string into
              partition_info data structure.
            */
            CONTEXTUALIZE((yyvsp[-1].partition_clause));
            static_cast<Partition_expr_parser_state *>(YYP)->result=
              &(yyvsp[-1].partition_clause)->part_info;
          }
#line 24916 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 5:
#line 2194 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating generated column info string into
              partition_info data structure.
            */

            // Check gcol expression for the "PARSE_GCOL_EXPR" prefix:
            if (!is_identifier((yyvsp[-4].lexer.lex_str), "PARSE_GCOL_EXPR"))
              MYSQL_YYABORT;

            auto gcol_info= NEW_PTN Value_generator;
            if (gcol_info == NULL)
              MYSQL_YYABORT; // OOM
            ITEMIZE((yyvsp[-2].item), &(yyvsp[-2].item));
            gcol_info->expr_item= (yyvsp[-2].item);
            static_cast<Gcol_expr_parser_state *>(YYP)->result= gcol_info;
          }
#line 24938 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 6:
#line 2212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            static_cast<Common_table_expr_parser_state *>(YYP)->result= (yyvsp[-1].subquery);
          }
#line 24946 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 7:
#line 2216 "sql_yacc.yy" /* yacc.c:1646  */
    {
           ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
           static_cast<Derived_expr_parser_state *>(YYP)->result= (yyvsp[-1].item);
         }
#line 24955 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 8:
#line 2224 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            if (!thd->is_bootstrap_system_thread() &&
                !thd->m_parser_state->has_comment())
            {
              my_error(ER_EMPTY_QUERY, MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 24971 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 9:
#line 2236 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip = YYLIP;

            if (YYTHD->get_protocol()->has_client_capability(CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 24998 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 11:
#line 2261 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 25007 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 14:
#line 2273 "sql_yacc.yy" /* yacc.c:1646  */
    { *parse_tree= (yyvsp[0].top_level_node); }
#line 25013 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 16:
#line 2279 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25019 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 17:
#line 2280 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25025 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 18:
#line 2281 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25031 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 20:
#line 2283 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25037 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 21:
#line 2284 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25043 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 23:
#line 2286 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25049 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 24:
#line 2287 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25055 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 25:
#line 2288 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25061 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 27:
#line 2290 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25067 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 28:
#line 2291 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25073 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 30:
#line 2293 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25079 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 32:
#line 2295 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25085 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 34:
#line 2297 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25091 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 35:
#line 2298 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25097 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 36:
#line 2299 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25103 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 37:
#line 2300 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25109 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 43:
#line 2306 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25115 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 47:
#line 2310 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25121 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 48:
#line 2311 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25127 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 49:
#line 2312 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25133 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 51:
#line 2314 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25139 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 52:
#line 2315 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25145 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 55:
#line 2318 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25151 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 57:
#line 2320 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25157 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 58:
#line 2321 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25163 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 59:
#line 2322 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25169 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 60:
#line 2323 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25175 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 61:
#line 2324 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25181 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 62:
#line 2325 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25187 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 63:
#line 2326 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25193 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 65:
#line 2328 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25199 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 66:
#line 2329 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25205 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 67:
#line 2330 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25211 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 68:
#line 2331 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25217 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 70:
#line 2333 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25223 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 71:
#line 2334 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25229 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 73:
#line 2336 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25235 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 74:
#line 2337 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25241 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 76:
#line 2339 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25247 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 80:
#line 2343 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25253 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 81:
#line 2344 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25259 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 82:
#line 2345 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25265 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 83:
#line 2346 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25271 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 86:
#line 2349 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25277 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 87:
#line 2350 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25283 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 89:
#line 2352 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25289 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 90:
#line 2353 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25295 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 91:
#line 2354 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25301 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 93:
#line 2356 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; CONTEXTUALIZE((yyvsp[0].set)); }
#line 25307 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 142:
#line 2405 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25313 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 143:
#line 2406 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25319 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 144:
#line 2407 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25325 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 145:
#line 2408 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25331 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 147:
#line 2410 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25337 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 148:
#line 2411 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25343 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 150:
#line 2413 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25349 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 151:
#line 2414 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25355 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 152:
#line 2419 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 25366 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 155:
#line 2434 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[-2].lexer.lex_str));
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
#line 25387 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 156:
#line 2454 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= false;
          }
#line 25398 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 157:
#line 2461 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= true;
          }
#line 25409 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 158:
#line 2471 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 25420 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 159:
#line 2478 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25426 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 164:
#line 2493 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[0].lexer.lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
#line 25437 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 165:
#line 2505 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
#line 25449 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 166:
#line 2513 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lexer.lex_str).str;
          }
#line 25459 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 167:
#line 2524 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "CHANGE MASTER",
                                        "CHANGE REPLICATION SOURCE");
          }
#line 25468 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 169:
#line 2533 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is cleared
              in THD::cleanup_after_query. So it is guaranteed to be empty here.
            */
            assert(Lex->mi.repl_ignore_server_ids.empty());
            lex->mi.set_unspecified();
          }
#line 25483 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 170:
#line 2544 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 25492 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 171:
#line 2549 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            assert(!lex->m_sql_cmd);
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_FILTER;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_change_repl_filter();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25506 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 172:
#line 2559 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 25515 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 175:
#line 2571 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_DB);
          }
#line 25526 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 176:
#line 2578 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_DB);
          }
#line 25537 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 177:
#line 2585 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
           filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_TABLE);
          }
#line 25548 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 178:
#line 2592 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_TABLE);
          }
#line 25559 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 179:
#line 2599 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_WILD_DO_TABLE);
          }
#line 25570 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 180:
#line 2606 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list),
                                             OPT_REPLICATE_WILD_IGNORE_TABLE);
          }
#line 25582 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 181:
#line 2614 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_REWRITE_DB);
          }
#line 25593 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 182:
#line 2623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 25603 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 183:
#line 2629 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 25611 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 184:
#line 2636 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 25622 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 185:
#line 2643 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 25631 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 186:
#line 2651 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *db_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                               thd->charset());
            (yyval.item)= db_item;
          }
#line 25642 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 187:
#line 2660 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 25652 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 188:
#line 2666 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 25660 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 189:
#line 2672 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-3].item));
            (yyval.item_list)->push_back((yyvsp[-1].item));
          }
#line 25672 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 190:
#line 2680 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].item_list)->push_back((yyvsp[-3].item));
            (yyvsp[-6].item_list)->push_back((yyvsp[-1].item));
            (yyval.item_list)= (yyvsp[-6].item_list);
          }
#line 25682 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 191:
#line 2688 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 25692 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 192:
#line 2694 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 25700 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 193:
#line 2701 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 25711 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 194:
#line 2708 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 25720 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 195:
#line 2716 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item_string *table_item= NEW_PTN Item_string((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length,
                                                         thd->charset());
            table_item->append(thd->strmake(".", 1), 1);
            table_item->append((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.item)= table_item;
          }
#line 25733 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 196:
#line 2728 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 25743 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 197:
#line 2734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 25751 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 198:
#line 2741 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 25762 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 199:
#line 2748 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 25771 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 200:
#line 2756 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *string_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                                   thd->charset());
            (yyval.item)= string_item;
          }
#line 25782 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 203:
#line 2771 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_AUTO_POSITION",
                                        "SOURCE_AUTO_POSITION");

          }
#line 25792 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 205:
#line 2781 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_HOST",
                                        "SOURCE_HOST");
          }
#line 25801 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 207:
#line 2790 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_BIND",
                                        "SOURCE_BIND");

          }
#line 25811 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 209:
#line 2800 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_USER",
                                        "SOURCE_USER");
          }
#line 25820 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 211:
#line 2809 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_PASSWORD",
                                        "SOURCE_PASSWORD");
          }
#line 25829 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 213:
#line 2818 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_PORT",
                                        "SOURCE_PORT");
          }
#line 25838 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 215:
#line 2827 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_CONNECT_RETRY",
                                        "SOURCE_CONNECT_RETRY");
          }
#line 25847 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 217:
#line 2836 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_RETRY_COUNT",
                                        "SOURCE_RETRY_COUNT");
          }
#line 25856 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 219:
#line 2845 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_DELAY",
                                        "SOURCE_DELAY");
          }
#line 25865 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 221:
#line 2854 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL",
                                        "SOURCE_SSL");
          }
#line 25874 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 223:
#line 2863 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CA",
                                        "SOURCE_SSL_CA");
          }
#line 25883 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 225:
#line 2872 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CAPATH",
                                        "SOURCE_SSL_CAPATH");
          }
#line 25892 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 227:
#line 2881 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CIPHER",
                                        "SOURCE_SSL_CIPHER");
          }
#line 25901 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 229:
#line 2890 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CRL",
                                        "SOURCE_SSL_CRL");
          }
#line 25910 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 231:
#line 2899 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CRLPATH",
                                        "SOURCE_SSL_CRLPATH");
          }
#line 25919 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 233:
#line 2908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_KEY",
                                        "SOURCE_SSL_KEY");
          }
#line 25928 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 235:
#line 2917 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_VERIFY_SERVER_CERT",
                                        "SOURCE_SSL_VERIFY_SERVER_CERT");
          }
#line 25937 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 237:
#line 2926 "sql_yacc.yy" /* yacc.c:1646  */
    {
             push_deprecated_warn(YYTHD, "MASTER_TLS_VERSION",
                                         "SOURCE_TLS_VERSION");
          }
#line 25946 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 239:
#line 2935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_TLS_CIPHERSUITES",
                                        "SOURCE_TLS_CIPHERSUITES");
          }
#line 25955 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 241:
#line 2944 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CERT",
                                        "SOURCE_SSL_CERT");
          }
#line 25964 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 243:
#line 2953 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_PUBLIC_KEY_PATH",
                                        "SOURCE_PUBLIC_KEY_PATH");
          }
#line 25973 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 245:
#line 2962 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "GET_MASTER_PUBLIC_KEY",
                                        "GET_SOURCE_PUBLIC_KEY");
          }
#line 25982 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 247:
#line 2971 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_HEARTBEAT_PERIOD",
                                        "SOURCE_HEARTBEAT_PERIOD");
          }
#line 25991 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 249:
#line 2980 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_COMPRESSION_ALGORITHM",
                                        "SOURCE_COMPRESSION_ALGORITHM");
          }
#line 26000 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 251:
#line 2989 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_ZSTD_COMPRESSION_LEVEL",
                                        "SOURCE_ZSTD_COMPRESSION_LEVEL");
          }
#line 26009 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 253:
#line 2998 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.host = (yyvsp[0].lexer.lex_str).str;
          }
#line 26017 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 254:
#line 3002 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.network_namespace = (yyvsp[0].lexer.lex_str).str;
          }
#line 26025 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 255:
#line 3006 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.bind_addr = (yyvsp[0].lexer.lex_str).str;
          }
#line 26033 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 256:
#line 3010 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.user = (yyvsp[0].lexer.lex_str).str;
          }
#line 26041 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 257:
#line 3014 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.password = (yyvsp[0].lexer.lex_str).str;
            if (strlen((yyvsp[0].lexer.lex_str).str) > 32)
            {
              my_error(ER_CHANGE_MASTER_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
            Lex->contains_plaintext_password= true;
          }
#line 26055 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 258:
#line 3024 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 26063 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 259:
#line 3028 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 26071 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 260:
#line 3032 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.retry_count= (yyvsp[0].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 26080 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 261:
#line 3037 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              const char *msg= YYTHD->strmake((yylsp[0]).cpp.start, (yylsp[0]).cpp.end - (yylsp[0]).cpp.start);
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 26095 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 262:
#line 3048 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26104 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 263:
#line 3053 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_ca= (yyvsp[0].lexer.lex_str).str;
          }
#line 26112 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 264:
#line 3057 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_capath= (yyvsp[0].lexer.lex_str).str;
          }
#line 26120 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 265:
#line 3061 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_version= (yyvsp[0].lexer.lex_str).str;
          }
#line 26128 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 267:
#line 3066 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cert= (yyvsp[0].lexer.lex_str).str;
          }
#line 26136 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 268:
#line 3070 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cipher= (yyvsp[0].lexer.lex_str).str;
          }
#line 26144 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 269:
#line 3074 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_key= (yyvsp[0].lexer.lex_str).str;
          }
#line 26152 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 270:
#line 3078 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26161 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 271:
#line 3083 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crl= (yyvsp[0].lexer.lex_str).str;
          }
#line 26169 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 272:
#line 3087 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crlpath= (yyvsp[0].lexer.lex_str).str;
          }
#line 26177 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 273:
#line 3091 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.public_key_path= (yyvsp[0].lexer.lex_str).str;
          }
#line 26185 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 274:
#line 3095 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.get_public_key= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26195 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 275:
#line 3101 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *num= (yyvsp[0].item_num);
            ITEMIZE(num, &num);

            Lex->mi.heartbeat_period= (float) num->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > replica_net_timeout)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning(YYTHD, Sql_condition::SL_WARNING,
                             ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 26233 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 276:
#line 3135 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 26241 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 277:
#line 3139 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.compression_algorithm = (yyvsp[0].lexer.lex_str).str;
           }
#line 26249 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 278:
#line 3143 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.zstd_compression_level = (yyvsp[0].ulong_num);
           }
#line 26257 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 279:
#line 3147 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.auto_position= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26267 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 281:
#line 3154 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) != 0 && (yyvsp[0].ulong_num) != 1) {
              const char* wrong_value = YYTHD->strmake((yylsp[0]).raw.start, (yylsp[0]).raw.length());
              my_error(ER_REQUIRE_ROW_FORMAT_INVALID_VALUE, MYF(0), wrong_value);
            }
            else {
              Lex->mi.require_row_format = (yyvsp[0].ulong_num);
            }
          }
#line 26281 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 283:
#line 3165 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->mi.m_source_connection_auto_failover =
                  LEX_MASTER_INFO::LEX_MI_DISABLE;
                break;
            case 1:
                Lex->mi.m_source_connection_auto_failover =
                  LEX_MASTER_INFO::LEX_MI_ENABLE;
                break;
            default:
                YYTHD->syntax_error_at((yylsp[0]));
                MYSQL_YYABORT;
            }
          }
#line 26301 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 289:
#line 3192 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids.push_back((yyvsp[0].ulong_num));
          }
#line 26309 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 290:
#line 3198 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= false;
            Lex->mi.privilege_checks_username= (yyvsp[0].lex_user)->user.str;
            Lex->mi.privilege_checks_hostname= (yyvsp[0].lex_user)->host.str;
          }
#line 26319 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 291:
#line 3204 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= true;
            Lex->mi.privilege_checks_username= NULL;
            Lex->mi.privilege_checks_hostname= NULL;
          }
#line 26329 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 292:
#line 3213 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_STREAM;
          }
#line 26337 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 293:
#line 3217 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_ON;
          }
#line 26345 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 294:
#line 3221 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_OFF;
          }
#line 26353 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 295:
#line 3228 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_MASTER_INFO::LEX_MI_ANONYMOUS_TO_GTID_OFF;
          }
#line 26361 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 296:
#line 3232 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_MASTER_INFO::LEX_MI_ANONYMOUS_TO_GTID_LOCAL;
          }
#line 26369 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 297:
#line 3236 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_MASTER_INFO::LEX_MI_ANONYMOUS_TO_GTID_UUID;
            Lex->mi.assign_gtids_to_anonymous_transactions_manual_uuid = (yyvsp[0].lexer.lex_str).str;
            if (!binary_log::Uuid::is_valid((yyvsp[0].lexer.lex_str).str, binary_log::Uuid::TEXT_LENGTH))
            {
              my_error(ER_WRONG_VALUE, MYF(0), "UUID", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 26383 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 298:
#line 3250 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_STRING;
            Lex->mi.tls_ciphersuites_string= (yyvsp[0].lexer.lex_str).str;
          }
#line 26392 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 299:
#line 3255 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_NULL;
            Lex->mi.tls_ciphersuites_string = NULL;
          }
#line 26401 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 300:
#line 3263 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_LOG_FILE",
                                        "SOURCE_LOG_FILE");
          }
#line 26410 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 302:
#line 3272 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_LOG_POS",
                                        "SOURCE_LOG_POS");
          }
#line 26419 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 304:
#line 3281 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.log_file_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 26427 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 305:
#line 3285 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.pos = (yyvsp[0].ulonglong_number);
            /*
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors.
               We need to do it in this file, because only there we know that
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
#line 26447 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 306:
#line 3301 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 26455 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 307:
#line 3305 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
#line 26466 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 308:
#line 3315 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = {}; }
#line 26472 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 309:
#line 3317 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 26478 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 310:
#line 3323 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table),
                                             (yyvsp[-2].table_element_list),
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 26491 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 311:
#line 3333 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].is_not_empty), (yyvsp[-2].is_not_empty), (yyvsp[-1].table),
                                             NULL,
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 26504 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 312:
#line 3343 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].is_not_empty), (yyvsp[-3].is_not_empty), (yyvsp[-2].table), (yyvsp[0].table));
          }
#line 26512 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 313:
#line 3348 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table), (yyvsp[-1].table));
          }
#line 26520 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 314:
#line 3355 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_role(!!(yyvsp[-1].is_not_empty), (yyvsp[0].user_list));
          }
#line 26528 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 315:
#line 3365 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_resource_group(to_lex_cstring((yyvsp[-6].lexer.lex_str)), (yyvsp[-3].resource_group_type), (yyvsp[-2].resource_group_vcpu_list_type), (yyvsp[-1].resource_group_priority_type),
                                                 (yyvsp[0].resource_group_state_type).is_default ? true :
                                                 (yyvsp[0].resource_group_state_type).value);
          }
#line 26538 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 316:
#line 3374 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 26550 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 317:
#line 3382 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            lex->create_info->options= (yyvsp[-3].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 26561 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 318:
#line 3389 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26567 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 319:
#line 3394 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CREATE_USER;
            lex->default_roles= (yyvsp[-4].user_list);
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            lex->create_info->options= (yyvsp[-6].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 26581 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 320:
#line 3405 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{CREATE_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 26604 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 321:
#line 3425 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_tablespace{(yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 26626 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 322:
#line 3444 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_undo_tablespace{
              CREATE_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 26649 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 323:
#line 3464 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
            if ((yyvsp[-8].lexer.lex_str).length == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "server name", "");
              MYSQL_YYABORT;
            }
            Lex->server_options.m_server_name= (yyvsp[-8].lexer.lex_str);
            Lex->server_options.set_scheme((yyvsp[-4].lexer.lex_str));
            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_create_server(&Lex->server_options);
          }
#line 26666 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 324:
#line 3478 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_COMPRESSION_DICTIONARY;
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == nullptr)
              MYSQL_YYABORT; // OOM
            Lex->create_info->options= (yyvsp[-4].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            Lex->ident= (yyvsp[-3].lexer.lex_str);
            Lex->create_info->zip_dict_name = (yyvsp[-1].item);
          }
#line 26680 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 325:
#line 3492 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), true, false);
          }
#line 26688 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 326:
#line 3497 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), false, (yyvsp[-2].is_not_empty));
          }
#line 26696 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 327:
#line 3504 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sql_cmd_srs_attributes) = NEW_PTN Sql_cmd_srs_attributes();
            if (!(yyval.sql_cmd_srs_attributes))
              MYSQL_YYABORT_ERROR(ER_DA_OOM, MYF(0)); /* purecov: inspected */
          }
#line 26706 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 328:
#line 3510 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->srs_name.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "NAME");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->srs_name= (yyvsp[0].lexer.lex_str);
            }
          }
#line 26722 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 329:
#line 3522 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->definition.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DEFINITION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->definition= (yyvsp[0].lexer.lex_str);
            }
          }
#line 26738 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 330:
#line 3535 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-5].sql_cmd_srs_attributes)->organization.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "ORGANIZATION");
            }
            else
            {
              (yyvsp[-5].sql_cmd_srs_attributes)->organization= (yyvsp[-3].lexer.lex_str);
              (yyvsp[-5].sql_cmd_srs_attributes)->organization_coordsys_id= (yyvsp[0].ulonglong_number);
            }
          }
#line 26755 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 331:
#line 3548 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->description.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DESCRIPTION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->description= (yyvsp[0].lexer.lex_str);
            }
          }
#line 26771 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 332:
#line 3563 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= 0;
          }
#line 26779 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 333:
#line 3568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[0].user_list);
          }
#line 26787 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 334:
#line 3577 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, (yyvsp[-10].key_type), (yyvsp[-8].lexer.lex_str), (yyvsp[-7].index_option),
                                             (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 26798 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 335:
#line 3585 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_FULLTEXT, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 26809 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 336:
#line 3593 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_SPATIAL, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 26820 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 337:
#line 3606 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].text_literal), &(yyval.item)); }
#line 26826 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 338:
#line 3608 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));
            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    CREATE COMPRESSION_DICTIONARY <dict>(@foo := expr)
                */
                my_error(ER_SYNTAX_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 26848 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 341:
#line 3634 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_username((yyvsp[0].lexer.lex_str));
          }
#line 26856 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 342:
#line 3638 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_host((yyvsp[0].lexer.lex_str));
          }
#line 26864 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 343:
#line 3642 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_db((yyvsp[0].lexer.lex_str));
          }
#line 26872 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 344:
#line 3646 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_owner((yyvsp[0].lexer.lex_str));
          }
#line 26880 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 345:
#line 3650 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_password((yyvsp[0].lexer.lex_str));
            Lex->contains_plaintext_password= true;
          }
#line 26889 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 346:
#line 3655 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_socket((yyvsp[0].lexer.lex_str));
          }
#line 26897 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 347:
#line 3659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_port((yyvsp[0].ulong_num));
          }
#line 26905 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 348:
#line 3666 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            if (!(lex->event_parse_data= new (thd->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 26925 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 349:
#line 3686 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 26937 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 350:
#line 3697 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));

            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 26948 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 352:
#line 3706 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 26958 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 353:
#line 3714 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 26964 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 354:
#line 3716 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 26974 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 355:
#line 3722 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 26984 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 356:
#line 3728 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 26994 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 357:
#line 3737 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 27005 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 358:
#line 3744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 27015 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 360:
#line 3754 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 27025 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 361:
#line 3762 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 27031 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 363:
#line 3768 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 27041 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 364:
#line 3774 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
#line 27051 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 365:
#line 3782 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 27057 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 366:
#line 3784 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->comment= (yyvsp[0].lexer.lex_str);
            (yyval.num)= 1;
          }
#line 27066 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 367:
#line 3791 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          enum_sp_type::EVENT,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            /*
              Set a body start to the end of the last preprocessed token
              before ev_sql_stmt:
            */
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 27116 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 368:
#line 3837 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= true;
          }
#line 27130 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 382:
#line 3866 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-2].lexer.lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
#line 27148 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 383:
#line 3880 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_CSTRING db;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new (YYMEM_ROOT) sp_name(db, (yyvsp[0].lexer.lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
#line 27168 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 384:
#line 3898 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27174 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 385:
#line 3899 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27180 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 386:
#line 3903 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27186 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 387:
#line 3904 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27192 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 388:
#line 3910 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 27198 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 389:
#line 3912 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Just parse it, we only have one language for now. */ }
#line 27204 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 390:
#line 3914 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 27210 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 391:
#line 3916 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 27216 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 392:
#line 3918 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 27222 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 393:
#line 3920 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 27228 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 394:
#line 3922 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27234 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 395:
#line 3927 "sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 27240 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 396:
#line 3928 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= true; }
#line 27246 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 397:
#line 3929 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= false; }
#line 27252 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 398:
#line 3934 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
#line 27260 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 399:
#line 3938 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
#line 27268 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 400:
#line 3945 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_call((yyvsp[-2].lexer.optimizer_hints), (yyvsp[-1].spname), (yyvsp[0].item_list2));
          }
#line 27276 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 401:
#line 3951 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 27282 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 402:
#line 3953 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.item_list2)= (yyvsp[-1].item_list2);
            }
#line 27290 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 407:
#line 3971 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   sp_variable::MODE_IN);

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(), nullptr,
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
#line 27342 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 412:
#line 4033 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   (sp_variable::enum_mode) (yyvsp[-3].num));

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(), nullptr,
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
#line 27393 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 413:
#line 4082 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 27399 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 414:
#line 4083 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 27405 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 415:
#line 4084 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_OUT; }
#line 27411 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 416:
#line 4085 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_INOUT; }
#line 27417 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 417:
#line 4089 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27423 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 419:
#line 4094 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27429 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 421:
#line 4100 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 27437 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 422:
#line 4104 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[-1].spblock).vars || (yyvsp[-1].spblock).conds) && ((yyvsp[-2].spblock).curs || (yyvsp[-2].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_error(ER_SP_VARCOND_AFTER_CURSHNDLR, MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[-1].spblock).curs && (yyvsp[-2].spblock).hndlrs)
            { /* Cursor following handler */
              my_error(ER_SP_CURSOR_AFTER_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[-2].spblock).vars + (yyvsp[-1].spblock).vars;
            (yyval.spblock).conds= (yyvsp[-2].spblock).conds + (yyvsp[-1].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[-2].spblock).hndlrs + (yyvsp[-1].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[-2].spblock).curs + (yyvsp[-1].spblock).curs;
          }
#line 27462 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 423:
#line 4132 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            lex= thd->lex;

            pctx->declare_var_boundary((yyvsp[-3].num));

            CONTEXTUALIZE((yyvsp[-2].type));
            enum enum_field_types var_type= (yyvsp[-2].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-2].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[-1].lexer.charset), &cs))
              MYSQL_YYABORT;

            uint num_vars= pctx->context_var_count();
            Item *dflt_value_item= (yyvsp[0].sp_default).expr;

            LEX_CSTRING dflt_value_query= EMPTY_CSTR;

            if (dflt_value_item)
            {
              ITEMIZE(dflt_value_item, &dflt_value_item);
              const char *expr_start_ptr= (yyvsp[0].sp_default).expr_start;
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              (yylsp[0]).raw.end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= NEW_PTN Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[-3].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (spvar->field_def.init(thd, "", var_type,
                                        (yyvsp[-2].type)->get_length(), (yyvsp[-2].type)->get_dec(),
                                        (yyvsp[-2].type)->get_type_flags(),
                                        NULL, NULL, &NULL_CSTR, 0,
                                        (yyvsp[-2].type)->get_interval_list(),
                                        cs ? cs : thd->variables.collation_database,
                                        (yyvsp[-1].lexer.charset) != nullptr, (yyvsp[-2].type)->get_uint_geom_type(), nullptr,
                                        nullptr, nullptr, {},
                                        dd::Column::enum_hidden_type::HT_VISIBLE))
              {
                MYSQL_YYABORT;
              }

              if (prepare_sp_create_field(thd, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.is_nullable= true;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is= NEW_PTN sp_instr_set(sp->instructions(),
                                                     lex,
                                                     var_idx,
                                                     dflt_value_item,
                                                     dflt_value_query,
                                                     (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[-3].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 27561 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 424:
#line 4227 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[-3].lexer.lex_str), true))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[-3].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[-3].lexer.lex_str), (yyvsp[0].spcondvalue)))
              MYSQL_YYABORT;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECLARE COND FOR
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 27582 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 425:
#line 4244 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[-2].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              NEW_PTN sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[-2].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_CSTR, 0)))
            {
              MYSQL_YYABORT;
            }

            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECL HANDLER FOR
          }
#line 27627 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 426:
#line 4285 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[-5].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 27665 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 427:
#line 4322 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr((yylsp[0]).raw.end);
          }
#line 27678 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 428:
#line 4331 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$7*/
            MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            assert(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_error(ER_SP_BAD_CURSOR_SELECT, MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->m_sql_cmd->set_as_part_of_sp();
            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[-4].lexer.lex_str), &offp, true))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_CSTRING cursor_query= EMPTY_CSTR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              NEW_PTN sp_instr_cpush(sp->instructions(), pctx,
                                     cursor_lex, cursor_query,
                                     pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[-4].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 27744 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 429:
#line 4395 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 27750 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 430:
#line 4396 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 27756 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 431:
#line 4402 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 27762 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 432:
#line 4404 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)+= 1; }
#line 27768 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 433:
#line 4409 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[0].spcondvalue)))
            {
              my_error(ER_SP_DUP_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[0].spcondvalue));
            }
          }
#line 27792 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 434:
#line 4432 "sql_yacc.yy" /* yacc.c:1646  */
    { /* mysql errno */
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27807 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 436:
#line 4447 "sql_yacc.yy" /* yacc.c:1646  */
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[0].lexer.lex_str)) || is_sqlstate_completion((yyvsp[0].lexer.lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].lexer.lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27830 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 437:
#line 4468 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27836 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 438:
#line 4469 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27842 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 439:
#line 4474 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 27850 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 440:
#line 4478 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 27867 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 441:
#line 4491 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27877 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 442:
#line 4497 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27887 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 443:
#line 4503 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27897 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 444:
#line 4512 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_signal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 27911 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 445:
#line 4525 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
#line 27941 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 446:
#line 4551 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 27947 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 447:
#line 4556 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= NULL; }
#line 27953 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 448:
#line 4558 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 27959 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 449:
#line 4563 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= NEW_PTN Set_signal_information(); }
#line 27965 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 450:
#line 4565 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= (yyvsp[0].signal_item_list); }
#line 27971 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 451:
#line 4570 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= NEW_PTN Set_signal_information();
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 27981 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 452:
#line 4577 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= (yyvsp[-4].signal_item_list);
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 27991 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 453:
#line 4589 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 27997 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 454:
#line 4591 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                YYTHD->syntax_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 28021 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 455:
#line 4611 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 28027 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 456:
#line 4617 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CLASS_ORIGIN; }
#line 28033 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 457:
#line 4619 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SUBCLASS_ORIGIN; }
#line 28039 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 458:
#line 4621 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_CATALOG; }
#line 28045 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 459:
#line 4623 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_SCHEMA; }
#line 28051 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 460:
#line 4625 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_NAME; }
#line 28057 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 461:
#line 4627 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CATALOG_NAME; }
#line 28063 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 462:
#line 4629 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SCHEMA_NAME; }
#line 28069 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 463:
#line 4631 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_TABLE_NAME; }
#line 28075 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 464:
#line 4633 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_COLUMN_NAME; }
#line 28081 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 465:
#line 4635 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CURSOR_NAME; }
#line 28087 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 466:
#line 4637 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MESSAGE_TEXT; }
#line 28093 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 467:
#line 4639 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MYSQL_ERRNO; }
#line 28099 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 468:
#line 4644 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // RESIGNAL doesn't clear diagnostics
            lex->m_sql_cmd= NEW_PTN Sql_cmd_resignal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 28114 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 469:
#line 4658 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // GET DIAGS doesn't clear them.
            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 28131 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 470:
#line 4674 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 28137 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 471:
#line 4676 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 28143 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 472:
#line 4678 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::STACKED_AREA; }
#line 28149 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 473:
#line 4683 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Statement_information((yyvsp[0].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 28159 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 474:
#line 4689 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 28169 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 475:
#line 4698 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_list)= NEW_PTN List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
          }
#line 28179 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 476:
#line 4704 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 28189 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 477:
#line 4713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_item)= NEW_PTN Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 28199 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 478:
#line 4721 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, to_lex_cstring((yyvsp[0].lexer.lex_str)), NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                (yylsp[0]).raw.start,
                (yylsp[0]).raw.end);

            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28231 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 479:
#line 4749 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_user_var((yyloc), (yyvsp[0].lexer.lex_str));
            ITEMIZE((yyval.item), &(yyval.item));
          }
#line 28240 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 480:
#line 4757 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 28246 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 481:
#line 4759 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 28252 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 482:
#line 4768 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 28258 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 483:
#line 4773 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_list)= NEW_PTN List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
          }
#line 28268 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 484:
#line 4779 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 28278 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 485:
#line 4788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_item)= NEW_PTN Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 28288 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 486:
#line 4796 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 28294 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 487:
#line 4798 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 28300 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 488:
#line 4800 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 28306 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 489:
#line 4802 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 28312 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 490:
#line 4804 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 28318 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 491:
#line 4806 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 28324 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 492:
#line 4808 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 28330 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 493:
#line 4810 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 28336 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 494:
#line 4812 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 28342 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 495:
#line 4814 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 28348 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 496:
#line 4816 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 28354 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 497:
#line 4818 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 28360 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 498:
#line 4820 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 28366 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 499:
#line 4825 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
#line 28390 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 500:
#line 4845 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 28414 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 501:
#line 4868 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= NULL;
            (yyval.sp_default).expr = NULL;
          }
#line 28423 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 502:
#line 4873 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= (yylsp[-1]).raw.end;
            (yyval.sp_default).expr= (yyvsp[0].item);
          }
#line 28432 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 516:
#line 4897 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->m_parser_data.new_cont_backpatch(); }
#line 28438 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 517:
#line 4899 "sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 28448 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 518:
#line 4907 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(yylloc.raw.start);
          }
#line 28461 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 519:
#line 4916 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].top_level_node) != nullptr)
              MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }

            // Mark statement as belonging to a stored procedure:
            if (lex->m_sql_cmd != NULL)
              lex->m_sql_cmd->set_as_part_of_sp();

            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            assert((lex->sql_command != SQLCOM_SET_OPTION &&
                         lex->sql_command != SQLCOM_SET_PASSWORD) ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION &&
                lex->sql_command != SQLCOM_SET_PASSWORD)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_CSTRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                NEW_PTN sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 28518 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 520:
#line 4972 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 28530 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 521:
#line 4980 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;

            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != enum_sp_type::FUNCTION)
            {
              my_error(ER_SP_BADRETURN, MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              NEW_PTN sp_instr_freturn(sp->instructions(), lex, (yyvsp[0].item), expr_query,
                                       sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 28580 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 522:
#line 5028 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_CSTR,
                             sp->instructions());
          }
#line 28595 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 523:
#line 5039 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 28608 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 524:
#line 5051 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            size_t n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28666 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 525:
#line 5108 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            size_t n= pctx->diff_handlers(lab->ctx, false);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, false);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28714 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 526:
#line 5155 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i= NEW_PTN sp_instr_copen(sp->instructions(), pctx,
                                                      offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28738 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 527:
#line 5178 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[-1].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[-1].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i= NEW_PTN sp_instr_cfetch(sp->instructions(),
                                                        pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28762 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 528:
#line 5198 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28768 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 529:
#line 5203 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              NEW_PTN sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28792 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 533:
#line 5232 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 28814 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 534:
#line 5250 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 28836 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 535:
#line 5270 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$1*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 28848 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 536:
#line 5278 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$3*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex,
                                           (yyvsp[0].item), expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 28889 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 537:
#line 5316 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i = NEW_PTN sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_CSTR, 0));
          }
#line 28911 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 538:
#line 5334 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$8*/
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 28924 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 544:
#line 5357 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
          }
#line 28938 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 545:
#line 5367 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_CSTRING case_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              NEW_PTN sp_instr_set_case_expr(sp->instructions(), lex,
                                             case_expr_id, (yyvsp[0].item), case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 28984 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 546:
#line 5412 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$9*/
            case_stmt_action_end_case(Lex, true);
          }
#line 28992 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 547:
#line 5419 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_case(YYTHD);
          }
#line 29000 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 548:
#line 5426 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_end_case(Lex, false);
          }
#line 29008 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 553:
#line 5443 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29020 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 554:
#line 5451 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            /* Simple case: <caseval> = <whenval> */

            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              NEW_PTN sp_instr_jump_case_when(sp->instructions(), lex,
                                              pctx->get_current_case_expr_id(),
                                              (yyvsp[0].item), when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29065 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 555:
#line 5493 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$7*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 29074 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 556:
#line 5501 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29086 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 557:
#line 5509 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item),
                                           when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29127 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 558:
#line 5547 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$8*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 29136 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 559:
#line 5555 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              NEW_PTN
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 29154 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 561:
#line 5573 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
#line 29176 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 562:
#line 5591 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
#line 29197 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 563:
#line 5610 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= NULL_CSTR; }
#line 29203 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 564:
#line 5611 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= (yyvsp[0].lex_cstr); }
#line 29209 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 565:
#line 5616 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
#line 29229 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 566:
#line 5632 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
          }
#line 29248 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 567:
#line 5649 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_CSTR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
#line 29263 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 568:
#line 5660 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
#line 29272 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 569:
#line 5668 "sql_yacc.yy" /* yacc.c:1646  */
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
#line 29289 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 570:
#line 5683 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[-2].spblock).hndlrs)
            {
              sp_instr *i= NEW_PTN sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[-2].spblock).curs)
            {
              sp_instr *i= NEW_PTN sp_instr_cpop(sp->instructions(), pctx,
                                                 (yyvsp[-2].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
#line 29323 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 571:
#line 5717 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 29340 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 572:
#line 5730 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29352 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 573:
#line 5738 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29394 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 574:
#line 5779 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$14*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 29413 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 575:
#line 5796 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29425 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 576:
#line 5804 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$6*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(ip, lex, (yyvsp[0].item), expr_query,
                                           pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
#line 29467 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 578:
#line 5847 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_BEFORE; }
#line 29473 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 579:
#line 5849 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_AFTER; }
#line 29479 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 580:
#line 5854 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_INSERT; }
#line 29485 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 581:
#line 5856 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_UPDATE; }
#line 29491 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 582:
#line 5858 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_DELETE; }
#line 29497 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 583:
#line 5872 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 29503 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 584:
#line 5874 "sql_yacc.yy" /* yacc.c:1646  */
    {
        (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
      }
#line 29511 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 585:
#line 5880 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 29517 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 586:
#line 5882 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
          }
#line 29525 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 587:
#line 5888 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29531 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 589:
#line 5894 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29541 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 590:
#line 5900 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29551 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 603:
#line 5923 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29557 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 605:
#line 5929 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29567 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 606:
#line 5935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29577 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 615:
#line 5954 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29583 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 617:
#line 5960 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 29593 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 618:
#line 5966 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 29603 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 620:
#line 5978 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29609 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 622:
#line 5984 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29619 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 623:
#line 5990 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29629 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 631:
#line 6008 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29635 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 633:
#line 6014 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29645 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 634:
#line 6020 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29655 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 638:
#line 6034 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 29661 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 639:
#line 6038 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_ACTIVE; }
#line 29667 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 640:
#line 6039 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_INACTIVE; }
#line 29673 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 641:
#line 6043 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 29679 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 642:
#line 6048 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_initial_size((yyvsp[0].ulonglong_number));
          }
#line 29687 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 643:
#line 6055 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option) = NEW_PTN PT_alter_tablespace_option_autoextend_size((yyvsp[0].ulonglong_number));
          }
#line 29695 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 644:
#line 6061 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number) = (yyvsp[0].ulonglong_number); }
#line 29701 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 645:
#line 6066 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_max_size((yyvsp[0].ulonglong_number));
          }
#line 29709 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 646:
#line 6073 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_extent_size((yyvsp[0].ulonglong_number));
          }
#line 29717 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 647:
#line 6080 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_undo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 29725 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 648:
#line 6087 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_redo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 29733 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 649:
#line 6094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_nodegroup((yyvsp[0].ulong_num));
          }
#line 29741 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 650:
#line 6101 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_comment((yyvsp[0].lexer.lex_str));
          }
#line 29749 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 651:
#line 6108 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_engine(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 29757 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 652:
#line 6115 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_file_block_size((yyvsp[0].ulonglong_number));
          }
#line 29765 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 653:
#line 6122 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(true);
          }
#line 29773 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 654:
#line 6126 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(false);
          }
#line 29781 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 655:
#line 6133 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_encryption((yyvsp[0].lexer.lex_str));
          }
#line 29789 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 656:
#line 6140 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) >= UINT_MAX32)
            {
              my_error(ER_ENCRYPTION_KEY_ID_VALUE_OUT_OF_RANGE, MYF(0), (yyvsp[0].ulong_num),
                       UINT_MAX32 - 1);
              MYSQL_YYABORT;
            }

            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_encryption_key_id((yyvsp[0].ulong_num));
          }
#line 29804 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 657:
#line 6154 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option) = make_tablespace_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 29812 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 658:
#line 6160 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 29818 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 659:
#line 6162 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            const char *start_ptr= (yyvsp[0].lexer.lex_str).str;
            size_t str_len= (yyvsp[0].lexer.lex_str).length;
            const char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                  // Fall through.
                case 'm':
                case 'M':
                  text_shift_number+=10;
                  // Fall through.
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
#line 29868 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 660:
#line 6238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_create_table_options= (yyvsp[-1].create_table_options);
          }
#line 29877 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 662:
#line 6247 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_partitioning= (yyvsp[-1].partition_clause);
          }
#line 29886 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 664:
#line 6256 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= NULL;
          }
#line 29897 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 665:
#line 6264 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= (yyvsp[-1].on_duplicate);
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_primary);
          }
#line 29908 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 666:
#line 6271 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_primary);
          }
#line 29919 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 667:
#line 6280 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 29925 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 668:
#line 6281 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 29931 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 669:
#line 6297 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_clause)= NEW_PTN PT_partition((yyvsp[-3].part_type_def), (yyvsp[-2].ulong_num), (yyvsp[-1].opt_sub_part), (yylsp[0]), (yyvsp[0].part_def_list));
          }
#line 29939 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 670:
#line 6304 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_key((yyvsp[-5].is_not_empty), (yyvsp[-3].opt_key_algo), (yyvsp[-1].name_list));
          }
#line 29947 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 671:
#line 6308 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_hash((yyvsp[-4].is_not_empty), (yylsp[-1]), (yyvsp[-1].item));
          }
#line 29955 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 672:
#line 6312 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 29963 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 673:
#line 6316 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_columns((yyvsp[-1].name_list));
          }
#line 29971 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 674:
#line 6320 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 29979 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 675:
#line 6324 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_columns((yyvsp[-1].name_list));
          }
#line 29987 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 676:
#line 6330 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 29993 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 677:
#line 6331 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 29999 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 678:
#line 6336 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_NONE; }
#line 30005 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 679:
#line 6338 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_51;
              break;
            case 2:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_55;
              break;
            default:
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
          }
#line 30023 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 680:
#line 6355 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 30029 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 681:
#line 6357 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 30042 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 682:
#line 6368 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_sub_part)= NULL; }
#line 30048 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 683:
#line 6371 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_hash((yyvsp[-5].is_not_empty), (yylsp[-2]), (yyvsp[-2].item), (yyvsp[0].ulong_num));
          }
#line 30056 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 684:
#line 6376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_key((yyvsp[-6].is_not_empty), (yyvsp[-4].opt_key_algo), (yyvsp[-2].name_list), (yyvsp[0].ulong_num));
          }
#line 30064 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 685:
#line 6383 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.name_list)= NULL; }
#line 30070 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 687:
#line 6390 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= NEW_PTN List<char>;
            if ((yyval.name_list) == NULL || (yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 30080 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 688:
#line 6396 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= (yyvsp[-2].name_list);
            if ((yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 30090 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 689:
#line 6405 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 30096 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 690:
#line 6407 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 30109 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 691:
#line 6418 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= NULL; }
#line 30115 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 692:
#line 6419 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= (yyvsp[-1].part_def_list); }
#line 30121 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 693:
#line 6424 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= NEW_PTN Mem_root_array<PT_part_definition*>(YYMEM_ROOT);
            if ((yyval.part_def_list) == NULL || (yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 30131 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 694:
#line 6430 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= (yyvsp[-2].part_def_list);
            if ((yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 30141 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 695:
#line 6439 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_definition)= NEW_PTN PT_part_definition((yylsp[-5]), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].opt_part_values).type, (yyvsp[-2].opt_part_values).values, (yylsp[-2]),
                                           (yyvsp[-1].partition_option_list), (yyvsp[0].sub_part_list), (yylsp[0]));
          }
#line 30150 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 696:
#line 6447 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::HASH;
          }
#line 30158 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 697:
#line 6451 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::RANGE;
            (yyval.opt_part_values).values= (yyvsp[0].part_value_item_list_paren);
          }
#line 30167 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 698:
#line 6456 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::LIST;
            (yyval.opt_part_values).values= (yyvsp[0].part_values);
          }
#line 30176 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 699:
#line 6463 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item_list_paren)= NULL; }
#line 30182 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 701:
#line 6469 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_item((yylsp[0]), (yyvsp[0].part_value_item_list_paren));
          }
#line 30190 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 702:
#line 6473 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_list((yylsp[0]), (yyvsp[-1].part_value_list));
          }
#line 30198 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 703:
#line 6480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= NEW_PTN
              Mem_root_array<PT_part_value_item_list_paren *>(YYMEM_ROOT);
            if ((yyval.part_value_list) == NULL || (yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 30209 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 704:
#line 6487 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= (yyvsp[-2].part_value_list);
            if ((yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 30219 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 705:
#line 6496 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              This empty action is required because it resolves 2 reduce/reduce
              conflicts with an anonymous row expression:

              simple_expr:
                        ...
                      | '(' expr ',' expr_list ')'
            */
          }
#line 30234 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 706:
#line 6507 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list_paren)= NEW_PTN PT_part_value_item_list_paren((yyvsp[-1].part_value_item_list), (yylsp[0]));
          }
#line 30242 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 707:
#line 6514 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= NEW_PTN Mem_root_array<PT_part_value_item *>(YYMEM_ROOT);
            if ((yyval.part_value_item_list) == NULL || (yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 30252 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 708:
#line 6520 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= (yyvsp[-2].part_value_item_list);
            if ((yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 30262 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 709:
#line 6528 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_max((yylsp[0])); }
#line 30268 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 710:
#line 6529 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_expr((yylsp[0]), (yyvsp[0].item)); }
#line 30274 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 711:
#line 6534 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= NULL; }
#line 30280 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 712:
#line 6535 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= (yyvsp[-1].sub_part_list); }
#line 30286 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 713:
#line 6540 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= NEW_PTN Mem_root_array<PT_subpartition *>(YYMEM_ROOT);
            if ((yyval.sub_part_list) == NULL || (yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 30296 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 714:
#line 6546 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= (yyvsp[-2].sub_part_list);
            if ((yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 30306 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 715:
#line 6555 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_definition)= NEW_PTN PT_subpartition((yylsp[-2]), (yyvsp[-1].lexer.lex_str).str, (yyvsp[0].partition_option_list));
          }
#line 30314 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 716:
#line 6561 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option_list)= NULL; }
#line 30320 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 718:
#line 6567 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= (yyvsp[-1].partition_option_list);
            if ((yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30330 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 719:
#line 6573 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= NEW_PTN Mem_root_array<PT_partition_option *>(YYMEM_ROOT);
            if ((yyval.partition_option_list) == NULL || (yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30340 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 720:
#line 6582 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_tablespace((yyvsp[0].lexer.lex_str).str); }
#line 30346 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 721:
#line 6584 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_engine(to_lex_cstring((yyvsp[0].lexer.lex_str))); }
#line 30352 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 722:
#line 6586 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_nodegroup((yyvsp[0].ulong_num)); }
#line 30358 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 723:
#line 6588 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_max_rows((yyvsp[0].ulonglong_number)); }
#line 30364 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 724:
#line 6590 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_min_rows((yyvsp[0].ulonglong_number)); }
#line 30370 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 725:
#line 6592 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_data_directory((yyvsp[0].lexer.lex_str).str); }
#line 30376 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 726:
#line 6594 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_index_directory((yyvsp[0].lexer.lex_str).str); }
#line 30382 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 727:
#line 6596 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_comment((yyvsp[0].lexer.lex_str).str); }
#line 30388 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 731:
#line 6611 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              If the statement has set READ ONLY already, and we repeat the
              READ ONLY option in the statement, the option must be set to
              the same value as before, otherwise, report an error.
            */
            if ((Lex->create_info->used_fields &
                 HA_CREATE_USED_READ_ONLY) &&
                (Lex->create_info->schema_read_only !=
                    ((yyvsp[0].ternary_option) == Ternary_option::ON))) {
              my_error(ER_CONFLICTING_DECLARATIONS, MYF(0), "READ ONLY", "=0",
                  "READ ONLY", "=1");
              MYSQL_YYABORT;
            }
            Lex->create_info->schema_read_only = ((yyvsp[0].ternary_option) == Ternary_option::ON);
            Lex->create_info->used_fields |= HA_CREATE_USED_READ_ONLY;
          }
#line 30410 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 732:
#line 6631 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30416 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 733:
#line 6632 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30422 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 734:
#line 6636 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30428 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 735:
#line 6637 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30434 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 736:
#line 6642 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_collation(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 30443 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 737:
#line 6647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_charset(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 30452 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 738:
#line 6652 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Validate if we have either 'y|Y' or 'n|N'
            if (my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "Y") != 0 &&
                my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "N") != 0) {
              my_error(ER_WRONG_VALUE, MYF(0), "argument (should be Y or N)", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            Lex->create_info->encrypt_type= (yyvsp[0].lexer.lex_str);
            Lex->create_info->used_fields |= HA_CREATE_USED_DEFAULT_ENCRYPTION;
          }
#line 30468 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 739:
#line 6666 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 30474 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 740:
#line 6667 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 30480 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 741:
#line 6672 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.space_separated_alter_table_opts) == NULL || (yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30490 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 742:
#line 6678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= (yyvsp[-1].space_separated_alter_table_opts);
            if ((yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30500 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 743:
#line 6687 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= NEW_PTN Mem_root_array<PT_create_table_option *>(YYMEM_ROOT);
            if ((yyval.create_table_options) == NULL || (yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30510 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 744:
#line 6693 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= (yyvsp[-2].create_table_options);
            if ((yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30520 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 747:
#line 6707 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 30528 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 748:
#line 6711 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option();
          }
#line 30536 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 749:
#line 6715 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 30544 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 750:
#line 6719 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_max_rows_option((yyvsp[0].ulonglong_number));
          }
#line 30552 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 751:
#line 6723 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_min_rows_option((yyvsp[0].ulonglong_number));
          }
#line 30560 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 752:
#line 6727 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_avg_row_length_option((yyvsp[0].ulong_num));
          }
#line 30568 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 753:
#line 6731 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_password_option((yyvsp[0].lexer.lex_str).str);
          }
#line 30576 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 754:
#line 6735 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_commen_option((yyvsp[0].lexer.lex_str));
          }
#line 30584 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 755:
#line 6739 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_compress_option((yyvsp[0].lexer.lex_str));
          }
#line 30592 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 756:
#line 6743 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_encryption_option((yyvsp[0].lexer.lex_str));
	        }
#line 30600 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 757:
#line 6747 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) >= UINT_MAX32)
            {
              my_error(ER_ENCRYPTION_KEY_ID_VALUE_OUT_OF_RANGE, MYF(0), (yyvsp[0].ulong_num),
                       UINT_MAX32 - 1);
              MYSQL_YYABORT;
            }

            (yyval.create_table_option)= NEW_PTN PT_create_encryption_key_id_option((yyvsp[0].ulong_num));
          }
#line 30615 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 758:
#line 6758 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_auto_increment_option((yyvsp[0].ulonglong_number));
          }
#line 30623 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 759:
#line 6762 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_pack_keys_option((yyvsp[0].ternary_option));
          }
#line 30631 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 760:
#line 6766 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_auto_recalc_option((yyvsp[0].ternary_option));
          }
#line 30639 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 761:
#line 6770 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_persistent_option((yyvsp[0].ternary_option));
          }
#line 30647 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 762:
#line 6774 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff)
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages((yyvsp[0].ulong_num));
          }
#line 30668 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 763:
#line 6791 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages;
          }
#line 30676 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 764:
#line 6795 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 30684 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 765:
#line 6799 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 30692 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 766:
#line 6803 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_delay_key_write_option((yyvsp[0].ulong_num));
          }
#line 30700 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 767:
#line 6807 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_row_format_option((yyvsp[0].row_type));
          }
#line 30708 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 768:
#line 6811 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_union_option((yyvsp[-1].table_list));
          }
#line 30716 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 769:
#line 6815 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_charset((yyvsp[0].lexer.charset));
          }
#line 30724 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 770:
#line 6819 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_collation((yyvsp[0].lexer.charset));
          }
#line 30732 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 771:
#line 6823 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_insert_method_option((yyvsp[0].ulong_num));
          }
#line 30740 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 772:
#line 6827 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_data_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 30748 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 773:
#line 6831 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_index_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 30756 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 774:
#line 6835 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_tablespace_option((yyvsp[0].lexer.lex_str).str);
          }
#line 30764 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 775:
#line 6839 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_DISK);
          }
#line 30772 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 776:
#line 6843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_MEMORY);
          }
#line 30780 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 777:
#line 6847 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_connection_option((yyvsp[0].lexer.lex_str));
          }
#line 30788 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 778:
#line 6851 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN
            PT_create_key_block_size_option(static_cast<std::uint32_t>((yyvsp[0].num)));
          }
#line 30797 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 779:
#line 6856 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_start_transaction_option(true);
	  }
#line 30805 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 780:
#line 6860 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option) = make_table_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 30813 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 781:
#line 6864 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option) = make_table_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 30821 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 782:
#line 6868 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option) = NEW_PTN PT_create_ts_autoextend_size_option((yyvsp[0].ulonglong_number));
          }
#line 30829 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 783:
#line 6875 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                (yyval.ternary_option)= Ternary_option::OFF;
                break;
            case 1:
                (yyval.ternary_option)= Ternary_option::ON;
                break;
            default:
                YYTHD->syntax_error();
                MYSQL_YYABORT;
            }
          }
#line 30847 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 784:
#line 6888 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ternary_option)= Ternary_option::DEFAULT; }
#line 30853 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 785:
#line 6892 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 30859 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 786:
#line 6896 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset);}
#line 30865 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 787:
#line 6900 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);}
#line 30871 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 788:
#line 6904 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 30877 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 789:
#line 6905 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 30883 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 790:
#line 6906 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 30889 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 791:
#line 6907 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 30895 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 792:
#line 6908 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 30901 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 793:
#line 6909 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 30907 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 794:
#line 6913 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 30913 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 795:
#line 6914 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 30919 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 796:
#line 6915 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 30925 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 797:
#line 6919 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) STRING_RESULT; }
#line 30931 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 798:
#line 6920 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) REAL_RESULT; }
#line 30937 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 799:
#line 6921 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) DECIMAL_RESULT; }
#line 30943 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 800:
#line 6922 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) INT_RESULT; }
#line 30949 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 801:
#line 6927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= NEW_PTN Mem_root_array<PT_table_element *>(YYMEM_ROOT);
            if ((yyval.table_element_list) == NULL || (yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 30959 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 802:
#line 6933 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= (yyvsp[-2].table_element_list);
            if ((yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 30969 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 803:
#line 6941 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].column_def); }
#line 30975 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 804:
#line 6942 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].table_constraint_def); }
#line 30981 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 805:
#line 6947 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_def)= NEW_PTN PT_column_def((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].table_constraint_def));
          }
#line 30989 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 806:
#line 6953 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_constraint_def)= NULL; }
#line 30995 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 807:
#line 6955 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Currently we ignore FK references here: */
            (yyval.table_constraint_def)= NULL;
          }
#line 31004 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 808:
#line 6964 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_MULTIPLE,
                                                   (yyvsp[-4].index_name_and_type).name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 31013 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 809:
#line 6970 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_FULLTEXT, (yyvsp[-4].lexer.lex_str), NULL,
                                                   (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 31022 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 810:
#line 6976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_SPATIAL, (yyvsp[-4].lexer.lex_str), NULL, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 31030 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 811:
#line 6981 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (((yyvsp[-6].lexer.lex_str).length != 0)
                 && ((yyvsp[-5].key_type) == (KEYTYPE_CLUSTERING | KEYTYPE_MULTIPLE)))
            {
              /* Forbid "CONSTRAINT c CLUSTERING" */
              my_error(ER_SYNTAX_ERROR, MYF(0));
              MYSQL_YYABORT;
            }
            /*
              Constraint-implementing indexes are named by the constraint type
              by default.
            */
            LEX_STRING name= (yyvsp[-4].index_name_and_type).name.str != NULL ? (yyvsp[-4].index_name_and_type).name : (yyvsp[-6].lexer.lex_str);
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyvsp[-5].key_type), name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 31050 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 812:
#line 6997 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_foreign_key_definition((yyvsp[-7].lexer.lex_str), (yyvsp[-4].lexer.lex_str), (yyvsp[-2].index_column_list), (yyvsp[0].fk_references).table_name,
                                                  (yyvsp[0].fk_references).reference_list,
                                                  (yyvsp[0].fk_references).fk_match_option,
                                                  (yyvsp[0].fk_references).fk_update_opt,
                                                  (yyvsp[0].fk_references).fk_delete_opt);
          }
#line 31062 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 813:
#line 7005 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_check_constraint((yyvsp[-2].lexer.lex_str), (yyvsp[-1].item), (yyvsp[0].is_not_empty));
            if ((yyval.table_constraint_def) == nullptr) MYSQL_YYABORT; // OOM
          }
#line 31071 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 814:
#line 7012 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 31077 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 815:
#line 7016 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 31083 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 816:
#line 7017 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 31089 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 817:
#line 7021 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 31095 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 818:
#line 7022 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 31101 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 819:
#line 7026 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 31107 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 820:
#line 7027 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= (yyvsp[0].is_not_empty); }
#line 31113 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 821:
#line 7031 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= !((yyvsp[-1].is_not_empty)); }
#line 31119 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 822:
#line 7036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_def)= NEW_PTN PT_field_def((yyvsp[-1].type), (yyvsp[0].col_attr_list));
          }
#line 31127 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 823:
#line 7042 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *opt_attrs= (yyvsp[0].col_attr_list);
            if ((yyvsp[-7].lexer.charset) != NULL)
            {
              if (opt_attrs == NULL)
              {
                opt_attrs= NEW_PTN
                  Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
              }
              auto *collation= NEW_PTN PT_collate_column_attr((yylsp[-7]), (yyvsp[-7].lexer.charset));
              if (opt_attrs == nullptr || collation == nullptr ||
                  opt_attrs->push_back(collation))
                MYSQL_YYABORT; // OOM
            }
            (yyval.field_def)= NEW_PTN PT_generated_field_def((yyvsp[-8].type), (yyvsp[-3].item), (yyvsp[-1].virtual_or_stored), opt_attrs);
          }
#line 31148 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 826:
#line 7066 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 31154 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 827:
#line 7067 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 31160 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 828:
#line 7068 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::STORED; }
#line 31166 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 829:
#line 7073 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].int_type), (yyvsp[-1].c_str), (yyvsp[0].field_option));
          }
#line 31174 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 830:
#line 7077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 31182 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 831:
#line 7081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 31190 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 832:
#line 7085 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type;
          }
#line 31198 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 833:
#line 7089 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type((yyvsp[0].c_str));
          }
#line 31206 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 834:
#line 7093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 31214 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 835:
#line 7097 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 31222 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 836:
#line 7101 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31231 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 837:
#line 7106 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31240 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 838:
#line 7111 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 31253 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 839:
#line 7120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 31266 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 840:
#line 7129 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 31274 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 841:
#line 7133 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, &my_charset_bin);
          }
#line 31282 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 842:
#line 7137 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31291 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 843:
#line 7142 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 31304 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 844:
#line 7151 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 31312 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 845:
#line 7155 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].c_str))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].c_str), NULL, 10);
              if (errno != 0 || length != 4)
              {
                /* Only support length is 4 */
                my_error(ER_INVALID_YEAR_COLUMN_LENGTH, MYF(0), "YEAR");
                MYSQL_YYABORT;
              }
              push_deprecated_warn(YYTHD, "YEAR(4)", "YEAR");
            }
            if ((yyvsp[0].field_option) == UNSIGNED_FLAG)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                           ER_THD(YYTHD, ER_WARN_DEPRECATED_YEAR_UNSIGNED));
            }
            // We can ignore field length and UNSIGNED/ZEROFILL attributes here.
            (yyval.type)= NEW_PTN PT_year_type;
          }
#line 31339 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 846:
#line 7178 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_date_type;
          }
#line 31347 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 847:
#line 7182 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::TIME, (yyvsp[0].c_str));
          }
#line 31355 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 848:
#line 7186 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_timestamp_type((yyvsp[0].c_str));
          }
#line 31363 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 849:
#line 7190 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::DATETIME, (yyvsp[0].c_str));
          }
#line 31371 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 850:
#line 7194 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, &my_charset_bin);
          }
#line 31379 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 851:
#line 7198 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type((yyvsp[0].c_str));
          }
#line 31387 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 853:
#line 7203 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 31395 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 854:
#line 7207 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, &my_charset_bin);
          }
#line 31403 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 855:
#line 7211 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 31411 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 856:
#line 7215 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31420 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 857:
#line 7220 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31429 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 858:
#line 7225 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::TEXT, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31438 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 859:
#line 7230 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31447 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 860:
#line 7235 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31456 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 861:
#line 7240 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_enum_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31464 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 862:
#line 7244 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_set_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31472 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 863:
#line 7248 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31481 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 864:
#line 7253 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_serial_type;
          }
#line 31489 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 865:
#line 7257 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_json_type;
          }
#line 31497 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 866:
#line 7264 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRY); }
#line 31503 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 867:
#line 7266 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRYCOLLECTION); }
#line 31509 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 868:
#line 7268 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POINT); }
#line 31515 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 869:
#line 7270 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOINT); }
#line 31521 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 870:
#line 7272 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_LINESTRING); }
#line 31527 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 871:
#line 7274 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTILINESTRING); }
#line 31533 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 872:
#line 7276 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POLYGON); }
#line 31539 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 873:
#line 7278 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOLYGON); }
#line 31545 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 874:
#line 7282 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31551 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 875:
#line 7283 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31557 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 876:
#line 7287 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31563 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 877:
#line 7288 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31569 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 878:
#line 7292 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31575 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 879:
#line 7293 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31581 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 880:
#line 7294 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31587 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 881:
#line 7295 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31593 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 882:
#line 7296 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31599 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 883:
#line 7300 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::INT; }
#line 31605 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 884:
#line 7301 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::TINYINT; }
#line 31611 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 885:
#line 7302 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::SMALLINT; }
#line 31617 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 886:
#line 7303 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::MEDIUMINT; }
#line 31623 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 887:
#line 7304 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::BIGINT; }
#line 31629 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 888:
#line 7309 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.numeric_type)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              Numeric_type::FLOAT : Numeric_type::DOUBLE;
          }
#line 31638 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 889:
#line 7314 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DOUBLE; }
#line 31644 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 892:
#line 7323 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::FLOAT; }
#line 31650 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 893:
#line 7324 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 31656 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 894:
#line 7325 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 31662 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 895:
#line 7326 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 31668 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 896:
#line 7331 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = nullptr;
            (yyval.precision).dec = nullptr;
          }
#line 31677 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 897:
#line 7336 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = (yyvsp[0].c_str);
            (yyval.precision).dec = nullptr;
          }
#line 31686 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 898:
#line 7344 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec= NULL;
          }
#line 31695 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 899:
#line 7349 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[0].c_str);
            (yyval.precision).dec= NULL;
          }
#line 31704 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 901:
#line 7358 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[-3].lexer.lex_str).str;
            (yyval.precision).dec= (yyvsp[-1].lexer.lex_str).str;
          }
#line 31713 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 902:
#line 7366 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 31719 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 903:
#line 7367 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31725 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 904:
#line 7371 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 31731 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 905:
#line 7372 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 31737 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 906:
#line 7374 "sql_yacc.yy" /* yacc.c:1646  */
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[-1].lexer.lex_str).str, NULL, &error);
           }
#line 31746 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 907:
#line 7381 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 31752 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 909:
#line 7387 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = (yyvsp[-1].field_option) | (yyvsp[0].field_option);
          }
#line 31760 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 911:
#line 7394 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 31766 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 912:
#line 7395 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = UNSIGNED_FLAG; }
#line 31772 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 913:
#line 7396 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = ZEROFILL_FLAG;
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_ZEROFILL));
          }
#line 31783 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 914:
#line 7405 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31789 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 915:
#line 7406 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31795 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 916:
#line 7407 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31801 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 917:
#line 7408 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31807 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 918:
#line 7411 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; /* use default length */ }
#line 31813 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 920:
#line 7417 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec = NULL;
          }
#line 31822 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 922:
#line 7425 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.col_attr_list)= NULL; }
#line 31828 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 924:
#line 7431 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr_list)= (yyvsp[-1].col_attr_list);
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // $2 is `[NOT] ENFORCED`
              if ((yyvsp[-1].col_attr_list)->back()->set_constraint_enforcement(
                      (yyvsp[0].col_attr)->is_constraint_enforced())) {
                // $1 is not `CHECK(...)`
                YYTHD->syntax_error_at((yylsp[0]));
                MYSQL_YYABORT;
              }
            } else {
              if ((yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
                MYSQL_YYABORT; // OOM
            }
          }
#line 31851 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 925:
#line 7450 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // [NOT] ENFORCED doesn't follow the CHECK clause
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }

            (yyval.col_attr_list)=
              NEW_PTN Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
            if ((yyval.col_attr_list) == NULL || (yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
              MYSQL_YYABORT; // OOM
          }
#line 31871 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 926:
#line 7469 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_null_column_attr;
          }
#line 31879 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 927:
#line 7473 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_not_null_column_attr;
          }
#line 31887 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 928:
#line 7477 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_secondary_column_attr;
          }
#line 31895 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 929:
#line 7481 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_default_column_attr((yyvsp[0].item));
          }
#line 31903 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 930:
#line 7485 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_generated_default_val_column_attr((yyvsp[-1].item));
          }
#line 31911 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 931:
#line 7489 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_on_update_column_attr(static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 31919 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 932:
#line 7493 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_auto_increment_column_attr;
          }
#line 31927 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 933:
#line 7497 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_serial_default_value_column_attr;
          }
#line 31935 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 934:
#line 7501 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_primary_key_column_attr;
          }
#line 31943 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 935:
#line 7505 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_combo_clustering_key_column_attr(KEYTYPE_UNIQUE);
          }
#line 31951 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 936:
#line 7509 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_combo_clustering_key_column_attr(KEYTYPE_UNIQUE);
          }
#line 31959 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 937:
#line 7513 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_combo_clustering_key_column_attr(KEYTYPE_CLUSTERING);
          }
#line 31967 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 938:
#line 7517 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_combo_clustering_key_column_attr(KEYTYPE_CLUSTERING);
          }
#line 31975 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 939:
#line 7521 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_comment_column_attr(to_lex_cstring((yyvsp[0].lexer.lex_str)));
        }
#line 31983 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 940:
#line 7525 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_collate_column_attr((yylsp[0]), (yyvsp[0].lexer.charset));
          }
#line 31991 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 941:
#line 7529 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr((yyvsp[0].column_format), null_lex_cstr);
          }
#line 31999 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 942:
#line 7533 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr(COLUMN_FORMAT_TYPE_COMPRESSED, (yyvsp[0].lex_cstr));
          }
#line 32007 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 943:
#line 7537 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_storage_media_column_attr((yyvsp[0].storage_media));
          }
#line 32015 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 944:
#line 7541 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<gis::srid_t>::max())
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "SRID", "SRID");
              MYSQL_YYABORT;
            }
            (yyval.col_attr)= NEW_PTN PT_srid_column_attr(static_cast<gis::srid_t>((yyvsp[0].ulonglong_number)));
          }
#line 32028 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 945:
#line 7551 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_check_constraint_column_attr((yyvsp[-1].lexer.lex_str), (yyvsp[0].item));
          }
#line 32036 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 946:
#line 7564 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = NEW_PTN PT_constraint_enforcement_attr((yyvsp[0].is_not_empty));
          }
#line 32044 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 947:
#line 7568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = make_column_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 32052 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 948:
#line 7572 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = make_column_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 32060 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 949:
#line 7576 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = NEW_PTN PT_column_visibility_attr((yyvsp[0].visibility));
          }
#line 32068 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 950:
#line 7582 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= null_lex_cstr; }
#line 32074 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 951:
#line 7584 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstr)= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 32082 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 952:
#line 7590 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DEFAULT; }
#line 32088 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 953:
#line 7591 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_FIXED; }
#line 32094 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 954:
#line 7592 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DYNAMIC; }
#line 32100 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 955:
#line 7596 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DEFAULT; }
#line 32106 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 956:
#line 7597 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DISK; }
#line 32112 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 957:
#line 7598 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_MEMORY; }
#line 32118 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 958:
#line 7603 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 32126 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 959:
#line 7609 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 32134 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 963:
#line 7622 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            YYLIP->warn_on_deprecated_charset((yyval.lexer.charset), (yyvsp[0].lexer.lex_str).str);
          }
#line 32147 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 964:
#line 7630 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 32153 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 965:
#line 7634 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= NULL; }
#line 32159 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 966:
#line 7635 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 32165 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 967:
#line 7640 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.lexer.charset)=get_old_charset_by_name((yyvsp[0].lexer.lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 32178 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 968:
#line 7648 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 32184 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 969:
#line 7652 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=(yyvsp[0].lexer.charset);   }
#line 32190 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 970:
#line 7653 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=NULL; }
#line 32196 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 971:
#line 7658 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name((yyvsp[0].lexer.lex_str).str)))
              MYSQL_YYABORT;
            YYLIP->warn_on_deprecated_collation((yyval.lexer.charset));
          }
#line 32206 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 972:
#line 7663 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 32212 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 973:
#line 7667 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = nullptr; }
#line 32218 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 974:
#line 7668 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 32224 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 975:
#line 7672 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32230 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 976:
#line 7673 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32236 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 977:
#line 7678 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_latin1; }
#line 32242 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 978:
#line 7679 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 32251 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 979:
#line 7683 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 32260 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 980:
#line 7691 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
#line 32272 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 981:
#line 7699 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
#line 32282 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 982:
#line 7705 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
#line 32292 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 983:
#line 7714 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32301 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 984:
#line 7719 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32310 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 985:
#line 7724 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32319 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 986:
#line 7729 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= &my_charset_bin;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32328 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 987:
#line 7734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].is_not_empty) ? get_bin_collation((yyvsp[-1].lexer.charset)) : (yyvsp[-1].lexer.charset);
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32339 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 988:
#line 7741 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= true;
          }
#line 32349 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 989:
#line 7747 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= get_bin_collation((yyvsp[0].lexer.charset));
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32361 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 990:
#line 7757 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 32367 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 991:
#line 7758 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.is_not_empty)= true;
          }
#line 32376 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 992:
#line 7766 "sql_yacc.yy" /* yacc.c:1646  */
    {
          if ((yyvsp[0].ulong_num) == 0)
          {
            YYTHD->syntax_error();
            MYSQL_YYABORT;
          }
        }
#line 32388 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 993:
#line 7774 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 32394 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 996:
#line 7788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_references).table_name= (yyvsp[-3].table);
            (yyval.fk_references).reference_list= (yyvsp[-2].reference_list);
            (yyval.fk_references).fk_match_option= (yyvsp[-1].opt_match_clause);
            (yyval.fk_references).fk_update_opt= (yyvsp[0].fk_options).fk_update_opt;
            (yyval.fk_references).fk_delete_opt= (yyvsp[0].fk_options).fk_delete_opt;
          }
#line 32406 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 997:
#line 7798 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= NULL; }
#line 32412 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 998:
#line 7799 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= (yyvsp[-1].reference_list); }
#line 32418 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 999:
#line 7804 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= (yyvsp[-2].reference_list);
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if (key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 32429 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1000:
#line 7811 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= NEW_PTN List<Key_part_spec>;
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if ((yyval.reference_list) == NULL || key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 32440 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1001:
#line 7820 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_UNDEF; }
#line 32446 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1002:
#line 7821 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_FULL; }
#line 32452 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1003:
#line 7822 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_PARTIAL; }
#line 32458 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1004:
#line 7823 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_SIMPLE; }
#line 32464 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1005:
#line 7828 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 32473 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1006:
#line 7833 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 32482 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1007:
#line 7838 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 32491 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1008:
#line 7844 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[-3].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 32500 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1009:
#line 7850 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 32509 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1010:
#line 7857 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 32515 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1011:
#line 7858 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 32521 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1012:
#line 7859 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 32527 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1013:
#line 7860 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 32533 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1014:
#line 7861 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_DEFAULT;  }
#line 32539 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1015:
#line 7865 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_PRIMARY; }
#line 32545 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1016:
#line 7866 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= (yyvsp[-1].key_type); }
#line 32551 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1017:
#line 7871 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32557 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1018:
#line 7872 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32563 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1019:
#line 7876 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32569 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1021:
#line 7881 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32575 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1022:
#line 7882 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32581 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1023:
#line 7883 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32587 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1024:
#line 7887 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
#line 32593 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1026:
#line 7893 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= KEYTYPE_UNIQUE;
          }
#line 32601 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1027:
#line 7897 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= KEYTYPE_UNIQUE;
          }
#line 32609 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1028:
#line 7901 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_MULTIPLE | KEYTYPE_CLUSTERING);
          }
#line 32617 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1029:
#line 7905 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_MULTIPLE | KEYTYPE_CLUSTERING);
          }
#line 32625 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1030:
#line 7909 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_UNIQUE | KEYTYPE_CLUSTERING);
          }
#line 32633 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1031:
#line 7913 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_UNIQUE | KEYTYPE_CLUSTERING);
          }
#line 32641 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1032:
#line 7917 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_UNIQUE | KEYTYPE_CLUSTERING);
          }
#line 32649 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1033:
#line 7921 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_type)= static_cast<keytype>(KEYTYPE_UNIQUE | KEYTYPE_CLUSTERING);
          }
#line 32657 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1034:
#line 7926 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 32663 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1036:
#line 7932 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 32673 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1037:
#line 7938 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 32683 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1039:
#line 7948 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING plugin_name= {(yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length};
            if (!plugin_is_ready(plugin_name, MYSQL_FTPARSER_PLUGIN))
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            else
              (yyval.index_option)= NEW_PTN PT_fulltext_index_parser_name(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 32698 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1040:
#line 7961 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 32704 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1042:
#line 7967 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 32714 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1043:
#line 7973 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 32724 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1045:
#line 7985 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 32730 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1047:
#line 7991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 32740 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1048:
#line 7997 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 32750 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1049:
#line 8005 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 32756 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1050:
#line 8006 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 32762 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1051:
#line 8011 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_block_size((yyvsp[0].ulong_num)); }
#line 32768 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1052:
#line 8013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_comment(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 32776 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1053:
#line 8017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_visibility((yyvsp[0].visibility));
          }
#line 32784 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1054:
#line 8021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option) = make_index_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 32792 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1055:
#line 8025 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option) = make_index_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 32800 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1056:
#line 8048 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[0].lexer.lex_str), NULL}; }
#line 32806 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1057:
#line 8049 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 32812 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1058:
#line 8050 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 32818 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1059:
#line 8054 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option) = nullptr; }
#line 32824 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1061:
#line 8059 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 32830 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1062:
#line 8060 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 32836 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1063:
#line 8064 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= true; }
#line 32842 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1064:
#line 8065 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= false; }
#line 32848 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1065:
#line 8069 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 32854 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1066:
#line 8070 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 32860 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1067:
#line 8071 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 32866 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1068:
#line 8076 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 32876 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1069:
#line 8082 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
          }
#line 32887 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1070:
#line 8092 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].order_direction), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 32897 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1071:
#line 8098 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int key_part_length= atoi((yyvsp[-2].lexer.lex_str).str);
            if (!key_part_length)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[-4].lexer.lex_str).str);
            }
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[0].order_direction),
                                                  key_part_length);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 32913 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1072:
#line 8113 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 32923 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1073:
#line 8119 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 32934 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1075:
#line 8130 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification((yyvsp[-2].item), (yyvsp[0].order_direction));
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 32944 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1076:
#line 8138 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 32950 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1078:
#line 8143 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= null_lex_str; }
#line 32956 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1079:
#line 8144 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 32962 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1080:
#line 8149 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            if ((yyval.string_list) == NULL || (yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT; // OOM
          }
#line 32972 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1081:
#line 8155 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT;
          }
#line 32981 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1082:
#line 8167 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-3].lexer.optimizer_hints),
                  (yyvsp[-1].table),
                  (yyvsp[0].alter_list).actions,
                  (yyvsp[0].alter_list).flags.algo.get_or_default(),
                  (yyvsp[0].alter_list).flags.lock.get_or_default(),
                  (yyvsp[0].alter_list).flags.validation.get_or_default());
          }
#line 32996 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1083:
#line 8178 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_standalone_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-3].lexer.optimizer_hints),
                  (yyvsp[-1].table),
                  (yyvsp[0].standalone_alter_table_action).action,
                  (yyvsp[0].standalone_alter_table_action).flags.algo.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.lock.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.validation.get_or_default());
          }
#line 33011 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1084:
#line 8192 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 33023 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1085:
#line 8200 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
#line 33036 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1086:
#line 8212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 33051 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1087:
#line 8223 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
          }
#line 33062 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1088:
#line 8233 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 33077 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1089:
#line 8244 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
          }
#line 33088 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1090:
#line 8254 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 33103 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1091:
#line 8265 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33109 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1092:
#line 8272 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 33125 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1093:
#line 8284 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33131 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1094:
#line 8289 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= new (YYTHD->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 33151 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1095:
#line 8309 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num)))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 33168 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1096:
#line 8326 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{ALTER_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33191 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1097:
#line 8348 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_add_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33213 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1098:
#line 8367 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace_drop_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33236 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1099:
#line 8386 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_rename{(yyvsp[-3].lexer.lex_str), (yyvsp[0].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33248 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1100:
#line 8394 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33271 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1101:
#line 8417 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_alter_undo_tablespace{
              ALTER_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str),
              {nullptr, 0}, pc, (yyvsp[-1].alter_tablespace_type)};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33295 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1102:
#line 8440 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.m_server_name= (yyvsp[-4].lexer.lex_str);
            lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_server(&Lex->server_options);
          }
#line 33307 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1104:
#line 8454 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].lex_user)->auth.str= nullptr;
            (yyvsp[-6].lex_user)->auth.length= 0;
            (yyvsp[-6].lex_user)->has_password_generator= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-6].lex_user)->current_auth= (yyvsp[-1].lex_cstr);
              (yyvsp[-6].lex_user)->uses_replace_clause= true;
            }
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 33325 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1105:
#line 8469 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-5].lex_user)->current_auth= (yyvsp[-1].lex_cstr);
              (yyvsp[-5].lex_user)->uses_replace_clause= true;
            }
            Lex->contains_plaintext_password= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 33342 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1106:
#line 8482 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].lex_user)->discard_old_password= true;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->auth= NULL_CSTR;
          }
#line 33352 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1107:
#line 8488 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_ALL);
              MAKE_CMD(tmp);
          }
#line 33368 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1108:
#line 8500 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_NONE);
              MAKE_CMD(tmp);
          }
#line 33384 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1109:
#line 8512 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            auto *tmp=
              NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                 users, (yyvsp[0].user_list),
                                                 role_enum::ROLE_NAME);
            MAKE_CMD(tmp);
          }
#line 33399 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1110:
#line 8525 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = LEX_CSTRING{nullptr, 0}; }
#line 33405 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1111:
#line 8526 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 33411 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1112:
#line 8533 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_resource_group(to_lex_cstring((yyvsp[-4].lexer.lex_str)),
                                                (yyvsp[-3].resource_group_vcpu_list_type), (yyvsp[-2].resource_group_priority_type), (yyvsp[-1].resource_group_state_type), (yyvsp[0].resource_group_flag_type));
          }
#line 33420 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1113:
#line 8541 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_USER;
            lex->drop_if_exists= (yyvsp[0].num);
          }
#line 33430 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1114:
#line 8550 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_COMMENT_NOT_USED;
          }
#line 33440 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1115:
#line 8556 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_ATTRIBUTE;
            lex->alter_user_comment_text = (yyvsp[0].lexer.lex_str);
          }
#line 33451 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1116:
#line 8563 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_COMMENT;
            lex->alter_user_comment_text = (yyvsp[0].lexer.lex_str);
          }
#line 33462 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1117:
#line 8571 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33468 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1121:
#line 8582 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= false;
          }
#line 33478 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1122:
#line 8588 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= true;
          }
#line 33488 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1123:
#line 8594 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= true;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 33500 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1124:
#line 8602 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[-1].ulong_num) == 0 || (yyvsp[-1].ulong_num) > UINT_MAX16)
            {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[-1].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "DAY", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.expire_after_days= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 33519 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1125:
#line 8617 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 33531 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1126:
#line 8625 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            Lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 33543 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1127:
#line 8633 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= (yyvsp[0].ulong_num);
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= false;
          }
#line 33554 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1128:
#line 8640 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= 0;
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= true;
          }
#line 33565 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1129:
#line 8647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= false;
          }
#line 33576 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1130:
#line 8654 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= 0;
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= true;
          }
#line 33587 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1131:
#line 8661 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::YES;
          }
#line 33597 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1132:
#line 8667 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::DEFAULT;
          }
#line 33607 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1133:
#line 8673 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::NO;
          }
#line 33617 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1134:
#line 8679 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "FAILED_LOGIN_ATTEMPTS", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_failed_login_attempts= true;
            lex->alter_password.failed_login_attempts= (yyvsp[0].ulong_num);
          }
#line 33633 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1135:
#line 8691 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "PASSWORD_LOCK_TIME", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= (yyvsp[0].ulong_num);
          }
#line 33649 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1136:
#line 8703 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= -1;
          }
#line 33659 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1137:
#line 8711 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33665 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1139:
#line 8716 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33671 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1140:
#line 8717 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33677 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1141:
#line 8722 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 33687 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1142:
#line 8728 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 33697 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1143:
#line 8734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 33707 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1144:
#line 8740 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 33717 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1145:
#line 8749 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty LEX_USER means current_user */
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) Lex->thd->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;

            memset(curr_user, 0, sizeof(LEX_USER));
            Lex->users_list.push_back(curr_user);
            (yyval.lex_user)= curr_user;
          }
#line 33732 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1146:
#line 8762 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 33738 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1147:
#line 8763 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33744 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1148:
#line 8764 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33750 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1149:
#line 8765 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33756 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1150:
#line 8769 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 33762 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1151:
#line 8771 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname);
            (yyval.num)= 1;
          }
#line 33775 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1152:
#line 8782 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 33781 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1153:
#line 8783 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33787 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1154:
#line 8787 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str).str= 0; (yyval.lexer.lex_str).length= 0; }
#line 33793 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1155:
#line 8788 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 33799 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1157:
#line 8794 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list)= (yyvsp[-1].alter_list);
            if ((yyval.alter_list).actions == NULL)
            {
              (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
              if ((yyval.alter_list).actions == NULL)
                MYSQL_YYABORT; // OOM
            }
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 33815 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1158:
#line 8809 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags.init();
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 33824 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1159:
#line 8814 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 33833 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1160:
#line 8822 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_partition_by((yyvsp[0].partition_clause));
          }
#line 33841 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1161:
#line 8826 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_remove_partitioning;
          }
#line 33849 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1162:
#line 8833 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NULL;
          }
#line 33858 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1163:
#line 8838 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[0].algo_and_lock_and_validation);
            (yyval.alter_list).actions= NULL;
          }
#line 33867 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1165:
#line 8844 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.alter_list).flags.merge((yyvsp[0].alter_list).flags);
            (yyval.alter_list).actions= (yyvsp[0].alter_list).actions;
          }
#line 33877 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1166:
#line 8853 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_tablespace;
          }
#line 33885 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1167:
#line 8857 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_tablespace;
          }
#line 33893 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1168:
#line 8868 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition((yyvsp[0].num));
          }
#line 33901 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1169:
#line 8872 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_def_list((yyvsp[-3].num), (yyvsp[-1].part_def_list));
          }
#line 33909 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1170:
#line 8876 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_num((yyvsp[-2].num), (yyvsp[0].ulong_num));
          }
#line 33917 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1171:
#line 8880 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_drop_partition(*(yyvsp[0].string_list));
          }
#line 33925 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1172:
#line 8885 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_rebuild_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 33933 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1173:
#line 8890 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_optimize_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 33941 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1174:
#line 8895 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_analyze_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 33949 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1175:
#line 8899 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_check_partition((yyvsp[-1].string_list),
                                                       (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 33958 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1176:
#line 8906 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_repair_partition((yyvsp[-2].num), (yyvsp[-1].string_list),
                                                        (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 33967 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1177:
#line 8911 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_coalesce_partition((yyvsp[-1].num), (yyvsp[0].ulong_num));
          }
#line 33975 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1178:
#line 8915 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_truncate_partition((yyvsp[0].string_list));
          }
#line 33983 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1179:
#line 8919 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition((yyvsp[0].num));
          }
#line 33991 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1180:
#line 8924 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition_into((yyvsp[-5].num), *(yyvsp[-4].string_list), (yyvsp[-1].part_def_list));
          }
#line 33999 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1181:
#line 8929 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_exchange_partition((yyvsp[-4].lexer.lex_str), (yyvsp[-1].table), (yyvsp[0].with_validation));
          }
#line 34007 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1182:
#line 8934 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_partition_tablespace((yyvsp[-1].string_list));
          }
#line 34015 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1183:
#line 8939 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_partition_tablespace((yyvsp[-1].string_list));
          }
#line 34023 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1184:
#line 8943 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_load;
          }
#line 34031 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1185:
#line 8947 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_unload;
          }
#line 34039 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1186:
#line 8953 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_validation)= Alter_info::ALTER_VALIDATION_DEFAULT; }
#line 34045 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1188:
#line 8959 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITH_VALIDATION;
          }
#line 34053 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1189:
#line 8963 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITHOUT_VALIDATION;
          }
#line 34061 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1190:
#line 8969 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 34067 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1192:
#line 8979 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.alter_list).actions == NULL || (yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 34078 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1193:
#line 8986 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 34087 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1194:
#line 8991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 34095 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1195:
#line 8995 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= (yyvsp[0].space_separated_alter_table_opts);
          }
#line 34104 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1196:
#line 9000 "sql_yacc.yy" /* yacc.c:1646  */
    {
            for (auto *option : *(yyvsp[0].space_separated_alter_table_opts))
            {
              if ((yyvsp[-2].alter_list).actions->push_back(option))
                MYSQL_YYABORT; // OOM
            }
          }
#line 34116 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1198:
#line 9012 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation)= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.algo_and_lock_and_validation).merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 34125 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1199:
#line 9020 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].field_def), (yyvsp[-1].table_constraint_def), (yyvsp[0].c_str));
          }
#line 34133 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1200:
#line 9024 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_columns((yyvsp[-1].table_element_list));
          }
#line 34141 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1201:
#line 9028 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_constraint((yyvsp[0].table_constraint_def));
          }
#line 34149 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1202:
#line 9032 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 34157 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1203:
#line 9036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 34165 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1204:
#line 9040 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($4) is ignored!
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_column((yyvsp[-1].lexer.lex_str).str);
          }
#line 34174 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1205:
#line 9045 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_foreign_key((yyvsp[0].lexer.lex_str).str);
          }
#line 34182 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1206:
#line 9049 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key(primary_key_name);
          }
#line 34190 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1207:
#line 9053 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key((yyvsp[0].lexer.lex_str).str);
          }
#line 34198 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1208:
#line 9057 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_check_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 34206 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1209:
#line 9061 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 34214 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1210:
#line 9065 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(false);
          }
#line 34222 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1211:
#line 9069 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(true);
          }
#line 34230 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1212:
#line 9073 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-3].lexer.lex_str).str, (yyvsp[0].item));
          }
#line 34238 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1213:
#line 9077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-5].lexer.lex_str).str, (yyvsp[-1].item));
          }
#line 34246 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1214:
#line 9081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-2].lexer.lex_str).str, NULL);
          }
#line 34254 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1215:
#line 9086 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_column_visibility((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].visibility));
          }
#line 34262 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1216:
#line 9090 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_index_visible((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].visibility));
          }
#line 34270 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1217:
#line 9094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_check_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 34278 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1218:
#line 9098 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 34286 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1219:
#line 9102 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename((yyvsp[0].table));
          }
#line 34294 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1220:
#line 9106 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_key((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 34302 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1221:
#line 9110 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_column((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 34310 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1222:
#line 9114 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_convert_to_charset((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 34318 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1223:
#line 9118 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_convert_to_charset(
                YYTHD->variables.collation_database,
                (yyvsp[0].lexer.charset) ? (yyvsp[0].lexer.charset) : YYTHD->variables.collation_database);
          }
#line 34328 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1224:
#line 9124 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_force;
          }
#line 34336 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1225:
#line 9128 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_order((yyvsp[0].order_list));
          }
#line 34344 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1226:
#line 9135 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 34353 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1227:
#line 9140 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).lock.set((yyvsp[0].alter_table_lock));
          }
#line 34362 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1228:
#line 9145 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).validation.set((yyvsp[0].with_validation));
          }
#line 34371 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1229:
#line 9152 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_index_lock_and_algorithm).init(); }
#line 34377 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1230:
#line 9154 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 34386 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1231:
#line 9159 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 34395 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1232:
#line 9164 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[-1].alter_table_lock));
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 34405 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1233:
#line 9170 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[-1].alter_table_algorithm));
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 34415 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1234:
#line 9178 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_algorithm)= (yyvsp[0].alter_table_algorithm); }
#line 34421 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1235:
#line 9183 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
#line 34429 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1236:
#line 9187 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "INPLACE"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INPLACE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "INSTANT"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INSTANT;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "COPY"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_COPY;
            else
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 34447 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1237:
#line 9203 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_lock)= (yyvsp[0].alter_table_lock); }
#line 34453 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1238:
#line 9208 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 34461 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1239:
#line 9212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "NONE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_NONE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "SHARED"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_SHARED;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "EXCLUSIVE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_EXCLUSIVE;
            else
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 34479 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1242:
#line 9233 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 34485 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1243:
#line 9234 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 34491 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1244:
#line 9238 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_DEFAULT; }
#line 34497 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1245:
#line 9239 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_RESTRICT; }
#line 34503 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1246:
#line 9240 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_CASCADE; }
#line 34509 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1247:
#line 9244 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 34515 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1248:
#line 9245 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[0].lexer.lex_str).str; }
#line 34521 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1249:
#line 9246 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= first_keyword; }
#line 34527 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1250:
#line 9250 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34533 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1251:
#line 9251 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34539 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1252:
#line 9252 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34545 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1253:
#line 9253 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34551 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1255:
#line 9259 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_STOP_GROUP_REPLICATION;
          }
#line 34560 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1256:
#line 9267 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_START_GROUP_REPLICATION;
          }
#line 34570 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1264:
#line 9292 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.user = (yyvsp[0].lexer.lex_str).str;
            if ((yyvsp[0].lexer.lex_str).length == 0)
            {
              my_error(ER_GROUP_REPLICATION_USER_EMPTY_MSG, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 34583 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1265:
#line 9304 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.password = (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password = true;
            if ((yyvsp[0].lexer.lex_str).length > 32)
            {
              my_error(ER_GROUP_REPLICATION_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 34597 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1266:
#line 9317 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 34605 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1267:
#line 9323 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->set_replication_deprecated_syntax_used(); }
#line 34611 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1269:
#line 9329 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            lex->slave_thd_opt= (yyvsp[-1].num);
            if (lex->is_replication_deprecated_syntax_used())
              push_deprecated_warn(YYTHD, "STOP SLAVE", "STOP REPLICA");
            if (lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 34626 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1270:
#line 9343 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            /* Clean previous replica connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[0].num);
            if (lex->is_replication_deprecated_syntax_used())
              push_deprecated_warn(YYTHD, "START SLAVE", "START REPLICA");
          }
#line 34643 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1271:
#line 9358 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 34664 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1272:
#line 9375 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 34673 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1273:
#line 9383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 34690 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1274:
#line 9399 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 34698 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1275:
#line 9403 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34706 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1276:
#line 9410 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34714 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1277:
#line 9414 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 34722 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1278:
#line 9421 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 34730 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1279:
#line 9425 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
            Lex->donor_transaction_id= (yyvsp[0].item);
          }
#line 34741 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1280:
#line 9432 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 34749 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1281:
#line 9436 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 34757 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1282:
#line 9442 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 34765 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1283:
#line 9446 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.user= (yyvsp[0].lexer.lex_str).str;
          }
#line 34773 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1284:
#line 9452 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 34781 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1285:
#line 9456 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.password= (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password= true;
          }
#line 34790 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1286:
#line 9462 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 34798 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1287:
#line 9466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 34806 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1288:
#line 9472 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 34814 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1289:
#line 9476 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_dir= (yyvsp[0].lexer.lex_str).str;
          }
#line 34822 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1290:
#line 9483 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 34830 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1291:
#line 9487 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34838 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1292:
#line 9494 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34846 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1293:
#line 9498 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 34854 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1294:
#line 9505 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_SQL;
          }
#line 34862 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1295:
#line 9509 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_IO;
          }
#line 34870 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1296:
#line 9516 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->mi.slave_until= false;
          }
#line 34879 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1297:
#line 9521 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_error(ER_BAD_SLAVE_UNTIL_COND, MYF(0));
               MYSQL_YYABORT;
            }
            lex->mi.slave_until= true;
          }
#line 34905 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1300:
#line 9548 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
#line 34914 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1301:
#line 9553 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
#line 34923 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1302:
#line 9558 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.until_after_gaps= true;
          }
#line 34931 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1303:
#line 9565 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            Lex->check_opt.flags= (yyvsp[0].ulong_num);
          }
#line 34946 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1304:
#line 9578 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 34952 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1305:
#line 9579 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_QUICK; }
#line 34958 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1306:
#line 9580 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_EXTEND; }
#line 34964 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1307:
#line 9586 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_repair_table_stmt(YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                             (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 34973 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1308:
#line 9593 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 34979 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1311:
#line 9600 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 34988 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1312:
#line 9607 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;  (yyval.mi_type).sql_flags= 0; }
#line 34994 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1313:
#line 9608 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND; (yyval.mi_type).sql_flags= 0; }
#line 35000 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1314:
#line 9609 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;        (yyval.mi_type).sql_flags= TT_USEFRM; }
#line 35006 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1315:
#line 9615 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_analyze_table_stmt(YYMEM_ROOT, (yyvsp[-4].lexer.optimizer_hints), (yyvsp[-3].num), (yyvsp[-1].table_list),
                                              (yyvsp[0].histogram).command, (yyvsp[0].histogram).num_buckets,
                                              (yyvsp[0].histogram).columns);
          }
#line 35016 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1316:
#line 9623 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS; }
#line 35022 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1317:
#line 9625 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            longlong num= my_strtoll10((yyvsp[-1].lexer.lex_str).str, nullptr, &error);
            MYSQL_YYABORT_UNLESS(error <= 0);

            if (num < 1 || num > MAX_NUMBER_OF_HISTOGRAM_BUCKETS)
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "Number of buckets",
                       "ANALYZE TABLE");
              MYSQL_YYABORT;
            }

            (yyval.num)= num;
          }
#line 35041 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1318:
#line 9643 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command= Sql_cmd_analyze_table::Histogram_command::NONE;
            (yyval.histogram).columns= nullptr;
            (yyval.histogram).num_buckets= 0;
          }
#line 35051 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1319:
#line 9649 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::UPDATE_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[-1].string_list);
            (yyval.histogram).num_buckets= (yyvsp[0].num);
          }
#line 35062 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1320:
#line 9656 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::DROP_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[0].string_list);
            (yyval.histogram).num_buckets= 0;
          }
#line 35073 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1321:
#line 9666 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->binlog_stmt_arg= (yyvsp[0].lexer.lex_str);
          }
#line 35082 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1322:
#line 9674 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_check_table_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.optimizer_hints), (yyvsp[-1].table_list),
                                            (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 35091 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1323:
#line 9681 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 35097 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1326:
#line 9688 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 35106 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1327:
#line 9696 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;              (yyval.mi_type).sql_flags= 0; }
#line 35112 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1328:
#line 9698 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_FAST;               (yyval.mi_type).sql_flags= 0; }
#line 35118 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1329:
#line 9700 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_MEDIUM;             (yyval.mi_type).sql_flags= 0; }
#line 35124 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1330:
#line 9702 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND;             (yyval.mi_type).sql_flags= 0; }
#line 35130 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1331:
#line 9704 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_CHECK_ONLY_CHANGED; (yyval.mi_type).sql_flags= 0; }
#line 35136 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1332:
#line 9706 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;                    (yyval.mi_type).sql_flags= TT_FOR_UPGRADE; }
#line 35142 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1333:
#line 9711 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_optimize_table_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.optimizer_hints), (yyvsp[-2].num), (yyvsp[0].table_list));
          }
#line 35150 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1334:
#line 9717 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 35156 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1335:
#line 9718 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 35162 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1336:
#line 9719 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 35168 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1337:
#line 9724 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
#line 35176 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1338:
#line 9728 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35182 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1339:
#line 9730 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 35190 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1340:
#line 9737 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 35199 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1341:
#line 9742 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 35208 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1344:
#line 9755 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Query_block *sl= Select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[-2].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[0].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 35222 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1345:
#line 9768 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_stmt(YYMEM_ROOT, (yyvsp[-2].keycache_list), (yyvsp[0].lex_cstr));
          }
#line 35230 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1346:
#line 9773 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_partitions_stmt(YYMEM_ROOT,
                                                       (yyvsp[-4].table), (yyvsp[-3].adm_partition), (yyvsp[-2].key_usage_list), (yyvsp[0].lex_cstr));
          }
#line 35239 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1347:
#line 9781 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= NEW_PTN Mem_root_array<PT_assign_to_keycache *>(YYMEM_ROOT);
            if ((yyval.keycache_list) == NULL || (yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 35249 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1348:
#line 9787 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= (yyvsp[-2].keycache_list);
            if ((yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 35259 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1349:
#line 9796 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.assign_to_keycache)= NEW_PTN PT_assign_to_keycache((yyvsp[-1].table), (yyvsp[0].key_usage_list));
          }
#line 35267 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1350:
#line 9802 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 35273 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1351:
#line 9803 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = default_key_cache_base; }
#line 35279 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1352:
#line 9809 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_partitions_stmt(YYMEM_ROOT, (yyvsp[-3].table),(yyvsp[-2].adm_partition), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 35287 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1353:
#line 9813 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_stmt(YYMEM_ROOT, (yyvsp[-4].lexer.optimizer_hints), (yyvsp[0].preload_list));
          }
#line 35295 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1354:
#line 9820 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= NEW_PTN Mem_root_array<PT_preload_keys *>(YYMEM_ROOT);
            if ((yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 35305 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1355:
#line 9826 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= (yyvsp[-2].preload_list);
            if ((yyval.preload_list) == NULL || (yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 35315 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1356:
#line 9835 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_keys)= NEW_PTN PT_preload_keys((yyvsp[-2].table), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 35323 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1357:
#line 9842 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.adm_partition)= NEW_PTN PT_adm_partition((yyvsp[-1].string_list));
          }
#line 35331 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1358:
#line 9848 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 35337 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1359:
#line 9850 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE,
                             old_mode ? INDEX_HINT_MASK_JOIN
                                      : INDEX_HINT_MASK_ALL);
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 35348 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1360:
#line 9859 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 35354 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1361:
#line 9860 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 35360 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1362:
#line 9865 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[0].query_expression));
          }
#line 35368 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1363:
#line 9869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list)),
                                        nullptr, true);
          }
#line 35377 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1364:
#line 9874 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[0].query_primary));
          }
#line 35385 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1366:
#line 9914 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = (yyvsp[-1].top_level_node);
          }
#line 35393 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1367:
#line 9918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[-1].query_expression), (yyvsp[0].into_destination));
          }
#line 35401 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1368:
#line 9922 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[0].locking_clause_list)), (yyvsp[-1].into_destination), true);
          }
#line 35409 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1369:
#line 9926 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list)), (yyvsp[0].into_destination));
          }
#line 35417 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1370:
#line 9930 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[-1].query_primary), (yyvsp[0].into_destination));
          }
#line 35425 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1371:
#line 9971 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-2].query_expression_body), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 35433 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1372:
#line 9978 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_expression_body), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 35441 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1373:
#line 9984 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-2].query_primary), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 35449 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1374:
#line 9991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_primary), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 35457 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1375:
#line 9996 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-1].query_primary), nullptr, (yyvsp[0].limit_clause));
          }
#line 35465 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1376:
#line 10002 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-2].with_clause), (yyvsp[-1].query_primary), nullptr, (yyvsp[0].limit_clause));
          }
#line 35473 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1377:
#line 10007 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-1].with_clause), (yyvsp[0].query_primary), nullptr, nullptr);
          }
#line 35481 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1378:
#line 10014 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = (yyvsp[0].query_primary);
          }
#line 35489 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1379:
#line 10018 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_expression_body), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 35497 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1380:
#line 10022 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_primary), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 35505 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1381:
#line 10026 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_expression_body), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary), true);
          }
#line 35513 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1382:
#line 10030 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_primary), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary), true);
          }
#line 35521 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1383:
#line 10037 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary)= (yyvsp[-1].query_primary); }
#line 35527 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1384:
#line 10038 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary)= (yyvsp[-1].query_expression); }
#line 35533 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1385:
#line 10040 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary) = NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list));
          }
#line 35541 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1386:
#line 10047 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Bison doesn't get polymorphism.
            (yyval.query_primary)= (yyvsp[0].query_primary);
          }
#line 35550 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1387:
#line 10052 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_table_value_constructor((yyvsp[0].values_list));
          }
#line 35558 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1388:
#line 10056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item_list= NEW_PTN PT_select_item_list;
            auto asterisk= NEW_PTN Item_asterisk((yyloc), nullptr, nullptr);
            if (item_list == nullptr || asterisk == nullptr ||
                item_list->push_back(asterisk))
              MYSQL_YYABORT;
            (yyval.query_primary)= NEW_PTN PT_explicit_table({}, item_list, (yyvsp[0].table_reference_list));
          }
#line 35571 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1389:
#line 10076 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-8].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-7].select_options),  // select_options
                                      (yyvsp[-6].item_list2),  // select_item_list
                                      (yyvsp[-5].into_destination),  // into_clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows),  // windows
                                      (yylsp[-4]).raw.is_empty()); // implicit FROM
          }
#line 35589 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1390:
#line 10097 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-7].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-6].select_options),  // select_options
                                      (yyvsp[-5].item_list2),  // select_item_list
                                      NULL,// no INTO clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows),  // windows
                                      (yylsp[-4]).raw.is_empty()); // implicit FROM
          }
#line 35607 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1391:
#line 10113 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 35613 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1393:
#line 10118 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[0].table_reference_list); }
#line 35619 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1394:
#line 10122 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 35625 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1396:
#line 10128 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 35635 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1397:
#line 10134 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-2].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 35645 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1398:
#line 10143 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 35653 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1399:
#line 10150 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            auto table= NEW_PTN
                PT_table_factor_table_ident((yyvsp[0].table), nullptr, NULL_CSTR, nullptr);
            if ((yyval.table_reference_list).push_back(table))
              MYSQL_YYABORT; // OOM
          }
#line 35665 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1400:
#line 10161 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= 0;
          }
#line 35673 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1402:
#line 10169 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.select_options).merge((yyvsp[-1].select_options), (yyvsp[0].select_options)))
              MYSQL_YYABORT;
          }
#line 35682 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1404:
#line 10178 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= (yyvsp[0].ulonglong_number);
          }
#line 35690 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1405:
#line 10182 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn_no_replacement(YYTHD, "SQL_NO_CACHE");
            /* Ignored since MySQL 8.0. */
            (yyval.select_options).query_spec_options= 0;
          }
#line 35700 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1406:
#line 10191 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= (yyvsp[-1].locking_clause_list);
            if ((yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 35710 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1407:
#line 10197 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= NEW_PTN PT_locking_clause_list(YYTHD->mem_root);
            if ((yyval.locking_clause_list) == nullptr || (yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 35720 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1408:
#line 10206 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause((yyvsp[-1].lock_strength), (yyvsp[0].locked_row_action));
          }
#line 35728 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1409:
#line 10210 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_table_locking_clause((yyvsp[-2].lock_strength), (yyvsp[-1].table_ident_list), (yyvsp[0].locked_row_action));
          }
#line 35736 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1410:
#line 10214 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause(Lock_strength::SHARE);
          }
#line 35744 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1411:
#line 10220 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::UPDATE; }
#line 35750 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1412:
#line 10221 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::SHARE; }
#line 35756 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1413:
#line 10225 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_ident_list)= (yyvsp[0].table_ident_list); }
#line 35762 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1414:
#line 10229 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::WAIT; }
#line 35768 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1416:
#line 10234 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::SKIP; }
#line 35774 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1417:
#line 10235 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::NOWAIT; }
#line 35780 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1418:
#line 10240 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 35790 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1419:
#line 10246 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 35800 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1420:
#line 10252 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item = NEW_PTN Item_asterisk((yyloc), nullptr, nullptr);
            (yyval.item_list2) = NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == nullptr || item == nullptr || (yyval.item_list2)->push_back(item))
              MYSQL_YYABORT;
          }
#line 35811 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1421:
#line 10261 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 35817 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1422:
#line 10263 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_expr_with_alias((yyloc), (yyvsp[-1].item), (yylsp[-1]).cpp, to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 35825 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1423:
#line 10270 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=null_lex_str;}
#line 35831 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1424:
#line 10271 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 35837 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1425:
#line 10272 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 35843 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1426:
#line 10273 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 35849 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1427:
#line 10274 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 35855 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1428:
#line 10278 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35861 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1429:
#line 10279 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35867 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1430:
#line 10285 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_or,
                                             Item_func::COND_OR_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35877 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1431:
#line 10291 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* XOR is a proprietary extension */
            (yyval.item) = NEW_PTN Item_func_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35886 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1432:
#line 10296 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_and,
                                             Item_func::COND_AND_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35896 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1433:
#line 10302 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 35904 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1434:
#line 10306 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_TRUE);
          }
#line 35912 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1435:
#line 10310 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_TRUE);
          }
#line 35920 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1436:
#line 10314 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_FALSE);
          }
#line 35928 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1437:
#line 10318 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_FALSE);
          }
#line 35936 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1438:
#line 10322 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 35944 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1439:
#line 10326 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 35952 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1441:
#line 10334 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 35960 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1442:
#line 10338 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 35968 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1443:
#line 10342 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_comp_op((yyloc), (yyvsp[-2].item), (yyvsp[-1].boolfunc2creator), (yyvsp[0].item));
          }
#line 35976 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1444:
#line 10346 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].boolfunc2creator) == &comp_equal_creator)
              /*
                We throw this manual parse error rather than split the rule
                comp_op into a null-safe and a non null-safe rule, since doing
                so would add a shift/reduce conflict. It's actually this rule
                and the ones referencing it that cause all the conflicts, but
                we still don't want the count to go up.
              */
              YYTHD->syntax_error_at((yylsp[-2]));
            (yyval.item)= NEW_PTN PTI_comp_op_all((yyloc), (yyvsp[-3].item), (yyvsp[-2].boolfunc2creator), (yyvsp[-1].num), (yyvsp[0].subquery));
          }
#line 35993 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1446:
#line 10363 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-2].item), (yyvsp[0].subquery));
          }
#line 36001 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1447:
#line 10367 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-3].item), (yyvsp[0].subquery));
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 36010 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1448:
#line 10372 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-4].item), true, (yyvsp[-1].item));
          }
#line 36018 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1449:
#line 10376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == NULL || (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item)) || (yyvsp[-1].item_list2)->push_front((yyvsp[-6].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), false);
          }
#line 36029 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1450:
#line 10383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-5].item), false, (yyvsp[-1].item));
          }
#line 36037 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1451:
#line 10387 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == nullptr)
              MYSQL_YYABORT;
            (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item));
            (yyvsp[-1].item_list2)->value.push_front((yyvsp[-7].item));

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), true);
          }
#line 36050 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1452:
#line 10396 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_member_of((yyloc), (yyvsp[-5].item), (yyvsp[-1].item));
          }
#line 36058 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1453:
#line 10400 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item), false);
          }
#line 36066 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1454:
#line 10404 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item), true);
          }
#line 36074 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1455:
#line 10408 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item1= NEW_PTN Item_func_soundex((yyloc), (yyvsp[-3].item));
            Item *item4= NEW_PTN Item_func_soundex((yyloc), (yyvsp[0].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_eq((yyloc), item1, item4);
          }
#line 36086 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1456:
#line 10416 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36094 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1457:
#line 10420 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36102 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1458:
#line 10424 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-3].item), (yyvsp[0].item));
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 36111 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1459:
#line 10429 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 36120 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1460:
#line 10434 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-2].item));
            args->push_back((yyvsp[0].item));

            (yyval.item)= NEW_PTN Item_func_regexp_like((yylsp[-2]), args);
          }
#line 36132 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1461:
#line 10442 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-3].item));
            args->push_back((yyvsp[0].item));
            Item *item= NEW_PTN Item_func_regexp_like((yyloc), args);
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 36144 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1465:
#line 10459 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_or((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36152 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1466:
#line 10463 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_and((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36160 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1467:
#line 10467 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_left((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36168 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1468:
#line 10471 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_right((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36176 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1469:
#line 10475 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_plus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36184 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1470:
#line 10479 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36192 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1471:
#line 10483 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
          }
#line 36200 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1472:
#line 10487 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
          }
#line 36208 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1473:
#line 10491 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mul((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36216 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1474:
#line 10495 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 36224 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1475:
#line 10499 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 36232 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1476:
#line 10503 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_int_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 36240 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1477:
#line 10507 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36248 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1478:
#line 10511 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36256 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1483:
#line 10525 "sql_yacc.yy" /* yacc.c:1646  */
    {
           push_deprecated_warn(YYTHD, "&&", "AND");
         }
#line 36264 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1486:
#line 10536 "sql_yacc.yy" /* yacc.c:1646  */
    { push_deprecated_warn(YYTHD, "!", "NOT"); }
#line 36270 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1488:
#line 10541 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 36276 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1489:
#line 10542 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_equal_creator; }
#line 36282 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1490:
#line 10543 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 36288 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1491:
#line 10544 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 36294 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1492:
#line 10545 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 36300 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1493:
#line 10546 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 36306 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1494:
#line 10547 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 36312 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1495:
#line 10551 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 36318 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1496:
#line 10552 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 36324 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1502:
#line 10562 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_set_collation((yyloc), (yyvsp[-2].item), (yyvsp[0].lexer.lex_str));
          }
#line 36332 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1504:
#line 10566 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].param_marker); }
#line 36338 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1508:
#line 10571 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_concat((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36346 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1509:
#line 10575 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item); // TODO: do we really want to ignore unary '+' before any kind of literals?
          }
#line 36354 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1510:
#line 10579 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_neg((yyloc), (yyvsp[0].item));
          }
#line 36362 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1511:
#line 10583 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_neg((yyloc), (yyvsp[0].item));
          }
#line 36370 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1512:
#line 10587 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 36378 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1513:
#line 10591 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_singlerow_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 36386 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1514:
#line 10594 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 36392 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1515:
#line 10596 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 36400 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1516:
#line 10600 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 36408 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1517:
#line 10604 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_exists_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 36416 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1518:
#line 10608 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_odbc_date((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].item));
          }
#line 36424 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1519:
#line 10612 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_match((yyloc), (yyvsp[-5].item_list2), (yyvsp[-2].item), (yyvsp[-1].num));
          }
#line 36432 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1520:
#line 10616 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[0]), (yyvsp[0].item), ITEM_CAST_CHAR, &my_charset_bin);
          }
#line 36440 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1521:
#line 10620 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-4]), (yyvsp[-4].item), (yyvsp[-2].cast_type), (yyvsp[-1].num));
          }
#line 36448 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1522:
#line 10624 "sql_yacc.yy" /* yacc.c:1646  */
    {
            my_error(ER_NOT_SUPPORTED_YET, MYF(0), "AT LOCAL");
          }
#line 36456 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1523:
#line 10629 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Cast_type cast_type{ITEM_CAST_DATETIME, nullptr, nullptr, (yyvsp[-1].c_str)};
            auto datetime_factor =
                NEW_PTN Item_func_at_time_zone((yylsp[-9]), (yyvsp[-9].item), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-5].is_not_empty));
            (yyval.item) = create_func_cast(YYTHD, (yylsp[-9]), datetime_factor, cast_type, false);
          }
#line 36467 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1524:
#line 10636 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_case((yyloc), (yyvsp[-2].item_list), (yyvsp[-3].item), (yyvsp[-1].item) );
          }
#line 36475 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1525:
#line 10640 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-3]), (yyvsp[-3].item), (yyvsp[-1].cast_type), false);
          }
#line 36483 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1526:
#line 10644 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_conv_charset((yyloc), (yyvsp[-3].item),(yyvsp[-1].lexer.charset));
          }
#line 36491 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1527:
#line 10648 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc), (yyvsp[-1].item));
          }
#line 36499 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1528:
#line 10652 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_insert_value((yyloc), (yyvsp[-1].item));
          }
#line 36507 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1529:
#line 10657 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
          }
#line 36515 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1530:
#line 10661 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            (yyval.item)= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
          }
#line 36526 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1531:
#line 10668 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            Item *extr= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
            (yyval.item)= NEW_PTN Item_func_json_unquote((yyloc), extr);
          }
#line 36538 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1532:
#line 10678 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 36544 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1533:
#line 10679 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 36550 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1534:
#line 10690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-1].item_list2));
          }
#line 36558 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1535:
#line 10694 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-3].item_list2), (yyvsp[-1].lexer.charset));
          }
#line 36566 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1536:
#line 10698 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_current_user((yyloc));
          }
#line 36574 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1537:
#line 10702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_date((yyloc), (yyvsp[-1].item));
          }
#line 36582 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1538:
#line 10706 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_dayofmonth((yyloc), (yyvsp[-1].item));
          }
#line 36590 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1539:
#line 10710 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_hour((yyloc), (yyvsp[-1].item));
          }
#line 36598 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1540:
#line 10714 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_insert((yyloc), (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36606 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1541:
#line 10718 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36614 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1542:
#line 10722 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item_list2));
          }
#line 36622 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1543:
#line 10727 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_json_value(YYTHD, (yylsp[-5]), (yyvsp[-5].item), (yyvsp[-3].text_literal), (yyvsp[-2].cast_type),
                                       (yyvsp[-1].json_on_error_or_empty).empty.type, (yyvsp[-1].json_on_error_or_empty).empty.default_string,
                                       (yyvsp[-1].json_on_error_or_empty).error.type, (yyvsp[-1].json_on_error_or_empty).error.default_string);
          }
#line 36632 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1544:
#line 10733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_left((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36640 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1545:
#line 10737 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minute((yyloc), (yyvsp[-1].item));
          }
#line 36648 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1546:
#line 10741 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_month((yyloc), (yyvsp[-1].item));
          }
#line 36656 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1547:
#line 10745 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_right((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36664 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1548:
#line 10749 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_second((yyloc), (yyvsp[-1].item));
          }
#line 36672 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1549:
#line 10753 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_time((yyloc), (yyvsp[-1].item));
          }
#line 36680 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1550:
#line 10757 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_datetime((yyloc), (yyvsp[-1].item));
          }
#line 36688 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1551:
#line 10761 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_add_time((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), 1, 0);
          }
#line 36696 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1552:
#line 10765 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 36705 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1553:
#line 10770 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_LEADING);
          }
#line 36714 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1554:
#line 10775 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_TRAILING);
          }
#line 36723 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1555:
#line 10780 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), Item_func_trim::TRIM_BOTH);
          }
#line 36731 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1556:
#line 10784 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_LEADING);
          }
#line 36739 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1557:
#line 10788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_TRAILING);
          }
#line 36747 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1558:
#line 10792 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_BOTH);
          }
#line 36755 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1559:
#line 10796 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 36764 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1560:
#line 10801 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_user((yyloc));
          }
#line 36772 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1561:
#line 10805 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_year((yyloc), (yyvsp[-1].item));
          }
#line 36780 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1562:
#line 10824 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 0);
          }
#line 36788 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1563:
#line 10828 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 36796 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1564:
#line 10832 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_local((yyloc));
          }
#line 36804 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1565:
#line 10836 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36812 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1566:
#line 10841 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 36820 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1567:
#line 10846 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 36828 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1568:
#line 10850 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_extract((yyloc),  (yyvsp[-3].interval), (yyvsp[-1].item));
          }
#line 36836 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1569:
#line 10854 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_format((yyloc), (yyvsp[-3].date_time_type), (yyvsp[-1].item));
          }
#line 36844 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1570:
#line 10858 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_now((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36853 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1571:
#line 10863 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_locate((yyloc), (yyvsp[-1].item),(yyvsp[-3].item));
          }
#line 36861 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1572:
#line 10867 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 1);
          }
#line 36869 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1573:
#line 10871 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 36877 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1574:
#line 10875 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36885 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1575:
#line 10879 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36893 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1576:
#line 10883 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36901 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1577:
#line 10887 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36909 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1578:
#line 10891 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_sysdate((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36918 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1579:
#line 10896 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
          }
#line 36926 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1580:
#line 10900 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_timestamp_diff((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[-5].interval_time_st));
          }
#line 36934 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1581:
#line 10904 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_utc((yyloc));
          }
#line 36942 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1582:
#line 10908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36950 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1583:
#line 10912 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36958 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1584:
#line 10922 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type)= {ITEM_CAST_CHAR, nullptr, "512", nullptr};
          }
#line 36966 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1585:
#line 10926 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type)= (yyvsp[0].cast_type);
          }
#line 36974 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1586:
#line 10937 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_ascii((yyloc), (yyvsp[-1].item));
          }
#line 36982 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1587:
#line 10941 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_charset((yyloc), (yyvsp[-1].item));
          }
#line 36990 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1588:
#line 10945 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_coalesce((yyloc), (yyvsp[-1].item_list2));
          }
#line 36998 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1589:
#line 10949 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_collation((yyloc), (yyvsp[-1].item));
          }
#line 37006 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1590:
#line 10953 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_database((yyloc));
          }
#line 37014 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1591:
#line 10957 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_if((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37022 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1592:
#line 10961 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37030 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1593:
#line 10965 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37038 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1594:
#line 10969 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_microsecond((yyloc), (yyvsp[-1].item));
          }
#line 37046 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1595:
#line 10973 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37054 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1596:
#line 10977 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_quarter((yyloc), (yyvsp[-1].item));
          }
#line 37062 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1597:
#line 10981 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_repeat((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37070 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1598:
#line 10985 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_replace((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37078 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1599:
#line 10989 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_reverse((yyloc), (yyvsp[-1].item));
          }
#line 37086 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1600:
#line 10993 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_row_count((yyloc));
          }
#line 37094 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1601:
#line 10997 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_round((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),1);
          }
#line 37102 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1602:
#line 11001 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-1].item), NULL);
          }
#line 37110 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1603:
#line 11005 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37118 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1604:
#line 11009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-1].item), 0, 0, 0);
          }
#line 37126 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1605:
#line 11013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0);
          }
#line 37134 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1606:
#line 11017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0, true);
          }
#line 37142 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1607:
#line 11021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num), (yyvsp[-1].ulong_num));
          }
#line 37150 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1609:
#line 11029 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_geometrycollection,
                        Geometry::wkb_point);
          }
#line 37160 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1610:
#line 11035 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_linestring,
                        Geometry::wkb_point);
          }
#line 37170 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1611:
#line 11041 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multilinestring,
                        Geometry::wkb_linestring);
          }
#line 37180 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1612:
#line 11047 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipoint,
                        Geometry::wkb_point);
          }
#line 37190 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1613:
#line 11053 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipolygon,
                        Geometry::wkb_polygon);
          }
#line 37200 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1614:
#line 11059 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_point((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37208 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1615:
#line 11063 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_polygon,
                        Geometry::wkb_linestring);
          }
#line 37218 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1616:
#line 11081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_ident_sys((yylsp[-3]), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 37226 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1617:
#line 11085 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_2d((yyloc), (yyvsp[-5].lexer.lex_str), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 37234 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1618:
#line 11092 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 37240 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1619:
#line 11094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= FT_BOOL;
            DBUG_EXECUTE_IF("simulate_bug18831513",
                            {
                              THD *thd= YYTHD;
                              if (thd->sp_runtime_ctx)
                                YYTHD->syntax_error();
                            });
          }
#line 37254 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1620:
#line 11106 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 37260 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1621:
#line 11107 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 37266 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1622:
#line 11111 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;         }
#line 37272 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1623:
#line 11112 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_EXPAND; }
#line 37278 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1624:
#line 11116 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 37284 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1625:
#line 11117 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 37290 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1626:
#line 11122 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 37300 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1627:
#line 11128 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 37310 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1628:
#line 11137 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_udf_expr((yyloc), (yyvsp[-1].item), (yyvsp[0].lexer.lex_str), (yylsp[-1]).cpp);
          }
#line 37318 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1631:
#line 11149 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 37326 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1632:
#line 11153 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 37334 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1633:
#line 11157 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_and((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37342 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1634:
#line 11161 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_or((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37350 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1635:
#line 11165 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_array> array{::new (YYMEM_ROOT)
                                                          Json_array};
            if (array == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_array((yyloc), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper),
                                             std::move(array));
          }
#line 37364 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1636:
#line 11175 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_object> object{::new (YYMEM_ROOT)
                                                            Json_object};
            if (object == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_object(
                (yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper), std::move(object));
          }
#line 37378 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1637:
#line 11185 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_collect((yyloc), (yyvsp[-2].item), (yyvsp[0].window), false);
          }
#line 37386 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1638:
#line 11189 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_collect((yyloc), (yyvsp[-2].item), (yyvsp[0].window), true );
          }
#line 37394 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1639:
#line 11193 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37402 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1640:
#line 11197 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_count_sym((yyloc), (yyvsp[0].window));
          }
#line 37410 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1641:
#line 11201 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_count((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37418 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1642:
#line 11205 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new Item_sum_count((yyloc), (yyvsp[-2].item_list2), (yyvsp[0].window));
          }
#line 37426 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1643:
#line 11209 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37434 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1644:
#line 11218 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37442 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1645:
#line 11222 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37450 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1646:
#line 11226 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37458 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1647:
#line 11230 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 37466 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1648:
#line 11234 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 37474 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1649:
#line 11238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 37482 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1650:
#line 11242 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 37490 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1651:
#line 11246 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 37498 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1652:
#line 11250 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 37506 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1653:
#line 11257 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_group_concat((yyloc), (yyvsp[-5].num), (yyvsp[-4].item_list2), (yyvsp[-3].order_list), (yyvsp[-2].string), (yyvsp[0].window));
          }
#line 37514 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1654:
#line 11264 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_row_number((yyloc), (yyvsp[0].window));
          }
#line 37522 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1655:
#line 11268 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), false, (yyvsp[0].window));
          }
#line 37530 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1656:
#line 11272 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), true, (yyvsp[0].window));
          }
#line 37538 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1657:
#line 11276 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_cume_dist((yyloc), (yyvsp[0].window));
          }
#line 37546 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1658:
#line 11280 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_percent_rank((yyloc), (yyvsp[0].window));
          }
#line 37554 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1659:
#line 11284 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=NEW_PTN Item_ntile((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37562 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1660:
#line 11288 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), true, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37577 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1661:
#line 11299 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), false, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37592 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1662:
#line 11310 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), true, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37600 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1663:
#line 11314 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), false, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37608 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1664:
#line 11318 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL ||
                args->push_back((yyvsp[-6].item)) ||
                args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_nth_value((yyloc), args, (yyvsp[-2].from_first_last) == NFL_FROM_LAST, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37621 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1665:
#line 11330 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= NULL;
            (yyval.lead_lag_info).default_value= NULL;
          }
#line 37630 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1666:
#line 11335 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= (yyvsp[-1].item);
            (yyval.lead_lag_info).default_value= (yyvsp[0].item);
          }
#line 37639 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1667:
#line 11346 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 37645 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1669:
#line 11351 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].param_marker); }
#line 37651 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1670:
#line 11352 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_int_splocal((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str))); }
#line 37657 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1671:
#line 11353 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_user_variable((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 37663 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1672:
#line 11358 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NULL;
          }
#line 37671 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1673:
#line 11362 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 37679 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1674:
#line 11369 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_NONE;
          }
#line 37687 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1675:
#line 11373 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_RESPECT_NULLS;
          }
#line 37695 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1676:
#line 11377 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_IGNORE_NULLS;
          }
#line 37703 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1677:
#line 11385 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_NONE;
          }
#line 37711 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1678:
#line 11389 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_FIRST;
          }
#line 37719 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1679:
#line 11393 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_LAST;
          }
#line 37727 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1680:
#line 11400 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NULL;
          }
#line 37735 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1681:
#line 11404 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 37743 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1682:
#line 11411 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 37751 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1683:
#line 11418 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NEW_PTN PT_window((yyvsp[0].item_string));
          }
#line 37759 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1684:
#line 11422 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 37767 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1685:
#line 11429 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYTHD->charset());
          }
#line 37775 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1686:
#line 11436 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[-1].window);
          }
#line 37783 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1687:
#line 11446 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto frame= (yyvsp[0].window_frame);
             if (!frame) // build an equivalent frame spec
             {
               auto start_bound= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
               auto end_bound= NEW_PTN PT_border((yyvsp[-1].order_list) ? WBT_CURRENT_ROW :
                 WBT_UNBOUNDED_FOLLOWING);
               auto bounds= NEW_PTN PT_borders(start_bound, end_bound);
               frame= NEW_PTN PT_frame(WFU_RANGE, bounds, nullptr);
               frame->m_originally_absent= true;
             }
             (yyval.window)= NEW_PTN PT_window((yyvsp[-2].order_list), (yyvsp[-1].order_list), frame, (yyvsp[-3].item_string));
           }
#line 37801 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1688:
#line 11463 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NULL;
          }
#line 37809 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1689:
#line 11467 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= (yyvsp[0].item_string);
          }
#line 37817 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1690:
#line 11474 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 37825 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1691:
#line 11478 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 37833 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1692:
#line 11485 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 37841 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1693:
#line 11489 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 37849 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1694:
#line 11496 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NULL;
          }
#line 37857 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1695:
#line 11502 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NEW_PTN PT_frame((yyvsp[-2].frame_units), (yyvsp[-1].frame_extent), (yyvsp[0].frame_exclusion));
          }
#line 37865 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1696:
#line 11509 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto end_bound= NEW_PTN PT_border(WBT_CURRENT_ROW);
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[0].bound), end_bound);
          }
#line 37874 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1697:
#line 11514 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= (yyvsp[0].frame_extent);
          }
#line 37882 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1698:
#line 11521 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
          }
#line 37890 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1699:
#line 11525 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].item_num));
          }
#line 37898 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1700:
#line 11529 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].param_marker));
          }
#line 37906 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1701:
#line 11533 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 37914 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1702:
#line 11537 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_CURRENT_ROW);
          }
#line 37922 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1703:
#line 11544 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[-2].bound), (yyvsp[0].bound));
          }
#line 37930 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1704:
#line 11551 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= (yyvsp[0].bound);
          }
#line 37938 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1705:
#line 11555 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_FOLLOWING);
          }
#line 37946 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1706:
#line 11559 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].item_num));
          }
#line 37954 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1707:
#line 11563 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].param_marker));
          }
#line 37962 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1708:
#line 11567 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 37970 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1709:
#line 11574 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NULL;
          }
#line 37978 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1710:
#line 11578 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_CURRENT_ROW);
          }
#line 37986 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1711:
#line 11582 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_GROUP);
          }
#line 37994 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1712:
#line 11586 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_TIES);
          }
#line 38002 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1713:
#line 11590 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_NO_OTHERS);
          }
#line 38009 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1714:
#line 11595 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_ROWS; }
#line 38015 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1715:
#line 11596 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_RANGE; }
#line 38021 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1716:
#line 11597 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_GROUPS; }
#line 38027 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1717:
#line 11602 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_grouping((yyloc), (yyvsp[-1].item_list2));
          }
#line 38035 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1718:
#line 11608 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 38041 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1719:
#line 11613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_USER_SET_EXPR));
            (yyval.item)= NEW_PTN PTI_variable_aux_set_var((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 38052 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1720:
#line 11620 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_user_variable((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 38060 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1721:
#line 11624 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_3d((yyloc), (yyvsp[-2].var_type), (yyvsp[-1].lexer.lex_str), (yylsp[-1]), (yyvsp[0].lexer.lex_str));
          }
#line 38068 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1722:
#line 11630 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 38074 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1723:
#line 11631 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 38080 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1724:
#line 11636 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 38090 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1725:
#line 11641 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string) = (yyvsp[0].string); }
#line 38096 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1726:
#line 11645 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= NULL; }
#line 38102 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1727:
#line 11646 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= (yyvsp[0].order_list); }
#line 38108 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1728:
#line 11651 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 38117 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1729:
#line 11656 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_gorder_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 38128 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1730:
#line 11666 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_in_sum_expr((yylsp[-1]), (yyvsp[0].item));
          }
#line 38136 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1731:
#line 11673 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= &my_charset_bin;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
          }
#line 38147 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1732:
#line 11680 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).length= (yyvsp[-1].c_str);
            (yyval.cast_type).dec= NULL;
            if ((yyvsp[0].charset_with_opt_binary).force_binary)
            {
              // Bugfix: before this patch we ignored [undocumented]
              // collation modifier in the CAST(expr, CHAR(...) BINARY) syntax.
              // To restore old behavior just remove this "if ($3...)" branch.

              (yyval.cast_type).charset= get_bin_collation((yyvsp[0].charset_with_opt_binary).charset ? (yyvsp[0].charset_with_opt_binary).charset :
                  YYTHD->variables.collation_connection);
              if ((yyval.cast_type).charset == NULL)
                MYSQL_YYABORT;
            }
            else
              (yyval.cast_type).charset= (yyvsp[0].charset_with_opt_binary).charset;
          }
#line 38170 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1733:
#line 11699 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= national_charset_info;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
            warn_about_deprecated_national(YYTHD);
          }
#line 38182 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1734:
#line 11707 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38193 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1735:
#line 11714 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38204 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1736:
#line 11721 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38215 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1737:
#line 11728 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38226 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1738:
#line 11735 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATE;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38237 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1739:
#line 11742 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_YEAR;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38248 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1740:
#line 11749 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_TIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 38259 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1741:
#line 11756 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATETIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 38270 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1742:
#line 11763 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_DECIMAL;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= (yyvsp[0].precision).length;
            (yyval.cast_type).dec= (yyvsp[0].precision).dec;
          }
#line 38281 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1743:
#line 11770 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_JSON;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38292 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1744:
#line 11777 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ((yyvsp[0].numeric_type) == Numeric_type::DOUBLE) ?
              ITEM_CAST_DOUBLE : ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38304 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1745:
#line 11785 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = (yyvsp[0].precision).length;
            (yyval.cast_type).dec = nullptr;
          }
#line 38315 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1746:
#line 11792 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_POINT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38326 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1747:
#line 11799 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_LINESTRING;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38337 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1748:
#line 11806 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_POLYGON;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38348 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1749:
#line 11813 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_MULTIPOINT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38359 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1750:
#line 11820 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_MULTILINESTRING;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38370 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1751:
#line 11827 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_MULTIPOLYGON;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38381 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1752:
#line 11834 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_GEOMETRYCOLLECTION;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38392 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1753:
#line 11843 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 38398 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1755:
#line 11849 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 38408 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1756:
#line 11855 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 38418 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1757:
#line 11863 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 38424 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1758:
#line 11864 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 38430 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1759:
#line 11869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 38440 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1760:
#line 11875 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 38450 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1761:
#line 11883 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 38456 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1762:
#line 11884 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 38462 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1763:
#line 11888 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 38468 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1764:
#line 11889 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 38474 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1765:
#line 11894 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (YYMEM_ROOT) mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-2].item));
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 38486 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1766:
#line 11902 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].item_list)->push_back((yyvsp[-2].item));
            (yyvsp[-4].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 38496 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1767:
#line 11910 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 38502 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1768:
#line 11911 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 38508 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1769:
#line 11913 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The ODBC escape syntax for Outer Join.

              All productions from table_factor and joined_table can be escaped,
              not only the '{LEFT | RIGHT} [OUTER] JOIN' syntax.
            */
            (yyval.table_reference) = (yyvsp[-1].table_reference);
          }
#line 38522 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1770:
#line 11925 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 38528 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1771:
#line 11926 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 38534 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1772:
#line 12008 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 38542 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1773:
#line 12013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 38550 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1774:
#line 12017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 38558 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1775:
#line 12021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 38566 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1776:
#line 12026 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto this_cross_join= NEW_PTN PT_cross_join((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), NULL);

            if ((yyvsp[0].table_reference) == NULL)
              MYSQL_YYABORT; // OOM

            (yyval.join_table)= (yyvsp[0].table_reference)->add_cross_join(this_cross_join);
          }
#line 38579 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1777:
#line 12035 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), (yyvsp[0].table_reference));
          }
#line 38587 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1778:
#line 12041 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_INNER; }
#line 38593 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1779:
#line 12042 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_RIGHT; }
#line 38599 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1780:
#line 12043 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_LEFT; }
#line 38605 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1781:
#line 12047 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 38611 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1782:
#line 12048 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 38617 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1783:
#line 12049 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 38623 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1784:
#line 12050 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_STRAIGHT_INNER; }
#line 38629 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1785:
#line 12053 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_LEFT; }
#line 38635 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1786:
#line 12054 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_RIGHT; }
#line 38641 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1791:
#line 12072 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 38647 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1793:
#line 12078 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= (yyvsp[-1].string_list);
          }
#line 38655 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1796:
#line 12108 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].derived_table); }
#line 38661 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1797:
#line 12110 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_factor_joined_table((yyvsp[0].join_table)); }
#line 38667 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1798:
#line 12112 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_reference_list_parens((yyvsp[0].table_reference_list)); }
#line 38673 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1799:
#line 12113 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].table_reference); }
#line 38679 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1800:
#line 12117 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[-1].table_reference_list); }
#line 38685 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1801:
#line 12119 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-3].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[-1].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 38695 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1802:
#line 12127 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 38701 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1803:
#line 12128 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 38707 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1804:
#line 12133 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference)= NEW_PTN PT_table_factor_table_ident((yyvsp[-3].table), (yyvsp[-2].string_list), (yyvsp[-1].lex_cstr), (yyvsp[0].key_usage_list));
          }
#line 38715 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1805:
#line 12139 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 38721 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1806:
#line 12140 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 38727 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1807:
#line 12145 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The alias is actually not optional at all, but being MySQL we
              are friendly and give an informative error message instead of
              just 'syntax error'.
            */
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(false, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 38744 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1808:
#line 12158 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(true, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 38756 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1809:
#line 12170 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Alias isn't optional, follow derived's behavior
            if ((yyvsp[0].lex_cstr) == NULL_CSTR)
            {
              my_message(ER_TF_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_TF_MUST_HAVE_ALIAS), MYF(0));
              MYSQL_YYABORT;
            }

            (yyval.table_reference)= NEW_PTN PT_table_factor_function((yyvsp[-5].item), (yyvsp[-3].text_literal), (yyvsp[-2].jtc_list), to_lex_string((yyvsp[0].lex_cstr)));
          }
#line 38772 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1810:
#line 12182 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Alias isn't optional, follow derived's behavior
            if ((yyvsp[0].lex_cstr) == NULL_CSTR)
            {
              my_message(ER_TF_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_TF_MUST_HAVE_ALIAS), MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.table_reference)= NEW_PTN PT_table_sequence_function((yyvsp[-2].item), (yyvsp[0].lex_cstr));
          }
#line 38787 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1811:
#line 12196 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-1].jtc_list);
          }
#line 38795 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1812:
#line 12203 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= NEW_PTN Mem_root_array<PT_json_table_column *>(YYMEM_ROOT);
            if ((yyval.jtc_list) == NULL || (yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 38805 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1813:
#line 12209 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-2].jtc_list);
            if ((yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 38815 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1814:
#line 12218 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_for_ordinality((yyvsp[-2].lexer.lex_str));
          }
#line 38823 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1815:
#line 12223 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto column = make_unique_destroy_only<Json_table_column>(
                YYMEM_ROOT, (yyvsp[-3].jt_column_type), (yyvsp[-1].text_literal), (yyvsp[0].json_on_error_or_empty).error.type, (yyvsp[0].json_on_error_or_empty).error.default_string,
                (yyvsp[0].json_on_error_or_empty).empty.type, (yyvsp[0].json_on_error_or_empty).empty.default_string);
            if (column == nullptr) MYSQL_YYABORT;  // OOM
            (yyval.jt_column) = NEW_PTN PT_json_table_column_with_path(std::move(column), (yyvsp[-6].lexer.lex_str),
                                                        (yyvsp[-5].type), (yyvsp[-4].lexer.charset));
          }
#line 38836 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1816:
#line 12232 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_with_nested_path((yyvsp[-1].text_literal), (yyvsp[0].jtc_list));
          }
#line 38844 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1817:
#line 12238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_PATH;
          }
#line 38852 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1818:
#line 12242 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_EXISTS;
          }
#line 38860 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1819:
#line 12252 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = {Json_on_response_type::IMPLICIT, nullptr};
            (yyval.json_on_error_or_empty).error = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 38869 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1820:
#line 12257 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = (yyvsp[0].json_on_response);
            (yyval.json_on_error_or_empty).error = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 38878 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1821:
#line 12262 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).error = (yyvsp[0].json_on_response);
            (yyval.json_on_error_or_empty).empty = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 38887 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1822:
#line 12267 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = (yyvsp[-1].json_on_response);
            (yyval.json_on_error_or_empty).error = (yyvsp[0].json_on_response);
          }
#line 38896 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1823:
#line 12275 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_error_or_empty) = (yyvsp[0].json_on_error_or_empty); }
#line 38902 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1824:
#line 12277 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(
              YYTHD, Sql_condition::SL_WARNING, ER_WARN_DEPRECATED_SYNTAX,
              ER_THD(YYTHD, ER_WARN_DEPRECATED_JSON_TABLE_ON_ERROR_ON_EMPTY));
            (yyval.json_on_error_or_empty).error = (yyvsp[-1].json_on_response);
            (yyval.json_on_error_or_empty).empty = (yyvsp[0].json_on_response);
          }
#line 38914 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1825:
#line 12287 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_response)= (yyvsp[-2].json_on_response); }
#line 38920 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1826:
#line 12290 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_response)= (yyvsp[-2].json_on_response); }
#line 38926 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1827:
#line 12294 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::ERROR, nullptr};
          }
#line 38934 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1828:
#line 12298 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::NULL_VALUE, nullptr};
          }
#line 38942 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1829:
#line 12302 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::DEFAULT, (yyvsp[0].item)};
          }
#line 38950 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1830:
#line 12309 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          }
#line 38958 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1831:
#line 12312 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 38964 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1832:
#line 12313 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 38970 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1833:
#line 12314 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 38976 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1834:
#line 12318 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 38982 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1835:
#line 12319 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 38988 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1836:
#line 12325 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), (yyvsp[-5].index_hint), (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 38997 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1837:
#line 12331 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE, (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 39006 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1839:
#line 12340 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].key_usage_list)->concat((yyvsp[-1].key_usage_list));
            (yyval.key_usage_list)= (yyvsp[0].key_usage_list);
          }
#line 39015 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1840:
#line 12347 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 39021 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1843:
#line 12357 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            Index_hint *hint= NEW_PTN Index_hint(NULL, 0);
            if ((yyval.key_usage_list) == NULL || hint == NULL || (yyval.key_usage_list)->push_front(hint))
              MYSQL_YYABORT;
          }
#line 39032 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1845:
#line 12368 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 39042 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1846:
#line 12374 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint(STRING_WITH_LEN("PRIMARY"));
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 39052 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1847:
#line 12383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            if ((yyval.key_usage_list) == NULL || (yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 39062 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1848:
#line 12389 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 39071 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1850:
#line 12401 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if ((yyval.string_list) == NULL || s == NULL || (yyval.string_list)->push_back(s))
              MYSQL_YYABORT;
          }
#line 39084 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1851:
#line 12410 "sql_yacc.yy" /* yacc.c:1646  */
    {
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if (s == NULL || (yyvsp[-2].string_list)->push_back(s))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 39097 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1852:
#line 12421 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39103 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1853:
#line 12422 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 39109 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1854:
#line 12423 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 39115 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1855:
#line 12424 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 39121 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1856:
#line 12425 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 39127 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1857:
#line 12426 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 39133 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1858:
#line 12427 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 39139 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1859:
#line 12428 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 39145 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1860:
#line 12429 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 39151 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1861:
#line 12430 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 39157 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1862:
#line 12431 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 39163 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1863:
#line 12432 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 39169 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1864:
#line 12436 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 39175 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1865:
#line 12437 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 39181 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1866:
#line 12438 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 39187 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1867:
#line 12439 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 39193 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1868:
#line 12440 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 39199 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1869:
#line 12441 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 39205 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1870:
#line 12442 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 39211 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1871:
#line 12443 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 39217 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1872:
#line 12444 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 39223 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1873:
#line 12448 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
#line 39229 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1874:
#line 12449 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
#line 39235 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1875:
#line 12450 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 39241 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1876:
#line 12451 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 39247 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1879:
#line 12460 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = NULL_CSTR; }
#line 39253 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1880:
#line 12461 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 39259 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1883:
#line 12470 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = nullptr; }
#line 39265 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1885:
#line 12475 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_where((yylsp[0]), (yyvsp[0].item)); }
#line 39271 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1886:
#line 12479 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 39277 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1887:
#line 12481 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new PTI_having((yyloc), (yyvsp[0].item));
          }
#line 39285 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1888:
#line 12488 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), false);
          }
#line 39293 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1889:
#line 12492 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), true);
          }
#line 39301 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1890:
#line 12499 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;
          }
#line 39310 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1891:
#line 12504 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_list)= NEW_PTN PT_with_list(YYTHD->mem_root);
            if ((yyval.with_list) == NULL || (yyval.with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;    /* purecov: inspected */
          }
#line 39320 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1892:
#line 12513 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING subq_text;
            subq_text.length= (yylsp[0]).cpp.length();
            subq_text.str= YYTHD->strmake((yylsp[0]).cpp.start, subq_text.length);
            if (subq_text.str == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
            uint subq_text_offset= (yylsp[0]).cpp.start - YYLIP->get_cpp_buf();
            (yyval.common_table_expr)= NEW_PTN PT_common_table_expr((yyvsp[-3].lexer.lex_str), subq_text, subq_text_offset,
                                             (yyvsp[0].subquery), &(yyvsp[-2].simple_ident_list), YYTHD->mem_root);
            if ((yyval.common_table_expr) == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
          }
#line 39337 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1893:
#line 12529 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Because () isn't accepted by the rule of
              simple_ident_list, we can use an empty array to
              designates that the parenthesised list was omitted.
            */
            (yyval.simple_ident_list).init(YYTHD->mem_root);
          }
#line 39350 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1894:
#line 12538 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-1].simple_ident_list);
          }
#line 39358 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1895:
#line 12545 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list).init(YYTHD->mem_root);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; /* purecov: inspected */
          }
#line 39368 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1896:
#line 12551 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-2].simple_ident_list);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;  /* purecov: inspected */
          }
#line 39378 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1897:
#line 12560 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NULL;
          }
#line 39386 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1898:
#line 12564 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= (yyvsp[0].windows);
          }
#line 39394 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1899:
#line 12571 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NEW_PTN PT_window_list();
            if ((yyval.windows) == NULL || (yyval.windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
          }
#line 39404 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1900:
#line 12577 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
            (yyval.windows)= (yyvsp[-2].windows);
          }
#line 39414 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1901:
#line 12586 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
            if ((yyval.window) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.window)->set_name((yyvsp[-2].item_string));
          }
#line 39425 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1902:
#line 12599 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.group)= NULL; }
#line 39431 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1903:
#line 12601 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.group)= NEW_PTN PT_group((yyvsp[-1].order_list), (yyvsp[0].olap_type));
          }
#line 39439 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1904:
#line 12608 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 39448 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1905:
#line 12613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 39459 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1906:
#line 12623 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= UNSPECIFIED_OLAP_TYPE; }
#line 39465 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1907:
#line 12624 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= ROLLUP_TYPE; }
#line 39471 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1908:
#line 12640 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[-2].order_list);
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 39480 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1909:
#line 12645 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 39491 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1910:
#line 12655 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 39499 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1911:
#line 12661 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order)= NULL; }
#line 39505 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1913:
#line 12667 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order)= NEW_PTN PT_order((yyvsp[0].order_list));
          }
#line 39513 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1914:
#line 12674 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 39522 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1915:
#line 12679 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 39533 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1916:
#line 12688 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_NOT_RELEVANT; }
#line 39539 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1918:
#line 12693 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_ASC; }
#line 39545 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1919:
#line 12694 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_DESC; }
#line 39551 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1920:
#line 12698 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.limit_clause)= NULL; }
#line 39557 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1922:
#line 12704 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_clause)= NEW_PTN PT_limit_clause((yyvsp[0].limit_options));
          }
#line 39565 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1923:
#line 12711 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= NULL;
            (yyval.limit_options).is_offset_first= false;
          }
#line 39575 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1924:
#line 12717 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= (yyvsp[-2].item);
            (yyval.limit_options).is_offset_first= true;
          }
#line 39585 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1925:
#line 12723 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[-2].item);
            (yyval.limit_options).opt_offset= (yyvsp[0].item);
            (yyval.limit_options).is_offset_first= false;
          }
#line 39595 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1926:
#line 12732 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 39603 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1927:
#line 12736 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_param_marker((yyloc), (yyvsp[0].param_marker));
          }
#line 39611 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1928:
#line 12740 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 39619 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1929:
#line 12744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 39627 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1930:
#line 12748 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 39635 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1931:
#line 12754 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 39641 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1932:
#line 12755 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 39647 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1933:
#line 12759 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39653 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1934:
#line 12760 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 39659 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1935:
#line 12761 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39665 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1936:
#line 12762 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39671 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1937:
#line 12763 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39677 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1938:
#line 12764 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39683 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1939:
#line 12768 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39689 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1940:
#line 12769 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 39695 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1941:
#line 12770 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39701 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1942:
#line 12771 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39707 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1943:
#line 12772 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 39713 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1944:
#line 12776 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39719 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1945:
#line 12777 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39725 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1946:
#line 12778 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39731 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1947:
#line 12779 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39737 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1948:
#line 12780 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39743 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1949:
#line 12784 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39749 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1950:
#line 12785 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (ulonglong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 39755 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1951:
#line 12786 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39761 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1952:
#line 12787 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39767 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1953:
#line 12788 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 39773 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1954:
#line 12793 "sql_yacc.yy" /* yacc.c:1646  */
    { YYTHD->syntax_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 39779 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1957:
#line 12803 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= (yyvsp[-2].select_var_list);
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 39789 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1958:
#line 12809 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= NEW_PTN PT_select_var_list((yyloc));
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 39799 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1959:
#line 12818 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_var((yyvsp[0].lexer.lex_str));
          }
#line 39807 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1960:
#line 12822 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_sp_var((yyvsp[0].lexer.lex_str));
          }
#line 39815 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1961:
#line 12829 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= (yyvsp[0].into_destination);
          }
#line 39823 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1962:
#line 12838 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_outfile((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.charset), (yyvsp[-1].field_separators), (yyvsp[0].line_separators));
          }
#line 39831 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1963:
#line 12842 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_dumpfile((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 39839 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1964:
#line 12845 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.into_destination)= (yyvsp[0].select_var_list); }
#line 39845 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1965:
#line 12854 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_select_stmt(SQLCOM_DO,
                  NEW_PTN PT_query_expression(
                    NEW_PTN PT_query_specification({}, (yyvsp[0].item_list2))));
          }
#line 39855 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1966:
#line 12867 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($6) is ignored!
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[-4].is_not_empty);
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 39872 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1967:
#line 12883 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_index_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.lex_str).str, (yyvsp[-1].table),
                                           (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                           (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 39882 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1968:
#line 12892 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 39893 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1969:
#line 12902 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[-2].lexer.lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
               MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-3].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 39920 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1970:
#line 12925 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Unlike DROP PROCEDURE, "DROP FUNCTION ident" should work
              even if there is no current database. In this case it
              applies only to UDF.
              Hence we can't merge rules for "DROP FUNCTION ident.ident"
              and "DROP FUNCTION ident" into one "DROP FUNCTION sp_name"
              rule. sp_name assumes that database name should be always
              provided - either explicitly or implicitly.
            */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= NULL_STR;
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db().str && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-1].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring(db), (yyvsp[0].lexer.lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 39956 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1971:
#line 12960 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_resource_group(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].resource_group_flag_type));
          }
#line 39964 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1972:
#line 12967 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
          }
#line 39980 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1973:
#line 12982 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex=Lex;
             lex->sql_command= SQLCOM_DROP_USER;
             lex->drop_if_exists= (yyvsp[-1].num);
             lex->users_list= *(yyvsp[0].user_list);
          }
#line 39991 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1974:
#line 12992 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($5) is ignored!
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 40007 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1975:
#line 13007 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
#line 40017 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1976:
#line 13016 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_drop_trigger();
          }
#line 40029 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1977:
#line 13027 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_drop_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 40051 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1978:
#line 13047 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_drop_undo_tablespace{
              DROP_UNDO_TABLESPACE, (yyvsp[-1].lexer.lex_str), {nullptr, 0},  pc};
            if (!cmd)
              MYSQL_YYABORT; // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 40074 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1979:
#line 13069 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_logfile_group{DROP_LOGFILE_GROUP,
                                                    (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 40097 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1980:
#line 13092 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_drop_server((yyvsp[0].lexer.lex_str), (yyvsp[-1].num));
          }
#line 40106 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1981:
#line 13097 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_DROP_COMPRESSION_DICTIONARY;
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 40116 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1982:
#line 13106 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_srs((yyvsp[0].ulonglong_number), (yyvsp[-1].num));
          }
#line 40124 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1983:
#line 13113 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_role((yyvsp[-1].num), (yyvsp[0].user_list));
          }
#line 40132 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1984:
#line 13120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= NEW_PTN Mem_root_array<Table_ident *>(YYMEM_ROOT);
            if ((yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 40142 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1985:
#line 13126 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= (yyvsp[-2].table_list);
            if ((yyval.table_list) == NULL || (yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 40152 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1986:
#line 13135 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list).init(YYMEM_ROOT);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 40162 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1987:
#line 13141 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list)= (yyvsp[-2].table_ident_list);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 40172 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1988:
#line 13149 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 40178 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1989:
#line 13150 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 40184 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1990:
#line 13154 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 40190 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1991:
#line 13155 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 40196 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1992:
#line 13159 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 40202 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1994:
#line 13165 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 40212 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1995:
#line 13171 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 40222 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1998:
#line 13196 "sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                             DBUG_SET("+d,simulate_out_of_memory"););
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-4].table), (yyvsp[-3].string_list),
                                  (yyvsp[-2].column_row_value_list_pair).column_list, (yyvsp[-2].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                            DBUG_SET("-d,bug29614521_simulate_oom"););
          }
#line 40238 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1999:
#line 13217 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if (one_row == NULL || one_row->push_back(&(yyvsp[-2].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-9].lexer.optimizer_hints), (yyvsp[-8].lock_type), (yyvsp[-7].is_not_empty), (yyvsp[-5].table), (yyvsp[-4].string_list),
                                  (yyvsp[-2].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 40253 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2000:
#line 13235 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-7].lexer.optimizer_hints), (yyvsp[-6].lock_type), (yyvsp[-5].is_not_empty), (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[-1].insert_query_expression).column_list, NULL,
                                  (yyvsp[-1].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 40265 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2001:
#line 13251 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].column_row_value_list_pair).column_list, (yyvsp[0].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 40277 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2002:
#line 13265 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if (one_row == NULL || one_row->push_back(&(yyvsp[0].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].lock_type), false, (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[0].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 40292 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2003:
#line 13281 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].insert_query_expression).column_list, NULL,
                                  (yyvsp[0].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 40304 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2004:
#line 13291 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT; }
#line 40310 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2005:
#line 13292 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 40316 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2006:
#line 13294 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "INSERT DELAYED", "INSERT");
        }
#line 40329 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2007:
#line 13302 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE; }
#line 40335 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2008:
#line 13306 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 40341 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2009:
#line 13308 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "REPLACE DELAYED", "REPLACE");
        }
#line 40354 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2012:
#line 13325 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 40363 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2013:
#line 13330 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 40372 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2014:
#line 13335 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= (yyvsp[-2].item_list2);
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 40381 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2015:
#line 13343 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 40390 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2016:
#line 13348 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 40399 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2017:
#line 13353 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= (yyvsp[-2].item_list2);
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 40408 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2018:
#line 13361 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 40418 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2019:
#line 13367 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 40428 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2020:
#line 13376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 40436 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2021:
#line 13382 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_expression); }
#line 40442 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2022:
#line 13384 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary) = NEW_PTN PT_locking((yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list));
          }
#line 40450 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2023:
#line 13387 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 40456 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2026:
#line 13397 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 40465 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2027:
#line 13402 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if ((yyval.values_list) == NULL || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 40475 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2028:
#line 13412 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 40484 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2029:
#line 13417 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if ((yyval.values_list) == nullptr || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 40494 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2034:
#line 13435 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 40500 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2035:
#line 13439 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 40506 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2036:
#line 13444 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL)
              MYSQL_YYABORT;
          }
#line 40516 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2038:
#line 13454 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 40526 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2039:
#line 13460 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 40536 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2041:
#line 13470 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc));
          }
#line 40544 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2042:
#line 13477 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_update_values_reference).table_alias = NULL_CSTR;
            (yyval.insert_update_values_reference).column_list = NULL;
          }
#line 40553 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2043:
#line 13482 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_update_values_reference).table_alias = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            /* The column list object is short-lived, requiring duplication. */
            void *column_list_raw_mem= YYTHD->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
            if (!column_list_raw_mem)
              MYSQL_YYABORT; // OOM
            (yyval.insert_update_values_reference).column_list =
              static_cast<Create_col_name_list *>(column_list_raw_mem);
          }
#line 40567 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2044:
#line 13495 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).value_list= NULL;
            (yyval.column_value_list_pair).column_list= NULL;
          }
#line 40576 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2045:
#line 13500 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[0].column_value_list_pair);
          }
#line 40584 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2046:
#line 13518 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_update((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-5].table_reference_list), (yyvsp[-3].column_value_list_pair).column_list, (yyvsp[-3].column_value_list_pair).value_list,
                                  (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 40593 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2047:
#line 13525 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= NULL; }
#line 40599 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2048:
#line 13526 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= (yyvsp[0].with_clause); }
#line 40605 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2049:
#line 13531 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[-2].column_value_list_pair);
            if ((yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 40616 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2050:
#line 13538 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_value_list_pair).value_list= NEW_PTN PT_item_list;
            if ((yyval.column_value_list_pair).column_list == NULL || (yyval.column_value_list_pair).value_list == NULL ||
                (yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 40629 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2051:
#line 13550 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_pair).column= (yyvsp[-2].item);
            (yyval.column_value_pair).value= (yyvsp[0].item);
          }
#line 40638 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2052:
#line 13557 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 40644 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2053:
#line 13558 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 40650 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2054:
#line 13574 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].num), (yyvsp[-5].table), (yyvsp[-4].lex_cstr), (yyvsp[-3].string_list), (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 40658 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2055:
#line 13584 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-6].with_clause), (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 40666 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2056:
#line 13595 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-7].with_clause), (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 40674 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2059:
#line 13606 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 40680 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2060:
#line 13607 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].opt_delete_option) | (yyvsp[0].num); }
#line 40686 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2061:
#line 13611 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_QUICK; }
#line 40692 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2062:
#line 13612 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_LOW_PRIORITY; }
#line 40698 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2063:
#line 13613 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_IGNORE; }
#line 40704 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2064:
#line 13618 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_truncate_table_stmt((yyvsp[0].table));
          }
#line 40712 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2067:
#line 13629 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = 0; }
#line 40718 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2070:
#line 13635 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = (yyvsp[-2].ulong_num) | (yyvsp[0].ulong_num); }
#line 40724 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2071:
#line 13639 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_CPU; }
#line 40730 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2072:
#line 13640 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_MEMORY; }
#line 40736 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2073:
#line 13641 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_BLOCK_IO; }
#line 40742 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2074:
#line 13642 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_CONTEXT; }
#line 40748 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2075:
#line 13643 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_PAGE_FAULTS; }
#line 40754 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2076:
#line 13644 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_IPC; }
#line 40760 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2077:
#line 13645 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_SWAPS; }
#line 40766 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2078:
#line 13646 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_SOURCE; }
#line 40772 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2079:
#line 13647 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_ALL; }
#line 40778 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2080:
#line 13651 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_id) = 0; }
#line 40784 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2081:
#line 13653 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.query_id) = static_cast<my_thread_id>(my_strtoll10((yyvsp[0].lexer.lex_str).str, NULL, &error));
            if (error != 0)
              MYSQL_YYABORT;
          }
#line 40795 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2082:
#line 13665 "sql_yacc.yy" /* yacc.c:1646  */
    {
             (yyval.top_level_node) = NEW_PTN PT_show_databases((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
           }
#line 40803 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2083:
#line 13671 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_tables((yyloc), (yyvsp[-3].show_cmd_type), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40811 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2084:
#line 13678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_triggers((yyloc), (yyvsp[-3].is_not_empty), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40819 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2085:
#line 13685 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_events((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40827 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2086:
#line 13692 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_table_status((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40835 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2087:
#line 13699 "sql_yacc.yy" /* yacc.c:1646  */
    {
             (yyval.top_level_node) = NEW_PTN PT_show_open_tables((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40843 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2088:
#line 13706 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_plugins((yyloc));
          }
#line 40851 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2089:
#line 13713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_logs((yyloc), (yyvsp[-1].lexer.lex_str));
          }
#line 40859 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2090:
#line 13720 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_mutex((yyloc), (yyvsp[-1].lexer.lex_str));
          }
#line 40867 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2091:
#line 13727 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_status((yyloc), (yyvsp[-1].lexer.lex_str));
          }
#line 40875 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2092:
#line 13740 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            (yyval.top_level_node) = NEW_PTN PT_show_fields((yyloc), (yyvsp[-5].show_cmd_type), (yyvsp[-2].table), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40887 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2093:
#line 13751 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_binlogs((yyloc));
          }
#line 40895 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2094:
#line 13758 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_replication_deprecated_syntax_used();
            push_deprecated_warn(YYTHD, "SHOW SLAVE HOSTS", "SHOW REPLICAS");

            (yyval.top_level_node) = NEW_PTN PT_show_replicas((yyloc));
          }
#line 40906 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2095:
#line 13765 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_replicas((yyloc));
          }
#line 40914 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2096:
#line 13772 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_binlog_events((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].limit_clause));
          }
#line 40922 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2097:
#line 13780 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_relaylog_events((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].limit_clause), (yyvsp[0].lex_cstr));
          }
#line 40930 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2098:
#line 13793 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            (yyval.top_level_node) = NEW_PTN PT_show_keys((yyloc), (yyvsp[-5].is_not_empty), (yyvsp[-2].table), (yyvsp[0].item));
          }
#line 40942 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2099:
#line 13804 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engines((yyloc));
          }
#line 40950 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2100:
#line 13811 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_count_warnings((yyloc));
          }
#line 40958 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2101:
#line 13818 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_count_errors((yyloc));
          }
#line 40966 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2102:
#line 13825 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_warnings((yyloc), (yyvsp[0].limit_clause));
          }
#line 40974 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2103:
#line 13832 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_errors((yyloc), (yyvsp[0].limit_clause));
          }
#line 40982 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2104:
#line 13839 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER_THD(YYTHD, ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            (yyval.top_level_node) = NEW_PTN PT_show_profiles((yyloc));
          }
#line 40994 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2105:
#line 13850 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_profile((yyloc), (yyvsp[-2].ulong_num), (yyvsp[-1].query_id), (yyvsp[0].limit_clause));
          }
#line 41002 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2106:
#line 13857 "sql_yacc.yy" /* yacc.c:1646  */
    {
             (yyval.top_level_node) = NEW_PTN PT_show_status((yyloc), (yyvsp[-2].var_type), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41010 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2107:
#line 13864 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_processlist((yyloc), (yyvsp[-1].is_not_empty));
          }
#line 41018 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2108:
#line 13871 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_variables((yyloc), (yyvsp[-2].var_type), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41026 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2109:
#line 13878 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_charsets((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41034 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2110:
#line 13885 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_collations((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41042 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2111:
#line 13892 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_privileges((yyloc));
          }
#line 41050 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2112:
#line 13899 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), nullptr, nullptr, false);
          }
#line 41058 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2113:
#line 13903 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), (yyvsp[0].lex_user), nullptr, false);
          }
#line 41066 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2114:
#line 13907 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), (yyvsp[-2].lex_user), (yyvsp[0].user_list), false);
          }
#line 41074 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2115:
#line 13911 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), nullptr, nullptr, true);
          }
#line 41082 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2116:
#line 13915 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), (yyvsp[0].lex_user), nullptr, true);
          }
#line 41090 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2117:
#line 13919 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), (yyvsp[-2].lex_user), (yyvsp[0].user_list), true);
          }
#line 41098 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2118:
#line 13926 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_database((yyloc), (yyvsp[-1].is_not_empty), (yyvsp[0].lexer.lex_str));
          }
#line 41106 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2119:
#line 13933 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_table((yyloc), (yyvsp[0].table));
          }
#line 41114 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2120:
#line 13940 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_view((yyloc), (yyvsp[0].table));
          }
#line 41122 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2121:
#line 13947 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_master_status((yyloc));
          }
#line 41130 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2122:
#line 13954 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->is_replication_deprecated_syntax_used())
              push_deprecated_warn(YYTHD, "SHOW SLAVE STATUS", "SHOW REPLICA STATUS");
            (yyval.top_level_node) = NEW_PTN PT_show_replica_status((yyloc), (yyvsp[0].lex_cstr));
          }
#line 41140 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2123:
#line 13962 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_client_stats((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41148 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2124:
#line 13966 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_user_stats((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41156 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2125:
#line 13970 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_thread_stats((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41164 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2126:
#line 13974 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_table_stats((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41172 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2127:
#line 13978 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_index_stats((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41180 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2128:
#line 13985 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_procedure((yyloc), (yyvsp[0].spname));
          }
#line 41188 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2129:
#line 13992 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_function((yyloc), (yyvsp[0].spname));
          }
#line 41196 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2130:
#line 13999 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_trigger((yyloc), (yyvsp[0].spname));
          }
#line 41204 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2131:
#line 14006 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_status_proc((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41212 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2132:
#line 14013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_status_func((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41220 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2133:
#line 14020 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_procedure_code((yyloc), (yyvsp[0].spname));
          }
#line 41228 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2134:
#line 14027 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_function_code((yyloc), (yyvsp[0].spname));
          }
#line 41236 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2135:
#line 14034 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_event((yyloc), (yyvsp[0].spname));
          }
#line 41244 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2136:
#line 14041 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_user((yyloc), (yyvsp[0].lex_user));
          }
#line 41252 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2138:
#line 14048 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = {}; }
#line 41258 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2143:
#line 14062 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= 0; }
#line 41264 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2144:
#line 14063 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= (yyvsp[0].lexer.lex_str).str; }
#line 41270 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2145:
#line 14067 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 41276 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2146:
#line 14068 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 41282 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2147:
#line 14072 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 41288 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2148:
#line 14073 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 41294 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2149:
#line 14077 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::STANDARD; }
#line 41300 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2150:
#line 14078 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::FULL_SHOW; }
#line 41306 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2151:
#line 14079 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_SHOW; }
#line 41312 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2152:
#line 14080 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_FULL_SHOW; }
#line 41318 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2155:
#line 14089 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = {}; }
#line 41324 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2156:
#line 14090 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str); }
#line 41330 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2157:
#line 14094 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = 4; /* skip magic number */ }
#line 41336 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2158:
#line 14095 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 41342 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2159:
#line 14099 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = {}; }
#line 41348 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2160:
#line 14100 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { (yyvsp[0].lexer.lex_str), {} }; }
#line 41354 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2161:
#line 14101 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { {}, (yyvsp[0].item) }; }
#line 41360 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2162:
#line 14107 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_show_fields((yyloc), Show_cmd_type::STANDARD, (yyvsp[-1].table), (yyvsp[0].lexer.lex_str));
          }
#line 41368 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2163:
#line 14114 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain((yyvsp[-1].explain_format_type), (yyvsp[0].top_level_node));
          }
#line 41376 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2169:
#line 14126 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain_for_connection(static_cast<my_thread_id>((yyvsp[0].ulong_num)));
          }
#line 41384 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2172:
#line 14138 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.explain_format_type)= Explain_format_type::DEFAULT;
          }
#line 41392 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2173:
#line 14142 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "JSON"))
              (yyval.explain_format_type)= Explain_format_type::JSON;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TRADITIONAL"))
              (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TREE"))
              (yyval.explain_format_type)= Explain_format_type::TREE;
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 41410 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2174:
#line 14158 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].explain_format_type))
            {
              case Explain_format_type::DEFAULT:
              case Explain_format_type::TREE:
                (yyval.explain_format_type)= Explain_format_type::TREE_WITH_EXECUTE;
                break;
              case Explain_format_type::JSON:
                my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                         "FORMAT=JSON with EXPLAIN ANALYZE");
                MYSQL_YYABORT;
              default:
                my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                         "FORMAT=TRADITIONAL with EXPLAIN ANALYZE");
                MYSQL_YYABORT;
            }
          }
#line 41432 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2175:
#line 14176 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].explain_format_type) == Explain_format_type::DEFAULT)
              (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
            else
              (yyval.explain_format_type)= (yyvsp[0].explain_format_type);
          }
#line 41443 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2176:
#line 14185 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= LEX_STRING{ nullptr, 0 }; }
#line 41449 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2177:
#line 14187 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].string) != nullptr)
              (yyval.lexer.lex_str)= (yyvsp[0].string)->lex_string();
          }
#line 41458 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2179:
#line 14199 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 41469 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2180:
#line 14206 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41475 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2181:
#line 14211 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
            if (Select->add_tables(YYTHD, (yyvsp[0].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 41492 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2182:
#line 14223 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41498 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2184:
#line 14228 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41504 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2185:
#line 14230 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 41520 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2186:
#line 14242 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              YYTHD->syntax_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            }
          }
#line 41532 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2187:
#line 14250 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 41548 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2189:
#line 14266 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41554 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2190:
#line 14271 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ERROR_LOG; }
#line 41560 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2191:
#line 14273 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ENGINE_LOG; }
#line 41566 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2192:
#line 14275 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GENERAL_LOG; }
#line 41572 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2193:
#line 14277 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLOW_LOG; }
#line 41578 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2194:
#line 14279 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_BINARY_LOG; }
#line 41584 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2195:
#line 14281 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_RELAY_LOG;
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 41594 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2196:
#line 14287 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_HOSTS; }
#line 41600 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2197:
#line 14289 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GRANT; }
#line 41606 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2198:
#line 14291 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_LOG; }
#line 41612 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2199:
#line 14293 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_STATUS; }
#line 41618 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2200:
#line 14295 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_CLIENT_STATS; }
#line 41624 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2201:
#line 14297 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_STATS; }
#line 41630 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2202:
#line 14299 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_THREAD_STATS; }
#line 41636 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2203:
#line 14301 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_TABLE_STATS; }
#line 41642 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2204:
#line 14303 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_INDEX_STATS; }
#line 41648 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2205:
#line 14305 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_RESOURCES; }
#line 41654 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2206:
#line 14307 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_OPTIMIZER_COSTS; }
#line 41660 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2207:
#line 14309 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_FLUSH_PAGE_BITMAPS; }
#line 41666 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2208:
#line 14311 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= DUMP_MEMORY_PROFILE; }
#line 41672 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2209:
#line 14315 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= NULL; }
#line 41678 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2211:
#line 14321 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 41687 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2212:
#line 14326 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41693 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2213:
#line 14328 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET;
            lex->type|= REFRESH_PERSIST;
            lex->option_type= OPT_PERSIST;
          }
#line 41704 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2216:
#line 14343 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= false;
            lex->name= NULL_STR;
          }
#line 41714 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2217:
#line 14349 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 41724 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2218:
#line 14358 "sql_yacc.yy" /* yacc.c:1646  */
    {
              Lex->type|= REFRESH_SLAVE;
              Lex->set_replication_deprecated_syntax_used();
              push_deprecated_warn(YYTHD, "RESET SLAVE", "RESET REPLICA");
            }
#line 41734 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2219:
#line 14364 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 41743 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2220:
#line 14369 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_REPLICA; }
#line 41749 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2221:
#line 14371 "sql_yacc.yy" /* yacc.c:1646  */
    {
          if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
            MYSQL_YYABORT;  // OOM
          }
#line 41758 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2222:
#line 14376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_MASTER;
            /*
              Reset Master should acquire global read lock
              in order to avoid any parallel transaction commits
              while the reset operation is going on.

              *Only if* the thread is not already acquired the global
              read lock, server will acquire global read lock
              during the operation and release it at the
              end of the reset operation.
            */
            if (!(YYTHD)->global_read_lock.is_acquired())
              Lex->type|= REFRESH_TABLES | REFRESH_READ_LOCK;
          }
#line 41778 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2224:
#line 14393 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type |= REFRESH_RESET_PAGE_BITMAPS; }
#line 41784 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2225:
#line 14397 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= false; }
#line 41790 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2226:
#line 14398 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= true; }
#line 41796 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2227:
#line 14402 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41802 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2228:
#line 14404 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) == 0 || (yyvsp[0].ulonglong_number) > MAX_ALLOWED_FN_EXT_RESET_MASTER)
            {
              my_error(ER_RESET_MASTER_TO_VALUE_OUT_OF_RANGE, MYF(0),
                       (yyvsp[0].ulonglong_number), MAX_ALLOWED_FN_EXT_RESET_MASTER);
              MYSQL_YYABORT;
            }
            else
              Lex->next_binlog_file_nr = (yyvsp[0].ulonglong_number);
          }
#line 41817 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2229:
#line 14418 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
#line 41827 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2230:
#line 14424 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41833 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2232:
#line 14430 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->purge_value_list.clear();
            lex->purge_value_list.push_front(new Item_uint((yyvsp[0].ulonglong_number)));
            lex->type= PURGE_BITMAPS_TO_LSN;
          }
#line 41844 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2233:
#line 14440 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->to_log = (yyvsp[0].lexer.lex_str).str;
          }
#line 41852 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2234:
#line 14444 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex= Lex;
            lex->purge_value_list.clear();
            lex->purge_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
#line 41865 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2235:
#line 14458 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex=Lex;
            lex->kill_value_list.clear();
            lex->kill_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_KILL;
          }
#line 41878 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2236:
#line 14469 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 41884 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2237:
#line 14470 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 41890 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2238:
#line 14471 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= ONLY_KILL_QUERY; }
#line 41896 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2239:
#line 14478 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->query_block->db= (yyvsp[0].lexer.lex_str).str;
          }
#line 41906 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2240:
#line 14506 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_table((yyvsp[-16].filetype),  // data_or_xml
                                      (yyvsp[-15].lock_type),  // load_data_lock
                                      (yyvsp[-14].is_not_empty),  // opt_local
                                      (yyvsp[-12].lexer.lex_str),  // TEXT_STRING_filesystem
                                      (yyvsp[-11].on_duplicate),  // opt_duplicate
                                      (yyvsp[-8].table), // table_ident
                                      (yyvsp[-7].string_list), // opt_use_partition
                                      (yyvsp[-6].lexer.charset), // opt_load_data_charset
                                      (yyvsp[-5].string), // opt_xml_rows_identified_by
                                      (yyvsp[-4].field_separators), // opt_field_term
                                      (yyvsp[-3].line_separators), // opt_line_term
                                      (yyvsp[-2].ulong_num), // opt_ignore_lines
                                      (yyvsp[-1].item_list2), // opt_field_or_var_spec
                                      (yyvsp[0].load_set_list).set_var_list,// opt_load_data_set_spec
                                      (yyvsp[0].load_set_list).set_expr_list,
                                      (yyvsp[0].load_set_list).set_expr_str_list);
          }
#line 41929 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2241:
#line 14527 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_CSV; }
#line 41935 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2242:
#line 14528 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_XML; }
#line 41941 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2243:
#line 14532 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 41947 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2244:
#line 14533 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 41953 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2245:
#line 14537 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 41959 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2246:
#line 14538 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT; }
#line 41965 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2247:
#line 14539 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 41971 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2248:
#line 14543 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::ERROR; }
#line 41977 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2250:
#line 14548 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::REPLACE_DUP; }
#line 41983 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2251:
#line 14549 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::IGNORE_DUP; }
#line 41989 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2252:
#line 14553 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators).cleanup(); }
#line 41995 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2253:
#line 14554 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators)= (yyvsp[0].field_separators); }
#line 42001 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2254:
#line 14559 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators)= (yyvsp[-1].field_separators);
            (yyval.field_separators).merge_field_separators((yyvsp[0].field_separators));
          }
#line 42010 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2256:
#line 14568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).field_term= (yyvsp[0].string);
          }
#line 42019 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2257:
#line 14573 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
            (yyval.field_separators).opt_enclosed= 1;
          }
#line 42029 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2258:
#line 14579 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
          }
#line 42038 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2259:
#line 14584 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).escaped= (yyvsp[0].string);
          }
#line 42047 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2260:
#line 14591 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators).cleanup(); }
#line 42053 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2261:
#line 14592 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators)= (yyvsp[0].line_separators); }
#line 42059 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2262:
#line 14597 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators)= (yyvsp[-1].line_separators);
            (yyval.line_separators).merge_line_separators((yyvsp[0].line_separators));
          }
#line 42068 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2264:
#line 14606 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_term= (yyvsp[0].string);
          }
#line 42077 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2265:
#line 14611 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_start= (yyvsp[0].string);
          }
#line 42086 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2266:
#line 14618 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= nullptr; }
#line 42092 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2267:
#line 14619 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= (yyvsp[0].string); }
#line 42098 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2268:
#line 14623 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 42104 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2269:
#line 14624 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= atol((yyvsp[-1].lexer.lex_str).str); }
#line 42110 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2272:
#line 14633 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 42116 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2273:
#line 14634 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 42122 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2274:
#line 14635 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 42128 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2275:
#line 14640 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 42138 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2276:
#line 14646 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 42148 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2278:
#line 14656 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_user_var_as_out_param((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 42156 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2279:
#line 14662 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= {nullptr, nullptr, nullptr}; }
#line 42162 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2280:
#line 14663 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= (yyvsp[0].load_set_list); }
#line 42168 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2281:
#line 14668 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list)= (yyvsp[-2].load_set_list);
            if ((yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var) ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr) ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 42180 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2282:
#line 14676 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list).set_var_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_var_list == nullptr ||
                (yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_expr_list == nullptr ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_str_list= NEW_PTN List<String>;
            if ((yyval.load_set_list).set_expr_str_list == nullptr ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 42201 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2283:
#line 14696 "sql_yacc.yy" /* yacc.c:1646  */
    {
            size_t length= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;

            if ((yyvsp[0].item) == nullptr)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item)->item_name.copy((yylsp[-1]).cpp.start, length, YYTHD->charset());

            (yyval.load_set_element).set_var= (yyvsp[-2].item);
            (yyval.load_set_element).set_expr= (yyvsp[0].item);
            (yyval.load_set_element).set_expr_str= NEW_PTN String((yylsp[-1]).cpp.start,
                                            length,
                                            YYTHD->charset());
            if ((yyval.load_set_element).set_expr_str == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 42221 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2284:
#line 14717 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_text_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
          }
#line 42230 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2285:
#line 14722 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_nchar_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
            warn_about_deprecated_national(YYTHD);
          }
#line 42240 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2286:
#line 14728 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_underscore_charset((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 42249 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2287:
#line 14733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_concat((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].text_literal), (yyvsp[0].lexer.lex_str));
          }
#line 42258 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2288:
#line 14741 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                               YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 42269 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2289:
#line 14748 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 42280 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2290:
#line 14755 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_bin_string::make_bin_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 42291 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2291:
#line 14765 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *i= NEW_PTN Item_param((yyloc), YYMEM_ROOT,
                                        (uint) ((yylsp[0]).raw.start - YYLIP->get_buf()));
            if (i == NULL)
              MYSQL_YYABORT;
            auto *lex= Lex;
            /*
              If we are not re-parsing a CTE definition, this is a
              real parameter, so add it to param_list.
            */
            if (!lex->reparse_common_table_expr_at &&
                lex->param_list.push_back(i))
              MYSQL_YYABORT;
            (yyval.param_marker)= i;
          }
#line 42311 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2293:
#line 14784 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 42317 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2294:
#line 14786 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item_num) == NULL)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg();
          }
#line 42328 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2297:
#line 14801 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip= YYLIP;
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            lip->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= NEW_PTN Item_null((yyloc));
          }
#line 42344 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2298:
#line 14815 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].text_literal); }
#line 42350 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2299:
#line 14816 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 42356 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2301:
#line 14819 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_false((yyloc));
          }
#line 42364 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2302:
#line 14823 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_true((yyloc));
          }
#line 42372 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2303:
#line 14827 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_hex_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 42380 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2304:
#line 14831 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_bin_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 42388 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2305:
#line 14835 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_hex_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 42396 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2306:
#line 14839 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_bin_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 42404 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2310:
#line 14852 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_decimal((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYCSCL);
          }
#line 42412 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2311:
#line 14856 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_float((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 42420 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2312:
#line 14866 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_num) = NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 42426 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2313:
#line 14867 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_num) = NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 42432 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2314:
#line 14868 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_num) = NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length); }
#line 42438 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2315:
#line 14874 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATE, YYCSCL);
          }
#line 42446 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2316:
#line 14878 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_TIME, YYCSCL);
          }
#line 42454 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2317:
#line 14882 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATETIME, YYCSCL);
          }
#line 42462 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2318:
#line 14888 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty) = false; }
#line 42468 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2319:
#line 14889 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty) = true; }
#line 42474 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2322:
#line 14904 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_asterisk((yyloc), nullptr, (yyvsp[-2].lexer.lex_str).str);
          }
#line 42482 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2323:
#line 14908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            auto schema_name = YYCLIENT_NO_SCHEMA ? nullptr : (yyvsp[-4].lexer.lex_str).str;
            (yyval.item) = NEW_PTN Item_asterisk((yyloc), schema_name, (yyvsp[-2].lexer.lex_str).str);
          }
#line 42493 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2324:
#line 14918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 42501 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2325:
#line 14925 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[0].item), ORDER_NOT_RELEVANT);
          }
#line 42509 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2326:
#line 14932 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 42517 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2328:
#line 14940 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_nospvar_ident((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 42525 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2330:
#line 14948 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_2d((yyloc), (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 42533 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2331:
#line 14952 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 42543 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2332:
#line 14961 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 42553 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2333:
#line 14967 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto schema_name = YYCLIENT_NO_SCHEMA ? LEX_CSTRING{}
                                                  : to_lex_cstring((yyvsp[-2].lexer.lex_str).str);
            (yyval.table)= NEW_PTN Table_ident(schema_name, to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 42565 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2334:
#line 14978 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 42575 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2335:
#line 14984 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(YYTHD->get_protocol(),
                                    to_lex_cstring((yyvsp[-3].lexer.lex_str)),
                                    to_lex_cstring((yyvsp[-1].lexer.lex_str)), 0);
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 42587 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2336:
#line 14994 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 42593 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2337:
#line 14996 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              size_t wlen= cs->cset->well_formed_len(cs, (yyvsp[0].lexer.lex_str).str,
                                                     (yyvsp[0].lexer.lex_str).str+(yyvsp[0].lexer.lex_str).length,
                                                     (yyvsp[0].lexer.lex_str).length, &dummy_error);
              if (wlen < (yyvsp[0].lexer.lex_str).length)
              {
                ErrConvString err((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 42624 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2338:
#line 15026 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!strcont((yyvsp[0].lexer.lex_str).str, "\n"))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 42638 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2339:
#line 15039 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (strcont((yyvsp[0].lexer.lex_str).str, "."))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 42652 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2340:
#line 15052 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 42669 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2341:
#line 15068 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), thd->variables.collation_connection,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 42686 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2342:
#line 15084 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 42704 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2345:
#line 15106 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= to_lex_string(Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length));
          }
#line 42712 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2346:
#line 15113 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset(), true))
                MYSQL_YYABORT;
            }
          }
#line 42729 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2347:
#line 15128 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 42735 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2348:
#line 15130 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lexer.lex_str).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 42747 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2350:
#line 15142 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 42758 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2351:
#line 15151 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)=to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 42764 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2352:
#line 15153 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lex_cstr).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lex_cstr).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_cstr).length= (yyvsp[0].lexer.keyword).length;
          }
#line 42776 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2354:
#line 15165 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 42787 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2355:
#line 15174 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 42793 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2356:
#line 15175 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 42799 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2357:
#line 15176 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 42805 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2361:
#line 15187 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 42814 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2362:
#line 15192 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 42823 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2363:
#line 15200 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[0].lex_user);
          }
#line 42831 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2364:
#line 15204 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)=(LEX_USER*) YYTHD->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;
            /*
              empty LEX_USER means current_user and
              will be handled in the  get_current_user() function
              later
            */
            memset((yyval.lex_user), 0, sizeof(LEX_USER));
          }
#line 42846 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2365:
#line 15218 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 42855 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2366:
#line 15223 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 42864 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2367:
#line 15231 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
            if (check_and_convert_db_name(&(yyval.lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
          }
#line 42874 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2859:
#line 15825 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.set)= NEW_PTN PT_set((yylsp[-1]), (yyvsp[0].start_option_value_list));
          }
#line 42882 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2860:
#line 15834 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_no_type((yyvsp[-1].option_value_no_option_type), (yylsp[-1]), (yyvsp[0].option_value_list));
          }
#line 42890 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2861:
#line 15838 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_transaction((yyvsp[0].transaction_characteristics), (yylsp[0]));
          }
#line 42898 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2862:
#line 15842 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_type((yyvsp[-1].var_type), (yyvsp[0].start_option_value_list_following_option_type));
          }
#line 42906 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2863:
#line 15846 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.lex_str).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                false,
                                                                (yylsp[-1]));
          }
#line 42917 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2864:
#line 15853 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.keyword).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                true,
                                                                (yylsp[-1]));
          }
#line 42929 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2865:
#line 15861 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.lex_str).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    false,
                                                                    (yylsp[-1]));
          }
#line 42941 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2866:
#line 15869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.keyword).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    true,
                                                                    (yylsp[-1]));
          }
#line 42954 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2867:
#line 15881 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role((yyvsp[0].user_list));
          }
#line 42962 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2868:
#line 15885 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_NONE);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 42971 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2869:
#line 15890 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_DEFAULT);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 42980 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2870:
#line 15895 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), (yyvsp[-2].user_list),
                                                    role_enum::ROLE_NAME);
          }
#line 42989 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2871:
#line 15900 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_NONE);
          }
#line 42998 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2872:
#line 15905 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_ALL);
          }
#line 43007 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2873:
#line 15910 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_ALL, (yyvsp[0].user_list));
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 43016 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2874:
#line 15917 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= NULL; }
#line 43022 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2875:
#line 15918 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= (yyvsp[0].user_list); }
#line 43028 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2876:
#line 15923 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[0].lexer.lex_str)), nullptr);
          }
#line 43036 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2877:
#line 15927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].thread_id_list_type));
          }
#line 43044 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2878:
#line 15934 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= NEW_PTN Mem_root_array<ulonglong>(YYMEM_ROOT);
            if ((yyval.thread_id_list_type) == nullptr || (yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 43054 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2879:
#line 15940 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= (yyvsp[-2].thread_id_list_type);
            if ((yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 43064 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2880:
#line 15948 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.thread_id_list_type)= (yyvsp[0].thread_id_list_type); }
#line 43070 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2881:
#line 15954 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)=
              NEW_PTN PT_start_option_value_list_following_option_type_eq((yyvsp[-1].option_value_following_option_type),
                                                                          (yylsp[-1]),
                                                                          (yyvsp[0].option_value_list));
          }
#line 43081 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2882:
#line 15961 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)= NEW_PTN
              PT_start_option_value_list_following_option_type_transaction((yyvsp[0].transaction_characteristics),
                                                                           (yylsp[0]));
          }
#line 43091 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2883:
#line 15970 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= NULL; }
#line 43097 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2884:
#line 15971 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= (yyvsp[0].option_value_list); }
#line 43103 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2885:
#line 15977 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list_head((yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 43111 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2886:
#line 15981 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list((yyvsp[-2].option_value_list), (yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 43119 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2887:
#line 15989 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.node)= NEW_PTN PT_option_value_type((yyvsp[-1].var_type), (yyvsp[0].option_value_following_option_type));
          }
#line 43127 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2888:
#line 15992 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.node)= (yyvsp[0].option_value_no_option_type); }
#line 43133 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2889:
#line 15996 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 43139 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2890:
#line 15997 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 43145 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2891:
#line 15998 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST_ONLY; }
#line 43151 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2892:
#line 15999 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43157 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2893:
#line 16000 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43163 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2894:
#line 16004 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43169 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2895:
#line 16005 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 43175 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2896:
#line 16006 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43181 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2897:
#line 16007 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43187 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2898:
#line 16011 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 43193 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2899:
#line 16012 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 43199 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2900:
#line 16013 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43205 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2901:
#line 16014 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43211 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2902:
#line 16018 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 43217 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2903:
#line 16019 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 43223 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2904:
#line 16020 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.var_type)=OPT_PERSIST_ONLY; }
#line 43229 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2905:
#line 16021 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 43235 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2906:
#line 16022 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43241 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2907:
#line 16023 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 43247 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2908:
#line 16029 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_following_option_type)= NEW_PTN PT_option_value_following_option_type((yyloc), (yyvsp[-2].internal_variable_name), (yyvsp[0].item));
          }
#line 43255 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2909:
#line 16039 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_internal((yyvsp[-2].internal_variable_name), (yyvsp[0].item), (yylsp[0]));
          }
#line 43263 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2910:
#line 16043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_user_var((yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 43271 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2911:
#line 16048 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_sys_var((yyvsp[-3].var_type), (yyvsp[-2].internal_variable_name), (yyvsp[0].item));
          }
#line 43279 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2912:
#line 16052 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_charset((yyvsp[0].lexer.charset));
          }
#line 43287 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2913:
#line 16056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Bad syntax, always fails with an error
            */
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names((yylsp[-1]));
          }
#line 43298 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2914:
#line 16063 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_set_names((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 43306 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2915:
#line 16067 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_names(nullptr, nullptr);
          }
#line 43314 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2916:
#line 16074 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_1d(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 43322 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2917:
#line 16078 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_2d((yyloc), to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 43330 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2918:
#line 16082 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_default((yyvsp[0].lexer.lex_str));
          }
#line 43338 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2919:
#line 16089 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].transaction_access_mode), (yyvsp[0].isolation_level));
          }
#line 43346 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2920:
#line 16093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].isolation_level), (yyvsp[0].transaction_access_mode));
          }
#line 43354 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2921:
#line 16100 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_access_mode)= NEW_PTN PT_transaction_access_mode((yyvsp[0].num));
          }
#line 43362 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2922:
#line 16106 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= NULL; }
#line 43368 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2923:
#line 16107 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= (yyvsp[0].transaction_access_mode); }
#line 43374 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2924:
#line 16112 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.isolation_level)= NEW_PTN PT_isolation_level((yyvsp[0].tx_isolation));
          }
#line 43382 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2925:
#line 16118 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= NULL; }
#line 43388 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2926:
#line 16119 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= (yyvsp[0].isolation_level); }
#line 43394 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2927:
#line 16123 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 43400 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2928:
#line 16124 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 43406 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2929:
#line 16128 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 43412 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2930:
#line 16129 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 43418 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2931:
#line 16130 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 43424 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2932:
#line 16131 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 43430 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2934:
#line 16136 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 43436 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2935:
#line 16138 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON", 2, system_charset_info);
          }
#line 43444 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2936:
#line 16142 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ALL", 3, system_charset_info);
          }
#line 43452 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2937:
#line 16146 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "binary", 6, system_charset_info);
          }
#line 43460 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2938:
#line 16150 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ROW", 3, system_charset_info);
          }
#line 43468 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2939:
#line 16154 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "SYSTEM", 6, system_charset_info);
          }
#line 43476 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2940:
#line 16158 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "FORCE", 5, system_charset_info);
          }
#line 43484 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2941:
#line 16167 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
          }
#line 43496 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2942:
#line 16178 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_TABLES_FOR_BACKUP;
          }
#line 43504 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2943:
#line 16182 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 43512 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2944:
#line 16186 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43518 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2945:
#line 16188 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_lock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 43529 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2950:
#line 16208 "sql_yacc.yy" /* yacc.c:1646  */
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            enum_mdl_type mdl_lock_type;

            if (lock_type >= TL_WRITE_ALLOW_WRITE)
            {
              /* LOCK TABLE ... WRITE/LOW_PRIORITY WRITE */
              mdl_lock_type= MDL_SHARED_NO_READ_WRITE;
            }
            else if (lock_type == TL_READ)
            {
              /* LOCK TABLE ... READ LOCAL */
              mdl_lock_type= MDL_SHARED_READ;
            }
            else
            {
              /* LOCK TABLE ... READ */
              mdl_lock_type= MDL_SHARED_READ_ONLY;
            }

            if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), (yyvsp[-1].lex_cstr).str, 0, lock_type,
                                           mdl_lock_type))
              MYSQL_YYABORT;
          }
#line 43558 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2951:
#line 16235 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ_NO_INSERT; }
#line 43564 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2952:
#line 16236 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_DEFAULT; }
#line 43570 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2953:
#line 16238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= TL_WRITE_LOW_PRIORITY;
            push_deprecated_warn(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
#line 43579 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2954:
#line 16242 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ; }
#line 43585 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2955:
#line 16247 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
          }
#line 43597 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2956:
#line 16258 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_UNLOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_unlock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 43608 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2957:
#line 16265 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 43616 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2958:
#line 16273 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHUTDOWN;
            (yyval.top_level_node)= NEW_PTN PT_shutdown();
          }
#line 43625 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2959:
#line 16281 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_restart_server();
          }
#line 43633 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2960:
#line 16288 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_ALTER_INSTANCE;
            (yyval.top_level_node)= (yyvsp[0].alter_instance_cmd);
          }
#line 43642 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2961:
#line 16295 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-2].lexer.lex_str), "INNODB"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_INNODB_MASTER_KEY, EMPTY_CSTR, 0);
            }
            else if (is_identifier((yyvsp[-2].lexer.lex_str), "BINLOG"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_BINLOG_MASTER_KEY, EMPTY_CSTR, 0);
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
          }
#line 43662 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2962:
#line 16311 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-3].lexer.lex_str), "INNODB"))
            {
              if ((yyvsp[0].ulong_num) > UINT_MAX32 - 1)
              {
                my_error(ER_SYSTEM_KEY_ROTATION_MAX_KEY_ID_EXCEEDED, MYF(0));
                MYSQL_YYABORT;
              }
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_INNODB_SYSTEM_KEY, EMPTY_CSTR, (yyvsp[0].ulong_num));
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-3]));
              MYSQL_YYABORT;
            }
          }
#line 43683 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2963:
#line 16328 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-2].lexer.lex_str), "REDO"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_REDO_SYSTEM_KEY, EMPTY_CSTR, 0);
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
          }
#line 43699 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2964:
#line 16340 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR, to_lex_cstring("mysql_main"), 0);
          }
#line 43707 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2965:
#line 16344 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS, to_lex_cstring("mysql_main"), 0);
          }
#line 43715 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2966:
#line 16347 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR, to_lex_cstring((yyvsp[0].lexer.lex_str)), 0);
          }
#line 43723 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2967:
#line 16350 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS, to_lex_cstring((yyvsp[-4].lexer.lex_str)), 0);
          }
#line 43731 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2968:
#line 16354 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!is_identifier((yyvsp[-1].lexer.lex_str), "INNODB"))
            {
              YYTHD->syntax_error_at((yylsp[-1]));
              MYSQL_YYABORT;
            }

            if (!is_identifier((yyvsp[0].lexer.lex_str), "REDO_LOG"))
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_ENABLE_INNODB_REDO, EMPTY_CSTR, 0);
          }
#line 43750 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2969:
#line 16369 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!is_identifier((yyvsp[-1].lexer.lex_str), "INNODB"))
            {
              YYTHD->syntax_error_at((yylsp[-1]));
              MYSQL_YYABORT;
            }

            if (!is_identifier((yyvsp[0].lexer.lex_str), "REDO_LOG"))
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_DISABLE_INNODB_REDO, EMPTY_CSTR, 0);
          }
#line 43769 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2970:
#line 16383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(RELOAD_KEYRING, EMPTY_CSTR, 0);
          }
#line 43777 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2971:
#line 16394 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_open((yyvsp[-2].table), (yyvsp[0].lex_cstr));
          }
#line 43785 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2972:
#line 16398 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_close(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
          }
#line 43793 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2973:
#line 16407 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_table_scan(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 43801 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2974:
#line 16417 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_scan(to_lex_cstring((yyvsp[-5].lexer.lex_str)),
                                              to_lex_cstring((yyvsp[-3].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 43810 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2975:
#line 16429 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_range_scan(to_lex_cstring((yyvsp[-8].lexer.lex_str)),
                                                    to_lex_cstring((yyvsp[-6].lexer.lex_str)),
                                                    (yyvsp[-5].ha_rkey_mode), (yyvsp[-3].item_list2), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 43820 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2976:
#line 16437 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 43826 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2977:
#line 16438 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 43832 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2978:
#line 16442 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 43838 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2979:
#line 16443 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 43844 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2980:
#line 16444 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RPREV;  }
#line 43850 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2981:
#line 16445 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RLAST;  }
#line 43856 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2982:
#line 16449 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 43862 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2983:
#line 16450 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 43868 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2984:
#line 16451 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 43874 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2985:
#line 16452 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 43880 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2986:
#line 16453 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 43886 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2987:
#line 16460 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_revoke_roles((yyvsp[-2].role_or_privilege_list), (yyvsp[0].user_list));
            MAKE_CMD(tmp);
          }
#line 43895 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2988:
#line 16465 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (apply_privileges(YYTHD, *(yyvsp[-5].role_or_privilege_list)))
              MYSQL_YYABORT;
            lex->sql_command= (lex->grant == GLOBAL_ACLS) ? SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-3].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-3].acl_type));
            lex->users_list= *(yyvsp[0].user_list);
          }
#line 43914 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2989:
#line 16480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 43923 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2990:
#line 16485 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= (lex->grant == (GLOBAL_ACLS & ~GRANT_ACL)) ?
                                                            SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-3].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-3].acl_type));
            lex->users_list= *(yyvsp[0].user_list);
          }
#line 43941 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2991:
#line 16499 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
            Lex->users_list= *(yyvsp[0].user_list);
          }
#line 43950 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2992:
#line 16504 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->users_list= *(yyvsp[0].user_list);
            lex->users_list.push_front ((yyvsp[-2].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 43962 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2993:
#line 16515 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_grant_roles((yyvsp[-3].role_or_privilege_list), (yyvsp[-1].user_list), (yyvsp[0].is_not_empty));
            MAKE_CMD(tmp);
          }
#line 43971 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2994:
#line 16521 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if (apply_privileges(YYTHD, *(yyvsp[-7].role_or_privilege_list)))
              MYSQL_YYABORT;

            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 43990 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2995:
#line 16536 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 43999 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2996:
#line 16541 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 44015 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2997:
#line 16553 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[0].is_not_empty))
              lex->grant |= GRANT_ACL;
            lex->users_list= *(yyvsp[-1].user_list);
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 44029 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2998:
#line 16565 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 44035 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2999:
#line 16566 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 44041 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3000:
#line 16567 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::FUNCTION; }
#line 44047 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3001:
#line 16568 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::PROCEDURE; }
#line 44053 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3004:
#line 16578 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= NEW_PTN Mem_root_array<PT_role_or_privilege *>(YYMEM_ROOT);
            if ((yyval.role_or_privilege_list) == NULL || (yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 44063 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3005:
#line 16584 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= (yyvsp[-2].role_or_privilege_list);
            if ((yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 44073 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3006:
#line 16593 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lex_cstring_list) == NULL)
              (yyval.role_or_privilege)= NEW_PTN PT_role_or_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
            else
              (yyval.role_or_privilege)= NEW_PTN PT_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
          }
#line 44084 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3007:
#line 16600 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_role_at_host((yylsp[-2]), (yyvsp[-2].lexer.lex_str), (yyvsp[0].lexer.lex_str)); }
#line 44090 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3008:
#line 16602 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SELECT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 44096 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3009:
#line 16604 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), INSERT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 44102 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3010:
#line 16606 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), UPDATE_ACL, (yyvsp[0].lex_cstring_list)); }
#line 44108 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3011:
#line 16608 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REFERENCES_ACL, (yyvsp[0].lex_cstring_list)); }
#line 44114 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3012:
#line 16610 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DELETE_ACL); }
#line 44120 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3013:
#line 16612 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), 0); }
#line 44126 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3014:
#line 16614 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), INDEX_ACL); }
#line 44132 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3015:
#line 16616 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), ALTER_ACL); }
#line 44138 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3016:
#line 16618 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), CREATE_ACL); }
#line 44144 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3017:
#line 16620 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DROP_ACL); }
#line 44150 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3018:
#line 16622 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EXECUTE_ACL); }
#line 44156 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3019:
#line 16624 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), RELOAD_ACL); }
#line 44162 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3020:
#line 16626 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SHUTDOWN_ACL); }
#line 44168 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3021:
#line 16628 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), PROCESS_ACL); }
#line 44174 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3022:
#line 16630 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), FILE_ACL); }
#line 44180 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3023:
#line 16632 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), GRANT_ACL);
            Lex->grant_privilege= true;
          }
#line 44189 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3024:
#line 16637 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_DB_ACL); }
#line 44195 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3025:
#line 16639 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* DEPRECATED */
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SUPER_ACL);
            if (Lex->grant != GLOBAL_ACLS)
            {
              /*
                 An explicit request was made for the SUPER priv id
              */
              push_warning(Lex->thd, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX,
                           "The SUPER privilege identifier is deprecated");
            }
          }
#line 44213 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3026:
#line 16653 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-2]), CREATE_TMP_ACL); }
#line 44219 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3027:
#line 16655 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), LOCK_TABLES_ACL); }
#line 44225 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3028:
#line 16657 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_SLAVE_ACL); }
#line 44231 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3029:
#line 16659 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_CLIENT_ACL); }
#line 44237 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3030:
#line 16661 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_VIEW_ACL); }
#line 44243 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3031:
#line 16663 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_VIEW_ACL); }
#line 44249 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3032:
#line 16665 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_PROC_ACL); }
#line 44255 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3033:
#line 16667 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), ALTER_PROC_ACL); }
#line 44261 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3034:
#line 16669 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_USER_ACL); }
#line 44267 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3035:
#line 16671 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EVENT_ACL); }
#line 44273 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3036:
#line 16673 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), TRIGGER_ACL); }
#line 44279 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3037:
#line 16675 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_TABLESPACE_ACL); }
#line 44285 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3038:
#line 16677 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_ROLE_ACL); }
#line 44291 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3039:
#line 16679 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), DROP_ROLE_ACL); }
#line 44297 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3040:
#line 16683 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 44303 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3041:
#line 16684 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 44309 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3046:
#line 16699 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[0].lexer.lex_str).str;
          }
#line 44323 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3047:
#line 16709 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[0].lexer.lex_str).str;
          }
#line 44337 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3048:
#line 16719 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[0].lexer.lex_str).str;
          }
#line 44351 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3049:
#line 16732 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_query_block()->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 44369 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3050:
#line 16746 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_query_block()->db = (yyvsp[-2].lexer.lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 44385 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3051:
#line 16758 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_query_block()->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 44401 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3052:
#line 16770 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto tmp = NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_query_block()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 44417 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3053:
#line 16782 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto schema_name = YYCLIENT_NO_SCHEMA ? LEX_CSTRING{}
                                                  : to_lex_cstring((yyvsp[-2].lexer.lex_str).str);
            auto tmp = NEW_PTN Table_ident(schema_name, to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_query_block()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 44435 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3054:
#line 16799 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44445 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3055:
#line 16805 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44455 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3056:
#line 16814 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44465 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3057:
#line 16820 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44475 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3058:
#line 16828 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 44481 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3059:
#line 16829 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 44487 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3060:
#line 16833 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 44493 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3061:
#line 16834 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 44499 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3062:
#line 16838 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->has_password_generator= false;
            (yyvsp[-3].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
          }
#line 44514 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3063:
#line 16849 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->has_password_generator= true;
            (yyvsp[-4].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-4].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-4].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-4].lex_user)->discard_old_password= false;
            (yyvsp[-4].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
          }
#line 44529 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3064:
#line 16860 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->plugin.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-3].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->has_password_generator= false;
          }
#line 44544 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3065:
#line 16871 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->plugin.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-5].lex_user)->uses_authentication_string_clause= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= false;
            (yyvsp[-5].lex_user)->has_password_generator= false;
          }
#line 44561 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3066:
#line 16884 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->plugin.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
            (yyvsp[-5].lex_user)->has_password_generator= false;
          }
#line 44579 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3067:
#line 16898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->has_password_generator= true;
          }
#line 44595 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3068:
#line 16910 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[0].lex_user);
            (yyvsp[0].lex_user)->auth= NULL_CSTR;
            (yyvsp[0].lex_user)->discard_old_password= false;
            (yyvsp[0].lex_user)->retain_current_password= false;
            (yyvsp[0].lex_user)->has_password_generator= false;
          }
#line 44607 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3069:
#line 16921 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->has_password_generator= false;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_replace_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 44625 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3070:
#line 16936 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-8].lex_user);
            (yyvsp[-8].lex_user)->has_password_generator= false;
            (yyvsp[-8].lex_user)->plugin.str= (yyvsp[-5].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->plugin.length= (yyvsp[-5].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->auth.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->auth.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->uses_replace_clause= true;
            (yyvsp[-8].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-8].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-8].lex_user)->discard_old_password= false;
            (yyvsp[-8].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 44646 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3071:
#line 16953 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->has_password_generator= false;
            (yyvsp[-4].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-4].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-4].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-4].lex_user)->discard_old_password= false;
            (yyvsp[-4].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 44661 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3072:
#line 16964 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->has_password_generator= true;
            (yyvsp[-5].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 44676 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3073:
#line 16975 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-7].lex_user);
            (yyvsp[-7].lex_user)->has_password_generator= true;
            (yyvsp[-7].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-7].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-7].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-7].lex_user)->uses_replace_clause= true;
            (yyvsp[-7].lex_user)->discard_old_password= false;
            (yyvsp[-7].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            (yyvsp[-7].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-7].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            Lex->contains_plaintext_password= true;
          }
#line 44694 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3074:
#line 16989 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->plugin.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-3].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->has_password_generator= false;
          }
#line 44709 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3075:
#line 17001 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_authentication_string_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            (yyvsp[-6].lex_user)->has_password_generator= false;
          }
#line 44726 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3076:
#line 17015 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->has_password_generator= false;
          }
#line 44744 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3077:
#line 17030 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-7].lex_user);
            (yyvsp[-7].lex_user)->plugin.str= (yyvsp[-4].lexer.lex_str).str;
            (yyvsp[-7].lex_user)->plugin.length= (yyvsp[-4].lexer.lex_str).length;
            (yyvsp[-7].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-7].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-7].lex_user)->discard_old_password= false;
            (yyvsp[-7].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
            (yyvsp[-7].lex_user)->has_password_generator= true;
          }
#line 44760 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3078:
#line 17042 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-1].lex_user);
            (yyvsp[-1].lex_user)->discard_old_password= (yyvsp[0].is_not_empty);
            (yyvsp[-1].lex_user)->retain_current_password= false;
            (yyvsp[-1].lex_user)->auth= NULL_CSTR;
            (yyvsp[-1].lex_user)->has_password_generator= false;
          }
#line 44772 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3079:
#line 17053 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44781 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3080:
#line 17058 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44790 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3081:
#line 17066 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
         }
#line 44799 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3082:
#line 17071 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44808 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3083:
#line 17078 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= NULL; }
#line 44814 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3084:
#line 17079 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= (yyvsp[-1].lex_cstring_list); }
#line 44820 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3085:
#line 17084 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= NEW_PTN Mem_root_array<LEX_CSTRING>(YYMEM_ROOT);
            if ((yyval.lex_cstring_list) == NULL || (yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 44830 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3086:
#line 17090 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= (yyvsp[-2].lex_cstring_list);
            if ((yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 44840 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3088:
#line 17100 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
#line 44848 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3089:
#line 17104 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
#line 44856 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3090:
#line 17108 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
#line 44864 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3091:
#line 17112 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
#line 44872 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3092:
#line 17118 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44878 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3093:
#line 17120 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 44884 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3094:
#line 17124 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 44890 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3095:
#line 17125 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 44896 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3096:
#line 17129 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 44902 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3097:
#line 17131 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NAME;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 44910 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3098:
#line 17135 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.role_type = role_enum::ROLE_ALL;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 44919 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3099:
#line 17140 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 44925 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3100:
#line 17142 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_DEFAULT; }
#line 44931 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3101:
#line 17146 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.grant_as_used = false; }
#line 44937 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3102:
#line 17148 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.grant_as_used = true;
            Lex->grant_as.user = (yyvsp[-1].lex_user);
          }
#line 44946 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3103:
#line 17155 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 44956 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3104:
#line 17160 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44962 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3105:
#line 17164 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44968 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3106:
#line 17165 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44974 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3107:
#line 17170 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 44980 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3108:
#line 17171 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 44986 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3109:
#line 17172 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 44992 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3110:
#line 17177 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 44998 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3111:
#line 17178 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 45004 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3112:
#line 17179 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 45010 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3113:
#line 17183 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45016 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3114:
#line 17184 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45022 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3115:
#line 17189 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 45035 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3116:
#line 17201 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 45048 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3117:
#line 17211 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 45058 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3118:
#line 17220 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 45068 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3119:
#line 17229 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 45078 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3120:
#line 17242 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 45084 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3121:
#line 17243 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 45090 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3122:
#line 17244 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=0; }
#line 45096 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3125:
#line 17257 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.subquery)= NEW_PTN PT_subquery((yyloc), (yyvsp[0].query_primary));
          }
#line 45104 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3126:
#line 17263 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_STRAIGHT_JOIN; }
#line 45110 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3127:
#line 17264 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_HIGH_PRIORITY; }
#line 45116 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3128:
#line 17265 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_DISTINCT; }
#line 45122 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3129:
#line 17266 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_SMALL_RESULT; }
#line 45128 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3130:
#line 17267 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_BIG_RESULT; }
#line 45134 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3131:
#line 17268 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= OPTION_BUFFER_RESULT; }
#line 45140 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3132:
#line 17269 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_SQL_CALC_FOUND_ROWS));
            (yyval.ulonglong_number)= OPTION_FOUND_ROWS;
          }
#line 45151 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3133:
#line 17275 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_ALL; }
#line 45157 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3134:
#line 17286 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Initialize context for 'CREATE view_or_trigger_or_sp_or_event'
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
#line 45168 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3135:
#line 17296 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45174 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3136:
#line 17298 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45180 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3137:
#line 17300 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45186 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3151:
#line 17333 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
#line 45201 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3152:
#line 17347 "sql_yacc.yy" /* yacc.c:1646  */
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[0].lex_user));
          }
#line 45209 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3153:
#line 17360 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45215 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3154:
#line 17362 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45221 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3155:
#line 17364 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45227 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3156:
#line 17369 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_mode= enum_view_create_mode::VIEW_CREATE_OR_REPLACE; }
#line 45233 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3157:
#line 17374 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
#line 45239 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3158:
#line 17376 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
#line 45245 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3159:
#line 17378 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TEMPTABLE; }
#line 45251 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3160:
#line 17383 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
#line 45257 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3161:
#line 17385 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
#line 45263 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3162:
#line 17387 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
#line 45269 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3163:
#line 17392 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->query_block->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_IGNORE,
                                                    MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            thd->parsing_system_view= lex->query_tables->is_system_view;
            if ((yyvsp[0].simple_ident_list).size())
            {
              for (auto column_alias : (yyvsp[0].simple_ident_list))
              {
                // Report error if the column name/length is incorrect.
                if (check_column_name(column_alias.str))
                {
                  my_error(ER_WRONG_COLUMN_NAME, MYF(0), column_alias.str);
                  MYSQL_YYABORT;
                }
              }
              /*
                The $4 object is short-lived (its 'm_array' is not);
                so we have to duplicate it, and then we can store a
                pointer.
              */
              void *rawmem= thd->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
              if (!rawmem)
                MYSQL_YYABORT; /* purecov: inspected */
              lex->query_tables->
                set_derived_column_names(static_cast<Create_col_name_list* >(rawmem));
            }
          }
#line 45309 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3165:
#line 17432 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= false;
            lex->parsing_options.allows_select_into= false;

            /*
              In CREATE VIEW v ... the table_list initially contains
              here a table entry for the destination "table" `v'.
              Backup it and clean the table list for the processing of
              the query expression and push `v' back to the beginning of the
              table_list finally.

              @todo: Don't save the CREATE destination table in
                     Query_block::table_list and remove this backup & restore.

              The following work only with the local list, the global list
              is created correctly in this case
            */
            SQL_I_List<TABLE_LIST> save_list;
            Query_block * const save_query_block= Select;
            save_query_block->table_list.save_and_clear(&save_list);

            CONTEXTUALIZE((yyvsp[-1].query_primary));

            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            save_query_block->table_list.push_front(&save_list);

            Lex->create_view_check= (yyvsp[0].num);

            /*
              It's simpler to use @$ to grab the whole rule text, OTOH  it's
              also simple to lose something that way when changing this rule,
              so let use explicit @1 and @2 to memdup this view definition:
            */
            const size_t len= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;
            lex->create_view_query_block.str=
              static_cast<char *>(thd->memdup((yylsp[-1]).cpp.start, len));
            lex->create_view_query_block.length= len;
            trim_whitespace(thd->charset(), &lex->create_view_query_block);

            lex->parsing_options.allows_variable= true;
            lex->parsing_options.allows_select_into= true;
          }
#line 45361 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3166:
#line 17482 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_NONE; }
#line 45367 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3167:
#line 17483 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 45373 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3168:
#line 17484 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 45379 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3169:
#line 17485 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 45385 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3170:
#line 17496 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 45391 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3171:
#line 17498 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 45397 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3172:
#line 17503 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_characteristics).anchor_trigger_name= NULL_CSTR;
            }
#line 45406 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3173:
#line 17509 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_characteristics).anchor_trigger_name= { (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length };
            }
#line 45415 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3174:
#line 17526 "sql_yacc.yy" /* yacc.c:1646  */
    {                 /* $11 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::TRIGGER, (yyvsp[-8].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum enum_trigger_action_time_type) (yyvsp[-7].num);
            sp->m_trg_chistics.event= (enum enum_trigger_event_type) (yyvsp[-6].num);
            sp->m_trg_chistics.ordering_clause= (yyvsp[0].trg_characteristics).ordering_clause;
            sp->m_trg_chistics.anchor_trigger_name= (yyvsp[0].trg_characteristics).anchor_trigger_name;

            lex->stmt_definition_begin= (yylsp[-9]).cpp.start;
            lex->ident.str= const_cast<char *>((yylsp[-4]).cpp.start);
            lex->ident.length= (yylsp[-2]).cpp.start - (yylsp[-4]).cpp.start;

            lex->sphead= sp;
            lex->spname= (yyvsp[-8].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 45451 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3175:
#line 17558 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->query_block->add_table_to_list(thd, (yyvsp[-6].table),
                                                    nullptr,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;

            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_create_trigger();
          }
#line 45482 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3176:
#line 17595 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yylsp[-5]).cpp.start;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 45503 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3177:
#line 17613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yylsp[-5]).cpp.start;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 45524 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3178:
#line 17635 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $4 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->spname= (yyvsp[-1].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            sp->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 45551 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3179:
#line 17659 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $7 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
          }
#line 45559 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3180:
#line 17665 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $11 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if ((field_type == MYSQL_TYPE_STRING || field_type == MYSQL_TYPE_VARCHAR)
                && ((yyvsp[-1].type)->get_type_flags() & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (sp->m_return_field_def.init(YYTHD, "", field_type,
                                            (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                            (yyvsp[-1].type)->get_type_flags(), NULL, NULL, &NULL_CSTR, 0,
                                            (yyvsp[-1].type)->get_interval_list(),
                                            cs ? cs : YYTHD->variables.collation_database,
                                            (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(), nullptr,
                                            nullptr, nullptr, {},
                                            dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(YYTHD,
                                        &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 45604 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3181:
#line 17706 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 45616 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3182:
#line 17714 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::SL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER_THD(thd, ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
#line 45675 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3183:
#line 17773 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$3*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yylsp[0]).cpp.start;

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::PROCEDURE, (yyvsp[0].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
          }
#line 45699 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3184:
#line 17793 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$5*/
            Lex->sphead->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 45707 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3185:
#line 17798 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$8*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 45719 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3186:
#line 17806 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$10*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 45731 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3187:
#line 17814 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$12*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
#line 45744 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3188:
#line 17828 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_START;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_start((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 45753 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3189:
#line 17833 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_END;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_end((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 45762 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3190:
#line 17838 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_prepare((yyvsp[0].xid));
          }
#line 45771 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3191:
#line 17843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_commit((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 45780 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3192:
#line 17848 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_rollback((yyvsp[0].xid));
          }
#line 45789 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3193:
#line 17853 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_recover((yyvsp[0].is_not_empty));
          }
#line 45798 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3194:
#line 17860 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 45804 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3195:
#line 17861 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 45810 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3196:
#line 17865 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
            (yyval.xid)= xid;
          }
#line 45823 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3197:
#line 17874 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
            (yyval.xid)= xid;
          }
#line 45837 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3198:
#line 17884 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // check for overwflow of xid format id
            bool format_id_overflow_detected= ((yyvsp[0].ulong_num) > LONG_MAX);

            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[-2].string)->length() <= MAXBQUALSIZE
                                 && !format_id_overflow_detected);

            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
            (yyval.xid)= xid;
          }
#line 45856 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3199:
#line 17901 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45862 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3200:
#line 17902 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45868 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3201:
#line 17906 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 45874 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3202:
#line 17907 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_JOIN;        }
#line 45880 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3203:
#line 17908 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_RESUME;      }
#line 45886 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3204:
#line 17912 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 45892 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3205:
#line 17913 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_ONE_PHASE;   }
#line 45898 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3206:
#line 17918 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 45904 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3207:
#line 17920 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_SUSPEND;     }
#line 45910 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3208:
#line 17922 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_FOR_MIGRATE; }
#line 45916 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3209:
#line 17927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_plugin(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str));
          }
#line 45926 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3210:
#line 17933 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_component((yyvsp[0].lex_str_list));
          }
#line 45936 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3211:
#line 17942 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_plugin(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 45946 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3212:
#line 17948 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_component((yyvsp[0].lex_str_list));
          }
#line 45956 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3213:
#line 17957 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list).init(YYTHD->mem_root);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 45966 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3214:
#line 17963 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list)= (yyvsp[-2].lex_str_list);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 45976 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3215:
#line 17972 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_import_table((yyvsp[0].lex_str_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_IMPORT;
          }
#line 45989 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3216:
#line 17990 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 46000 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3217:
#line 18000 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            /* Reject space characters around ':' */
            if ((yylsp[-4]).raw.start - (yylsp[-6]).raw.end != 1) {
              YYTHD->syntax_error_at((yylsp[-5]));
              MYSQL_YYABORT;
            }
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone((yyvsp[-6].lex_user), (yyvsp[-4].ulong_num), to_lex_cstring((yyvsp[0].lexer.lex_str)));

            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 46022 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3218:
#line 18021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= null_lex_str;
          }
#line 46030 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3219:
#line 18025 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[-1].lexer.lex_str);
          }
#line 46038 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3220:
#line 18032 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
          }
#line 46046 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3221:
#line 18036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_SPECIFIED;
          }
#line 46054 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3222:
#line 18040 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NONE;
          }
#line 46062 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3223:
#line 18046 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::USER_RESOURCE_GROUP; }
#line 46068 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3224:
#line 18047 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::SYSTEM_RESOURCE_GROUP; }
#line 46074 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3225:
#line 18052 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Make an empty list. */
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr)
              MYSQL_YYABORT;
          }
#line 46085 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3226:
#line 18058 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_vcpu_list_type)= (yyvsp[0].resource_group_vcpu_list_type); }
#line 46091 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3227:
#line 18063 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 46102 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3228:
#line 18070 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= (yyvsp[-2].resource_group_vcpu_list_type);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 46113 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3229:
#line 18080 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto cpu_id= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= (yyval.vcpu_range_type).end=
              static_cast<resourcegroups::platform::cpu_id_t>(cpu_id);
            assert((yyval.vcpu_range_type).start == cpu_id); // truncation check
          }
#line 46124 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3230:
#line 18087 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto start= my_strtoull((yyvsp[-2].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= static_cast<resourcegroups::platform::cpu_id_t>(start);
            assert((yyval.vcpu_range_type).start == start); // truncation check

            auto end= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).end= static_cast<resourcegroups::platform::cpu_id_t>(end);
            assert((yyval.vcpu_range_type).end == end); // truncation check
          }
#line 46138 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3231:
#line 18099 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 46144 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3232:
#line 18100 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= -static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 46150 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3233:
#line 18104 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_priority_type).is_default= true; }
#line 46156 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3234:
#line 18106 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_priority_type).is_default= false;
            (yyval.resource_group_priority_type).value= (yyvsp[0].num);
          }
#line 46165 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3235:
#line 18113 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_state_type).is_default= true; }
#line 46171 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3236:
#line 18115 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= true;
          }
#line 46180 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3237:
#line 18120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= false;
          }
#line 46189 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3238:
#line 18127 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= false; }
#line 46195 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3239:
#line 18128 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= true; }
#line 46201 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3240:
#line 18134 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lexer.lex_str).str[0] != '\0') {
              size_t eoff = 0;
              std::string emsg;
              if (!is_valid_json_syntax((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &eoff, &emsg)) {
                my_error(ER_INVALID_JSON_ATTRIBUTE, MYF(0),
                         emsg.c_str(), eoff, (yyvsp[0].lexer.lex_str).str+eoff);
                MYSQL_YYABORT;
              }
            }
            (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 46218 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;


#line 46222 "/mnt/jenkins/workspace/ps8.0-autobuild-RELEASE/test/percona-server/sql/sql_yacc.cc" /* yacc.c:1646  */
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (&yylloc, YYTHD, parse_tree, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }

  yyerror_range[1] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, &yylloc, YYTHD, parse_tree);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[1] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYTERROR;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;

      yyerror_range[1] = *yylsp;
      yydestruct ("Error: popping",
                  yystos[yystate], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  yyerror_range[2] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the lookahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, YYTHD, parse_tree, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, &yylloc, YYTHD, parse_tree);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  yystos[*yyssp], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  return yyresult;
}
